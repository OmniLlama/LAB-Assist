{"version":3,"sources":["../src/load_musicxml_file.ts","index.js"],"names":["sequencer","saveAs","navigator","msSaveOrOpenBlob","bind","view","test","userAgent","doc","document","URL","webkitURL","save_link","createElementNS","can_use_save_link","externalHost","webkit_req_fs","webkitRequestFileSystem","req_fs","requestFileSystem","mozRequestFileSystem","throw_outside","ex","setImmediate","setTimeout","fs_min_size","deletion_queue","process_deletion_queue","i","length","file","revokeObjectURL","remove","dispatch","filesaver","event_types","event","concat","listener","call","FileSaver","blob","name","object_url","target_view","slice","type","blob_changed","get_object_url","createObjectURL","push","dispatch_all","split","fs_error","location","href","window","open","readyState","DONE","abortable","func","apply","arguments","create_if_not_found","create","exclusive","INIT","download","createEvent","initMouseEvent","dispatchEvent","chrome","webkitSlice","size","TEMPORARY","fs","root","getDirectory","dir","save","getFile","createWriter","writer","onwriteend","toURL","onerror","error","code","ABORT_ERR","forEach","write","abort","WRITING","NOT_FOUND_ERR","FS_proto","prototype","onwritestart","onprogress","onwrite","onabort","addEventListener","unload","removeEventListener","self","content","version","openModule","protectedScope","context","gainNode","compressor","os","browser","initMethods","webaudioUnlocked","sampleIndex","compressorParams","ua","match","indexOf","AudioContext","createGainNode","createGain","webkitAudioContext","Error","createDynamicsCompressor","connect","destination","gain","value","masterGainNode","masterCompressor","useDelta","timedTasks","scheduledTasks","repetitiveTasks","getSampleId","Date","getTime","addInitMethod","method","callInitMethods","maxi","ui","legacy","midi","webmidi","webaudio","jazz","ogg","mp3","record_audio","undefined","getUserMedia","bitrate_mp3_encoding","util","debug","defaultInstrument","pitch","bufferTime","autoAdjustBufferTime","noteNameMode","minimalSongLength","pauseOnBlur","restartOnFocus","defaultPPQ","overrulePPQ","precision","midiInputs","midiOutputs","storage","id","audio","recordings","instruments","samplepacks","assetpacks","getAudioContext","getMasterGainNode","currentTime","getTimeDiff","contextTime","performance","now","setMasterVolume","getMasterVolume","getCompressionReduction","reduction","enableMasterCompressor","flag","disconnect","configureMasterCompressor","cfg","param","unlockWebAudio","resume","src","createOscillator","noteOn","start","stop","noteOff","Object","defineProperty","assetManager","findItem","deleteItem","typeString","objectForEach","updateInstruments","findItemsInFolder","busy","taskIndex","finishedTasks","taskQueue","callbacks","removeMidiFile","path","item","items","className","localPath","removeInstrument","unloadSamples","folder","mapping","samplePath","hasOwnProperty","sample_path","n","removeSamplePack","samples","sample","s","reset","removeAssetPack","startTaskQueue","cb","loadQueueLoop","index","onTaskQueueDone","task","params","scope","j","callback","taskIds","performCallback","m","console","log","cbActionLoop","success","addTask","callbackAfterAllTasksAreDone","addCallbackAfterTask","getInstrument","exact_match","getMidiFile","getSamplePack","getSample","getAssetPack","getSamplePacks","include_subfolders","getAssetPacks","getSamples","getInstruments","getMidiFiles","loadLoop","storeItem","getArguments","isEmptyObject","assetPack","ajax","parseUrl","AssetPack","load","pack","url","responseType","onError","e","cleanup","assetpack","onSuccess","data","fileSize","loaded","filesize","midifiles","assets","asset","store","occupied","action","warn","packs","tmp","p","double","addMidiFile","addInstrument","addSamplePack","config","val","key","addAssetPack","json","JSON","parse","round","audioEvent","AudioEvent","Array","ticks","buffer","sampleId","WARN","replace","durationTicks","durationMillis","duration","muted","velocity","sampleOffsetTicks","sampleOffsetMillis","sampleOffset","latencyCompensation","playheadOffset","time","update","pos","song","getPosition","millis","endTicks","endMillis","stopSample","seconds","track","setSampleOffset","setDuration","clone","copy","property","trackId","part","partId","fromPart","fromTrack","fromSong","channel","move","isNaN","parseInt","state","needsUpdate","moveTo","position","createAudioEvent","audioRecorder","encode64","createWorker","getWaveformData","localMediaStream","millisPerSample","microphoneAccessGranted","waveformConfig","height","width","sampleStep","color","bgcolor","AudioRecorder","audioEvents","worker","onmessage","encodeAudioBuffer","wavArrayBuffer","interleavedSamples","decodeAudioData","audioBuffer","base64","recording","recordId","wav","Blob","Uint8Array","dataUrl","waveform","dataUrls","prepare","record","stream","postMessage","command","sampleRate","scriptProcessor","createScriptProcessor","onaudioprocess","inputBuffer","numberOfChannels","getChannelData","precounting","createAudio","sourceNode","createMediaStreamSource","stopRecordingTimestamp","timestamp","scriptProcessors","bufferIndexStart","metronome","precountDurationInMillis","audioRecordingLatency","bufferIndexEnd","setAudioRecordingLatency","terminate","createAudioRecorder","createAudioRecorderWorker","songDispatchEvent","audioTrack","unscheduleCallback","AudioTrack","scheduledSamples","recorder","processEvent","createSample","offset","mute","output","allNotesOff","unschedule","prepareForRecording","stopRecording","createAudioTrack","channelEffects","createClass","Reverb","Panner","Panner2","Delay","BiQuadFilter","Compressor","Effect","bypass","amount","wetGain","dryGain","setInput","input","node","setAmount","createReverb","createPanner","createPanner2","createDelay","createCompressor","createBiQuadFilter","createConvolver","panningModel","setPosition","delayTime","createBiquadFilter","Q","frequency","x","y","z","Math","abs","xDeg","zDeg","sin","PI","setTime","eventStatistics","getStats","createNote","findEvent","getEvents","args","operator","events","searchPattern","patternLength","propValue","minNoteName","maxNoteName","numArgs","min","max","sum","avg","useNoteName","supportedProperties","supportedOperators","shift","join","noteName","createMidiNote","midiEventNumberByName","patterns","operators","findNote","checkValue","createPattern","checkOperators","checkCondition","checkCondition2","inverseOperator","removeMutualEvents","removeDoubleEvents","performSearch","properties","logicalOperatorsRegex","RegExp","bar","beat","sixteenth","tick","barsbeats","musical_time","hour","minute","second","millisecond","linear_time","data1","data2","noteNumber","searchString","pattern","patternIndex","operatorIndex","results","lastResult","subResult1","resultSet1","resultSet2","eventId","addEvent","maxj","result","lastId","sort","a","b","eventNumber","inverse","searchResult","operator1","operator2","value1","value2","numEvents","isString","obj","eventsMidiTime","pop","check","check2","number","inversedOperator","noteOnEvent","noteOnEvents","resultsFiltered","NOTE_ON","NOTE_OFF","sortIndex","instrument","remap","transpose","Instrument","SimpleSynth","createAutoPanner","getValue","scheduledEvents","sustainPedalDown","sustainPedalSamples","sampleDataByNoteNumber","sampleData","info","instrument_info","author","instrument_author","license","instrument_license","updateTaskId","setInstrument","v","v1","v2","octave","note","pathArray","names","subdata","sampleConfig","samplePack","audioFolder","notename_mode","me","autopan","singlePitch","single_pitch","keyScalingRelease","keyscaling_release","keyScalingPanning","keyscaling_panning","keyRange","keyrange","key_range","lowestNote","highestNote","numNotes","release_duration","releaseDuration","releaseEnvelope","release_envelope","autoPanner","samplepack","substring","getNoteNumber","getNoteNameFromNoteNumber","multiLayered","parseSampleData","toLowerCase","bufferId","sustain","sustain_start","sustain_end","samplesById","release","r","panPosition","panning","getInfoAsHTML","html","instrumentInfo","samplepackInfo","sp","getFullNoteName","compression","getInfo","addData","setKeyScalingPanning","end","panStep","currentPan","numSamples","setRelease","envelope","setKeyScalingRelease","releaseStep","currentRelease","semitones","cb1","cb2","loop","num","transposedBuffer","midiEvent","stopNote","playNote","stopSustain","setPanning","setValueAtTime","midiNote","sourceId","fullName","hasScheduledSamples","reschedule","arg","allNotesOffPart","createInstrument","pathToArray","getEqualPowerCurve","waveForm","wave_form","oscillator","createSimpleSynth","instrumentConfig","InstrumentConfig","keyEditor","KeyEditor","createIteratorFactory","createPlayhead","arrayToObject","floor","setPageData","checkNextPage","checkScrollPosition","updateDataKeys","ceil","playhead","numBars","bars","newNumBars","eventListeners","interrupt","iteratorFactory","verticalLine","createVerticalLineIterator","horizontalLine","createHorizontalLineIterator","eventIterator","createEventIterator","noteIterator","createNoteIterator","partIterator","createPartIterator","exactFitVertical","exactFitHorizontal","activeEvents","activeNotes","activeParts","newEvents","newNotes","newParts","changedEvents","changedNotes","changedParts","removedEvents","removedNotes","removedParts","recordedNotesObj","recordedEventsObj","snapshot","paginate","pageNo","barsPerPage","pageWidth","pageHeight","pitchRange","pitchHeight","setStartPosition","startPosition","setEndPosition","endPosition","numTicks","startTicks","tickWidth","viewportWidth","ticksPerBar","scrollX","scrollPosition","viewportTicks","maxScrollPosition","scrollLimit","viewportHeight","scrollY","currentPage","numPages","snapValueX","snapX","snapValueY","snapY","setSnapX","setSnapY","setBarsPerPage","bbp","snapWidth","snapTicks","playing","setViewport","w","h","draw","updateSong","arr","bbox","getNoteRect","getPartRect","removedEventsObj","removedNotesObj","removedPartsObj","startMillis","ids","editor","nextPage","startBar","lastPage","prevPage","gotoPage","scroll","updateScroll","getEventRect","ticksToX","pitchToY","top","left","bottom","right","endless","stats","getBBox","endEvent","getPart","startMoveNote","selectedNote","gripX","stopMoveNote","moveNote","newPitch","yToPitch","oldPitch","newTicks","xToTicks","oldTicks","transposeNote","startMovePart","selectedPart","stopMovePart","movePart","autoUpdate","transposePart","getTicksAt","snap","getPitchAt","getXAt","getYAt","getPositionAt","set","get","getPlayheadX","compensateForScroll","setPlayheadToX","setPlayhead","getPlayheadPosition","setPlayheadPosition","getEventAt","getSongPosition","getEventsInRect","getNoteAt","getNotesInRect","snapHeight","beatLength","denominator","ppq","nominator","removeNote","removeEvents","removePart","getSnapshot","activeEventsObj","activeNotesObj","activePartsObj","recordedNotesSong","recordedEventsSong","endBar","nonActiveEvents","nonActiveNotes","nonActiveParts","prevActiveEvents","prevActiveNotes","prevActiveParts","recordedEvents","recordedNotes","recordingNotes","activeStateChangedEvents","activeStateChangedNotes","activeStateChangedParts","lastBar","active","inActive","recorded","new","changed","removed","stateChanged","notes","parts","hasNewBars","newWidth","requestAnimationFrame","listeners","createKeyEditor","objectToArray","getScaffoldingBars","createKeyEditorIteratorFactory","keyEditorIteratorFactory","minWidthSixteenth","Factory","numParts","supportedTypes","lineType","numSixteenth","getData","ticksPerBeat","ticksPerSixteenth","next","t","hasNext","diffTicks","setType","range","hasNextCalled","nextEvent","types","isPlaying","eventIndex","setTypes","newNote","nextNote","parseEvents","parseMetronomeEvents","Metronome","methodMap","volume","noteNumberAccentedTick","noteNumberNonAccentedTick","velocityAccentedTick","velocityNonAccentedTick","noteLengthAccentedTick","noteLengthNonAccentedTick","checkNumber","createEvents","noteLength","beatsPerBar","noteNumberAccented","noteNumberNonAccented","noteLengthAccented","noteLengthNonAccented","velocityAccented","velocityNonAccented","createMidiEvent","createTrack","createPart","addPart","precountEvents","init","addEvents","updateConfig","scheduler","configure","setNoteLengthAccentedTick","setNoteLengthNonAccentedTick","setVelocityAccentedTick","setVelocityNonAccentedTick","setNoteNumberAccentedTick","setNoteNumberNonAccentedTick","createPrecountEvents","precount","endPos","getPrecountEvents","maxtime","startTime","setVolume","createMetronome","MidiEvent","midiEventId","status","bpm","controllerType","controllerValue","programNumber","semi","setPitch","midiEventNames","lowerCaseToNumber","upperCaseToNumber","numberToLowerCase","numberToUpperCase","numberByName","no","nameByNumber","upperOrLower","checkEventType","midiEventNameByNumber","midiFile","base64ToBinary","parseMidiFile","MidiFile","midifile","numTracks","tmpTicks","parsed","timeEvents","ppqFactor","lastType","tracks","header","deltaTime","subtype","numNoteOn","numNoteOff","numOther","text","instrumentName","microsecondsPerBeat","numerator","autoSize","arraybuffer","MidiFile2","reader","FileReader","_promise","Promise","executor","resolve","reject","readAsArrayBuffer","lastIndexOf","createMidiFile","mf","MidiNote","midiNoteId","on","off","MIDI_NOTE","addNoteOff","midiParse","lastEventTypeByte","trackName","createStream","readChunk","read","readInt32","readEvent","readVarInt","eventTypeByte","param1","readInt8","subtypeByte","readInt16","hourByte","frameRate","sec","frame","subframe","pow","thirtyseconds","scale","eventType","parseStream","formatType","trackCount","timeDivision","trackChunk","trackStream","headerChunk","headerStream","trackNames","eof","midiStream","fcc","String","fromCharCode","signed","toString","midiSystem","songMidiEventListener","midiAccess","midiInputsOrder","midiOutputsOrder","midiInitialized","midiEventListenerId","getDevices","inputs","nameA","nameB","numMidiInputs","outputs","numMidiOutputs","handleMidiMessageTrack","recordMillis","prerolling","recordEnabled","recordPart","enableRetrospectiveRecording","retrospectiveRecording","midiEventListeners","send","routeToMidiOut","getMidiPortsAsDropdown","select","option","ports","createElement","div","firstOption","innerHTML","appendChild","port","getMidiInputs","getMidiOutputs","getMidiInputsAsDropdown","getMidiOutputsAsDropdown","initMidi","requestMIDIAccess","then","midiAccessOnSuccess","_jazzInstances","_Jazz","onstatechange","midiAccessOnError","initMidiSong","handleMidiMessageSong","midiMessageEvent","monitor","onmidimessage","setMidiInputSong","setMidiInput","setMidiOutputSong","lastEventTime","setMidiOutput","addMidiEventListener","removeMidiEventListener","removeMidiEventListeners","midiWrite","AP","PPQ","HDR_CHUNKID","charCodeAt","HDR_CHUNK_SIZE","HDR_TYPE1","HDR_PPQ","str2Bytes","TRK_CHUNKID","byteArray","arrayBuffer","uintArray","trackToBytes","instrumentId","ArrayBuffer","endings","lastEventTicks","lengthBytes","delta","trackBytes","convertToVLQ","stringToNumArray","microSeconds","denom","str","finalBytes","bytes","chars","unshift","bList","map","char","saveToMidiFile","saveSongAsMidiFile","musicXMLParser","nsResolver","xml","parser","xmlDoc","DOMParser","parseFromString","firstChild","nextSibling","nodeName","createNSResolver","ownerDocument","documentElement","parsePartWise","partNode","measureIterator","measureNode","noteNode","tieStart","tieStop","tieIterator","tieNode","tmp1","tmp2","step","alter","voice","noteDuration","rest","chord","divisions","evaluate","XPathResult","ANY_TYPE","tiedNotes","iterateNext","STRING_TYPE","stringValue","NUMBER_TYPE","numberValue","TIME_SIGNATURE","FIRST_ORDERED_NODE_TYPE","singleNodeValue","createSong","useMetronome","parseTimeWise","loadMusicXML","returnAsXML","response","parseMusicXML","noteNames","getNoteName","checkNoteName","getFrequency","isNoteMode","isBlackKey","arg0","arg1","arg2","blackKey","mode","toUpperCase","black","getNoteOctave","factor","millisPerTick","secondsPerTick","updateEvent","timeData","tickAsString","getNiceTime","timeAsString","timeAsArray","barsAsString","barsAsArray","lastEventTick","getDataFromEvent","lastEventTmp","parseTimeEvents","playbackSpeed","numTimeEvents","setTickDuration","setTicksPerBeat","copyName","getEvent","moveEvents","transposeEvents","getEventsAndConfig","reverseByPitch","reverseByTicks","Part","eventsById","relative","END_OF_TRACK","hasAudioEvents","tobeRemoved","onTicks","offTicks","partIndex","notesById","dirtyEvents","dirtyNotes","solo","keepWhenEmpty","addEventsRelative","removeEvent","moveEvent","moveAllEvents","transposeAllEvents","findEvents","findNotes","getIndex","partTicks","copies","setSolo","setPartSolo","firstEvent","lastEvent","l","instanceId","Playhead","getPosition2","u","unit","currentValue","noteIndex","calculate","diff","addType","removeType","trim","stillActiveNotes","stillActiveEvents","collectedParts","collectedNotes","collectedEvents","DUMMY_EVENT","percentage","diffMillis","millisToTicks","ticksToMillis","barsToMillis","barsToTicks","ticksToBars","millisToBars","checkBarsAndBeats","getPositionData","calculateBarsAndBeats","checkPosition","fromMillis","fromTicks","fromBars","returnType","beyondEndOfSong","getTimeEvent","target","targetMillis","beos","targetTicks","targetBar","targetBeat","targetSixteenth","targetTick","diffTick","positionData","millisRounded","isTick","positionLength","supportedReturnTypes","quantizeFixedLength","copyObject","noteFractions","quantize","history","quantized","quantizeTicks","quantizeHistory","quantizedEvents","fixedLength","fadeOut","SampleSynth","SampleRelease","SampleSustainRelease","SampleReleasePanning","SampleSustainReleasePanning","Sample","stopCallback","source","onended","values","linearRampToValueAtTime","setValueCurveAtTime","releaseEnvelopeArray","Float32Array","createSource","createBufferSource","route","phase","startReleasePhase","stopTime","when","cancelScheduledValues","execute","panner","doLog","sustainStart","sustainEnd","release_envelope_array","loopStart","loopEnd","parseTime","SamplePack","ext","slash","dot","remotePath","extension","remote_path","d","loadSamples","callback1","callback2","loadSample","hasMapping","parseAudioData","audiodata","ts","loadTime","samplepack_info","samplepack_author","samplepack_license","samplepack_compression","compression_type","compression_level","Scheduler","looped","timeDiff","eventsMidiAudioMetronome","numAudioEvents","scheduledAudioEvents","setIndex","beyondLoop","getDanglingAudioEvents","songStartMillis","buffertime","doLoop","loopDuration","songMillis","loopEndTicks","firstRun","prevMaxtime","midiOutput","vel","audioLatency","unscheduleEvent","createScheduler","createSequencer","heartbeat","lastTimeStamp","processEventTracks","pausedSongs","activeSongs","snapshots","addSong","removeProperties","getSongs","deleteSong","k","eventsLib","notesLib","processEvents","stopProcessEvent","stopProcessEvents","play","songs","indentation","addParts","setAnimationFrameType","interval","webkitRequestAnimationFrame","onblur","pause","onfocus","createFollowEvent","checkDuration","gridToSong","noteToGrid","eventToGrid","positionToGrid","removeFromArray","removeFromArray2","getNoteLengthName","_removeTracks","pulse","getTrack","addTracks","getParts","getTimeEvents","setRecordingStatus","_getRecordingPerTrack","createGrid","Song","songIndex","quantizeValue","fixedLengthValue","positionType","autoQuantize","illegalLoop","grid","tempoEvent","TEMPO","timeSignatureEvent","setTempo","setTimeSignature","allEvents","tracksById","tracksByName","partsById","paused","stopped","preroll","playheadRecording","followEvent","newTracks","addedIds","timeStamp","prevMillis","resetAllListeners","endOfSong","jump","playstart","startTime2","playAfterPrecount","adjustLatencyForAllRecordings","startRecording","userFeedback","audioRecording","recordStartMillis","recordTimestampTicks","recordingAudio","recordTimestamp","recordingHistory","undoRecording","getAudioRecordingData","historyObject","undoQuantize","quantizeRecording","setLeftLocator","loopStartPosition","loopStartTicks","setRightLocator","loopEndPosition","setLoop","addTrack","getTracks","removeTrack","removeTracks","setPlaybackSpeed","speed","startLoop","endLoop","newPos","updateTimeEvents","updateGrid","updateTempoEvent","updatePlayheadAndLocators","updateTimeSignatureEvent","getTempoEvents","getTimeSignatureEvents","newStartPos","newEndPos","startPos","ratio","resetTempo","firstTempoEvent","resetTimeSignature","firstTimeSignatureEvent","addTimeEvent","addTimeEvents","removeTimeEvent","removeTimeEvents","removeDoubleTimeEvents","eventsByTicks","setPitchRange","setDurationInBars","changedTracks","dirtyTracks","dirtyParts","addEffect","removeEffect","getVolume","setTrackSolo","soloTrack","muteAllTracks","setMetronomeVolume","configureMetronome","resetMetronome","setPrecount","resetExternalMidiDevices","addMetronomeEvents","songAddEventListener","songRemoveEventListener","songEventListener","listenerIndex","listenerId","filteredListeners","songFollowEvent","checkOperatorConflict","FollowEvent","supportedTimeEvents","barsandbeats","allListenersById","allListenersByType","searchPatterns","eventListenersBySearchstring","positionListenersBySearchstring","listenerIds","instance","searchstring","callEventListeners","callListenersPositionTicks","callListenersPositionRepetitive","callListenersPositionConditionalSimple","callListenersPositionConditionalComplex","called","repetitive","conditional_simple","conditional_complex","storeArray","dataType","addPositionEventListener","len","value1Type","position_type","eventIds","removeMe","filteredListenerIds","removedListenerIds","songGrid","positionToSong","coordinatesToPosition","getSong","songToGrid","songUpdate","update2","parseParts","parseMidiNotes","id1","id2","id3","removedTracks","midiEvents","parseRecordedEvents","totalTime","encodeAudio","Track","getPartsAndConfig","getTicksAtPosition","removeParts","eventsPerPart","getDefaultInstrumentConfig","effects","numEffects","lastEffect","addPartAt","addPartsAt","moveParts","movePartTo","movePartsTo","positions","moveAllParts","copyPart","copyParts","selectedParts","copiedParts","getPartAt","getPartsAt","getPartFromTo","getPartsFromTo","from","to","toTicks","getPartBetween","effect","removeEventsFromTo","removeEventAt","removeEventsAt","removeAllEvents","setSong","setEffectPosition","fx","soloPart","availableInputs","setWaveformConfig","encodeAudioRecording","bitrate","mp3Data","processMidiEvent","shifter","Pitchshift","fftFrameSize","numChannels","c","shiftValue","outputBuffer","process","outdata","createBuffer","foundItem","foundFolder","mPow","mRound","mFloor","mRandom","random","noteLengthNames","o","decimals","ignore_keys","isEmpty","request","promise","XMLHttpRequest","onload","overrideMimeType","setRequestHeader","loop3","search_subfolders","indent","folders","numFolders","currentFolder","itemId","parseSample","loadAndParseSample","toBinaryString","ff","mx","scc","keyStr","uarray","chr1","chr2","chr3","enc2","enc3","enc4","charAt","getRandom","b64ToUint6","nChr","uint6ToB64","nUint6","base64DecToArr","sBase64","nBlocksSize","sB64Enc","nMod3","nMod4","nInLen","nOutLen","taBytes","nUint24","nOutIdx","nInIdx","base64EncArr","aBytes","nLen","nIdx","substr","UTF8ArrToStr","sView","nPart","strToUTF8Arr","sDOMStr","nStrLen","nArrLen","nMapIdx","nChrIdx","ajax2","onreadystatechange","parseSamples","promises","all","oldMin","oldMax","newMin","newMax","createSlider","slider","sliderWrapper","message","label","onMouseDown","valueAsNumber","onMouseUp","onMouseMove","parentNode","initialSliderValue","initialLabelValue","onChange","setValue","setLabel","elem","element","createSlider2","calculateFromLabel","initialValueSlider","initialValueLabel","updateSlider","updateLabel","getValue1","getValue2","getRandomNotes","minVelocity","maxVelocity","minNoteNumber","maxNoteNumber","numSteps","maxValue","percent","cos","insertLink","binary","byteLength","btoa","divider","toUint8Array","uint","filePath","fileName","fileExtension","numItems","pathString","prop","searchFolder","loop2","convertPPQ","oldPPQ","newPPQ","convert","ms","parent","constructor","thisClass","attr","numCopies","array","elementA","newArray","filterItemsByClassName","getMicrosecondsFromBPM","density","lastWidth","numImages","currentImage","canvas","ctx","getContext","pcmRight","xPos","urls","fillStyle","fillRect","beginPath","strokeStyle","lineWidth","stroke","toDataURL","lineTo","closeModule","ready","readyCallbacks","addCleanup","attack","timeEnd","initSequencer"],"mappings":"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","file":"index.js","sourceRoot":"","sourcesContent":["// import sequencer from 'heartbeat-sequencer';\n\n// const addAssetPack = (ap: Heartbeat.AssetPack): Promise<void> => new Promise((resolve) => {\n//   sequencer.addAssetPack(ap, () => {\n//     resolve();\n//   });\n// })\n\nconst loadMusicXMLFile = (url: string): Promise<XMLDocument> => {\n  return new Promise((resolve, reject) => {\n    fetch(url)\n      .then(response => response.text())\n      .then(str => {\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(str, 'application/xml');\n        resolve(xmlDoc);\n      });\n  });\n}\n\nexport {\n  loadMusicXMLFile,\n  // addAssetPack,\n};","/*\n\nheartbeat\n(c) 2013 - 2019 abudaan\nhttps://github.com/abudaan/heartbeat/wiki/license\n\n\nIn util.js the method base64ToBinary() is based on Daniel Guerrero's code:\n\nhttps://github.com/danguer/blog-examples/blob/master/js/base64-binary.js\nhttps://github.com/danguer/blog-examples/blob/master/LICENSE\n\n\nIn util.js the method toBinaryString(), midi_parse.js and midi_stream.js are based on Matt Westcott & Ben Fishman's code:\n\nhttps://github.com/gasman/jasmid\nhttps://github.com/gasman/jasmid/blob/master/LICENSE\n\n\nIn util.js Mozilla's atob and btoa alternatives are included:\nhttps://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_.232_.E2.80.93_rewriting_atob()_and_btoa()_using_TypedArrays_and_UTF-8\n\n\nThe code in midi_write.js is based on Sergi Mansilla's code:\n\nhttps://github.com/sergi/jsmidi\nhttps://github.com/sergi/jsmidi/blob/master/README.md\n\n\nAudio recording:\nhttps://github.com/akrennmair/libmp3lame-js\nhttps://github.com/kobigurk/libmp3lame-js\nhttps://github.com/nusofthq/Recordmp3js\n\n\nIf a browser doesn't support WebMIDI, heartbeat will try to fallback to Sema's Jazz plugin:\n\nhttp://jazz-soft.net/\nhttps://github.com/jazz-soft/JZZ\n\n*/\n\n\n/*\n *\tFileSaver.js\n *  A saveAs() FileSaver implementation.\n *  2014-01-24\n *\n *  By Eli Grey, http://eligrey.com\n *  License: X11/MIT\n *    See LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs\n  // IE 10+ (native saveAs)\n  || (typeof navigator !== \"undefined\" &&\n      navigator.msSaveOrOpenBlob && navigator.msSaveOrOpenBlob.bind(navigator))\n  // Everyone else\n  || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof navigator !== \"undefined\" &&\n\t    /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case BlobBuilder.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, URL = view.URL || view.webkitURL || view\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = !view.externalHost && \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = doc.createEvent(\"MouseEvents\");\n\t\t\tevent.initMouseEvent(\n\t\t\t\t\"click\", true, false, view, 0, 0, 0, 0, 0\n\t\t\t\t, false, false, false, false, 0, null\n\t\t\t);\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, webkit_req_fs = view.webkitRequestFileSystem\n\t\t, req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t, fs_min_size = 0\n\t\t, deletion_queue = []\n\t\t, process_deletion_queue = function() {\n\t\t\tvar i = deletion_queue.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar file = deletion_queue[i];\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tURL.revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t\tdeletion_queue.length = 0; // clear queue\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, FileSaver = function(blob, name) {\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, blob_changed = false\n\t\t\t\t, object_url\n\t\t\t\t, target_view\n\t\t\t\t, get_object_url = function() {\n\t\t\t\t\tvar object_url = get_URL().createObjectURL(blob);\n\t\t\t\t\tdeletion_queue.push(object_url);\n\t\t\t\t\treturn object_url;\n\t\t\t\t}\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (blob_changed || !object_url) {\n\t\t\t\t\t\tobject_url = get_object_url(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (target_view) {\n\t\t\t\t\t\ttarget_view.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\twindow.open(object_url, \"_blank\");\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t}\n\t\t\t\t, abortable = function(func) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif (filesaver.readyState !== filesaver.DONE) {\n\t\t\t\t\t\t\treturn func.apply(this, arguments);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t, create_if_not_found = {create: true, exclusive: false}\n\t\t\t\t, slice\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\tif (!name) {\n\t\t\t\tname = \"download\";\n\t\t\t}\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_object_url(blob);\n\t\t\t\t// FF for Android has a nasty garbage collection mechanism\n\t\t\t\t// that turns all objects that are not pure javascript into 'deadObject'\n\t\t\t\t// this means `doc` and `save_link` are unusable and need to be recreated\n\t\t\t\t// `view` is usable though:\n\t\t\t\tdoc = view.document;\n\t\t\t\tsave_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\");\n\t\t\t\tsave_link.href = object_url;\n\t\t\t\tsave_link.download = name;\n\t\t\t\tvar event = doc.createEvent(\"MouseEvents\");\n\t\t\t\tevent.initMouseEvent(\n\t\t\t\t\t\"click\", true, false, view, 0, 0, 0, 0, 0\n\t\t\t\t\t, false, false, false, false, 0, null\n\t\t\t\t);\n\t\t\t\tsave_link.dispatchEvent(event);\n\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\tdispatch_all();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Object and web filesystem URLs have a problem saving in Google Chrome when\n\t\t\t// viewed in a tab, so I force save with application/octet-stream\n\t\t\t// http://code.google.com/p/chromium/issues/detail?id=91158\n\t\t\tif (view.chrome && type && type !== force_saveable_type) {\n\t\t\t\tslice = blob.slice || blob.webkitSlice;\n\t\t\t\tblob = slice.call(blob, 0, blob.size, force_saveable_type);\n\t\t\t\tblob_changed = true;\n\t\t\t}\n\t\t\t// Since I can't be sure that the guessed media type will trigger a download\n\t\t\t// in WebKit, I append .download to the filename.\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=65440\n\t\t\tif (webkit_req_fs && name !== \"download\") {\n\t\t\t\tname += \".download\";\n\t\t\t}\n\t\t\tif (type === force_saveable_type || webkit_req_fs) {\n\t\t\t\ttarget_view = view;\n\t\t\t}\n\t\t\tif (!req_fs) {\n\t\t\t\tfs_error();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfs_min_size += blob.size;\n\t\t\treq_fs(view.TEMPORARY, fs_min_size, abortable(function(fs) {\n\t\t\t\tfs.root.getDirectory(\"saved\", create_if_not_found, abortable(function(dir) {\n\t\t\t\t\tvar save = function() {\n\t\t\t\t\t\tdir.getFile(name, create_if_not_found, abortable(function(file) {\n\t\t\t\t\t\t\tfile.createWriter(abortable(function(writer) {\n\t\t\t\t\t\t\t\twriter.onwriteend = function(event) {\n\t\t\t\t\t\t\t\t\ttarget_view.location.href = file.toURL();\n\t\t\t\t\t\t\t\t\tdeletion_queue.push(file);\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t\tdispatch(filesaver, \"writeend\", event);\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\twriter.onerror = function() {\n\t\t\t\t\t\t\t\t\tvar error = writer.error;\n\t\t\t\t\t\t\t\t\tif (error.code !== error.ABORT_ERR) {\n\t\t\t\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\"writestart progress write abort\".split(\" \").forEach(function(event) {\n\t\t\t\t\t\t\t\t\twriter[\"on\" + event] = filesaver[\"on\" + event];\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\twriter.write(blob);\n\t\t\t\t\t\t\t\tfilesaver.abort = function() {\n\t\t\t\t\t\t\t\t\twriter.abort();\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.WRITING;\n\t\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t};\n\t\t\t\t\tdir.getFile(name, {create: false}, abortable(function(file) {\n\t\t\t\t\t\t// delete file if it already exists\n\t\t\t\t\t\tfile.remove();\n\t\t\t\t\t\tsave();\n\t\t\t\t\t}), abortable(function(ex) {\n\t\t\t\t\t\tif (ex.code === ex.NOT_FOUND_ERR) {\n\t\t\t\t\t\t\tsave();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}), fs_error);\n\t\t\t}), fs_error);\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name) {\n\t\t\treturn new FileSaver(blob, name);\n\t\t}\n\t;\n\tFS_proto.abort = function() {\n\t\tvar filesaver = this;\n\t\tfilesaver.readyState = filesaver.DONE;\n\t\tdispatch(filesaver, \"abort\");\n\t};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\tview.addEventListener(\"unload\", process_deletion_queue, false);\n\tsaveAs.unload = function() {\n\t\tprocess_deletion_queue();\n\t\tview.removeEventListener(\"unload\", process_deletion_queue, false);\n\t};\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\n/*\n\nif (typeof module !== \"undefined\" && module !== null) {\n  module.exports = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd != null)) {\n  define([], function() {\n    return saveAs;\n  });\n}\n\n*/var sequencer;\r\n// import { version } from \"../package.json\";\r\nvar version = \"0.0.25\";\r\n\r\nfunction openModule() {\r\n  \"use strict\";\r\n\r\n  var protectedScope,\r\n    initMethods = [],\r\n    webaudioUnlocked = false,\r\n    src,\r\n    context,\r\n    gainNode,\r\n    compressor,\r\n    sampleIndex = 0,\r\n    compressorParams = [\r\n      \"threshold\",\r\n      \"knee\",\r\n      \"ratio\",\r\n      \"reduction\",\r\n      \"attack\",\r\n      \"release\",\r\n    ],\r\n    ua = navigator.userAgent,\r\n    os,\r\n    browser,\r\n    legacy = false;\r\n\r\n  if (ua.match(/(iPad|iPhone|iPod)/g)) {\r\n    os = \"ios\";\r\n    // webaudioUnlocked = false;\r\n  } else if (ua.indexOf(\"Android\") !== -1) {\r\n    os = \"android\";\r\n  } else if (ua.indexOf(\"Linux\") !== -1) {\r\n    os = \"linux\";\r\n  } else if (ua.indexOf(\"Macintosh\") !== -1) {\r\n    os = \"osx\";\r\n  } else if (ua.indexOf(\"Windows\") !== -1) {\r\n    os = \"windows\";\r\n  }\r\n\r\n  if (ua.indexOf(\"Chrome\") !== -1) {\r\n    // chrome, chromium and canary\r\n    browser = \"chrome\";\r\n\r\n    if (ua.indexOf(\"OPR\") !== -1) {\r\n      browser = \"opera\";\r\n    } else if (ua.indexOf(\"Chromium\") !== -1) {\r\n      browser = \"chromium\";\r\n    }\r\n  } else if (ua.indexOf(\"Safari\") !== -1) {\r\n    browser = \"safari\";\r\n  } else if (ua.indexOf(\"Firefox\") !== -1) {\r\n    browser = \"firefox\";\r\n  } else if (ua.indexOf(\"Trident\") !== -1) {\r\n    browser = \"Internet Explorer\";\r\n  }\r\n\r\n  if (os === \"ios\") {\r\n    if (ua.indexOf(\"CriOS\") !== -1) {\r\n      browser = \"chrome\";\r\n    }\r\n  }\r\n\r\n  // console.log(os, browser, '---', ua);\r\n\r\n  if (window.AudioContext) {\r\n    context = new window.AudioContext();\r\n    if (typeof context.createGainNode !== \"function\") {\r\n      context.createGainNode = context.createGain;\r\n    }\r\n  } else if (window.webkitAudioContext) {\r\n    context = new window.webkitAudioContext();\r\n    if (typeof context.createGainNode !== \"function\") {\r\n      context.createGainNode = context.createGain;\r\n    }\r\n  } else {\r\n    //alert('Your browser does not support AudioContext!\\n\\nPlease use one of these browsers:\\n\\n- Chromium (Linux | Windows)\\n- Firefox (OSX | Windows)\\n- Chrome (Linux | Android | OSX | Windows)\\n- Canary (OSX | Windows)\\n- Safari (iOS 6.0+ | OSX)\\n\\nIf you use Chrome or Chromium, heartbeat uses the WebMIDI api');\r\n    throw new Error(\r\n      \"The WebAudio API hasn't been implemented in \" +\r\n        browser +\r\n        \", please use any other browser\"\r\n    );\r\n  }\r\n\r\n  compressor = context.createDynamicsCompressor();\r\n  compressor.connect(context.destination);\r\n  //console.log(compressor);\r\n  gainNode = context.createGainNode();\r\n  //gainNode.connect(compressor);\r\n  gainNode.connect(context.destination);\r\n  gainNode.gain.value = 1;\r\n\r\n  protectedScope = {\r\n    context: context,\r\n    //destination: context.destination,\r\n    masterGainNode: gainNode,\r\n    masterCompressor: compressor,\r\n\r\n    useDelta: false,\r\n\r\n    timedTasks: {},\r\n    scheduledTasks: {},\r\n    repetitiveTasks: {},\r\n\r\n    getSampleId: function () {\r\n      return \"S\" + sampleIndex++ + new Date().getTime();\r\n    },\r\n\r\n    addInitMethod: function (method) {\r\n      initMethods.push(method);\r\n    },\r\n\r\n    callInitMethods: function () {\r\n      var i,\r\n        maxi = initMethods.length;\r\n      for (i = 0; i < maxi; i++) {\r\n        initMethods[i]();\r\n      }\r\n    },\r\n  };\r\n\r\n  /**\r\n      @namespace sequencer\r\n  */\r\n  sequencer = {\r\n    name: \"qambi\",\r\n    version,\r\n    protectedScope: protectedScope,\r\n    ui: {},\r\n    ua: ua,\r\n    os: os,\r\n    browser: browser,\r\n    legacy: false,\r\n    midi: false,\r\n    webmidi: false,\r\n    webaudio: true,\r\n    jazz: false,\r\n    ogg: false,\r\n    mp3: false,\r\n    record_audio: navigator.getUserMedia !== undefined,\r\n    bitrate_mp3_encoding: 128,\r\n    util: {},\r\n    debug: 0, // 0 = off, 1 = error, 2 = warn, 3 = info, 4 = log\r\n    defaultInstrument: \"sinewave\",\r\n    pitch: 440,\r\n    bufferTime: 350 / 1000, //seconds\r\n    autoAdjustBufferTime: false,\r\n    noteNameMode: \"sharp\",\r\n    minimalSongLength: 60000, //millis\r\n    pauseOnBlur: false,\r\n    restartOnFocus: true,\r\n    defaultPPQ: 960,\r\n    overrulePPQ: true,\r\n    precision: 3, // means float with precision 3, e.g. 10.437\r\n\r\n    midiInputs: {},\r\n    midiOutputs: {},\r\n\r\n    storage: {\r\n      midi: {\r\n        id: \"midi\",\r\n      },\r\n      audio: {\r\n        id: \"audio\",\r\n        recordings: {},\r\n      },\r\n      instruments: {\r\n        id: \"instruments\",\r\n      },\r\n      samplepacks: {\r\n        id: \"samplepacks\",\r\n      },\r\n      assetpacks: {\r\n        id: \"assetpacks\",\r\n      },\r\n    },\r\n\r\n    getAudioContext: function () {\r\n      return context;\r\n    },\r\n\r\n    getMasterGainNode: function () {\r\n      return gainNode;\r\n    },\r\n\r\n    getTime: function () {\r\n      return context.currentTime;\r\n      // return performance.now() / 1000;\r\n    },\r\n\r\n    getTimeDiff: function () {\r\n      var contextTime = context.currentTime * 1000;\r\n      return performance.now() - contextTime;\r\n    },\r\n\r\n    setMasterVolume: function (value) {\r\n      value = value < 0 ? 0 : value > 1 ? 1 : value;\r\n      gainNode.gain.value = value;\r\n    },\r\n\r\n    getMasterVolume: function () {\r\n      return gainNode.gain.value;\r\n    },\r\n\r\n    getCompressionReduction: function () {\r\n      //console.log(compressor);\r\n      return compressor.reduction.value;\r\n    },\r\n\r\n    enableMasterCompressor: function (flag) {\r\n      if (flag) {\r\n        gainNode.disconnect(0);\r\n        gainNode.connect(compressor);\r\n        compressor.disconnect(0);\r\n        compressor.connect(context.destination);\r\n      } else {\r\n        compressor.disconnect(0);\r\n        gainNode.disconnect(0);\r\n        gainNode.connect(context.destination);\r\n      }\r\n    },\r\n\r\n    configureMasterCompressor: function (cfg) {\r\n      /*\r\n          readonly attribute AudioParam threshold; // in Decibels\r\n          readonly attribute AudioParam knee; // in Decibels\r\n          readonly attribute AudioParam ratio; // unit-less\r\n          readonly attribute AudioParam reduction; // in Decibels\r\n          readonly attribute AudioParam attack; // in Seconds\r\n          readonly attribute AudioParam release; // in Seconds\r\n      */\r\n      var i, param;\r\n      for (i = compressorParams.length; i >= 0; i--) {\r\n        param = compressorParams[i];\r\n        if (cfg[param] !== undefined) {\r\n          compressor[param].value = cfg[param];\r\n        }\r\n      }\r\n    },\r\n\r\n    unlockWebAudio: function () {\r\n      // console.log('unlock webaudio');\r\n      if (webaudioUnlocked === true) {\r\n        // console.log('already unlocked');\r\n        return;\r\n      }\r\n      if (typeof context.resume === \"function\") {\r\n        context.resume();\r\n      }\r\n      var src = context.createOscillator(),\r\n        gainNode = context.createGainNode();\r\n      gainNode.gain.value = 0;\r\n      src.connect(gainNode);\r\n      gainNode.connect(context.destination);\r\n      if (src.noteOn !== undefined) {\r\n        src.start = src.noteOn;\r\n        src.stop = src.noteOff;\r\n      }\r\n      src.start(0);\r\n      src.stop(0.001);\r\n      webaudioUnlocked = true;\r\n    },\r\n  };\r\n\r\n  // debug levels\r\n  Object.defineProperty(sequencer, \"ERROR\", { value: 1 });\r\n  Object.defineProperty(sequencer, \"WARN\", { value: 2 });\r\n  Object.defineProperty(sequencer, \"INFO\", { value: 3 });\r\n  Object.defineProperty(sequencer, \"LOG\", { value: 4 });\r\n}\r\nfunction assetManager() {\r\n\r\n  'use strict';\r\n\r\n  // console.log('AssetManager');\r\n\r\n  var\r\n    // import\r\n    loadLoop, //defined in util.js\r\n    findItem, //defined in util.js\r\n    storeItem, //defined in util.js\r\n    deleteItem, //defined in util.js\r\n    typeString, //defined in util.js\r\n    getArguments, //defined in util.js\r\n    isEmptyObject, // defined in util.js\r\n    objectForEach, //defined in util.js\r\n    storage, //defined in open_module.js\r\n    updateInstruments, //defined in sequencer.js\r\n    findItemsInFolder, //defined in util.js\r\n\r\n    busy = false,\r\n    taskIndex = 0,\r\n    finishedTasks = {},\r\n    taskQueue = [],\r\n    callbacks = [];\r\n\r\n\r\n  sequencer.removeMidiFile = function (path) {\r\n    var item,\r\n      items = [], i, folder;\r\n\r\n    if (path.className === 'MidiFile') {\r\n      item = path;\r\n      path = item.localPath;\r\n    } else {\r\n      item = findItem(path, storage.midi);\r\n    }\r\n\r\n    if (item.className === 'MidiFile') {\r\n      items.push(item);\r\n    } else {\r\n      folder = item;\r\n      objectForEach(folder, function (item) {\r\n        if (item.className === 'MidiFile') {\r\n          items.push(item);\r\n        }\r\n      });\r\n    }\r\n\r\n    for (i = items.length - 1; i >= 0; i--) {\r\n      item = items[i];\r\n      deleteItem(item.localPath, storage.midi);\r\n    }\r\n  };\r\n\r\n\r\n  sequencer.removeInstrument = function (path, unloadSamples) {\r\n    var item, items = [], i, folder, mapping, samplePath;\r\n\r\n    if (path.className === 'InstrumentConfig') {\r\n      item = path;\r\n      path = item.localPath;\r\n    } else {\r\n      item = findItem(path, storage.instruments);\r\n    }\r\n\r\n\r\n    if (item.className === 'InstrumentConfig') {\r\n      items.push(item);\r\n    } else {\r\n      folder = item;\r\n      for (i in folder) {\r\n        if (folder.hasOwnProperty(i)) {\r\n          item = folder[i];\r\n          if (item.className === 'InstrumentConfig') {\r\n            items.push(item);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    for (i = items.length - 1; i >= 0; i--) {\r\n      item = items[i];\r\n      //console.log(item.mapping);\r\n      mapping = item.mapping;\r\n      samplePath = item.sample_path;\r\n\r\n      if (unloadSamples === true) {\r\n        // delete samples\r\n        objectForEach(mapping, function (value) {\r\n          deleteItem(samplePath + '/' + value.n, storage.audio);\r\n        });\r\n        // delete sample pack\r\n        deleteItem(samplePath, storage.samplepacks);\r\n      }\r\n      // remove instrument from storage\r\n      deleteItem(item.localPath, storage.instruments);\r\n      //return deleteItem(path, storage.instruments);\r\n    }\r\n\r\n    // if an instrument has been removed, inform the tracks that used that instrument\r\n    updateInstruments();\r\n  };\r\n\r\n\r\n  sequencer.removeSamplePack = function (path) {\r\n    var item,\r\n      items = [], i, samples, sample, s, folder;\r\n\r\n    if (path.className === 'SamplePack') {\r\n      item = path;\r\n      path = item.localPath;\r\n    } else {\r\n      item = findItem(path, storage.samplepacks);\r\n    }\r\n\r\n    if (item.className === 'SamplePack') {\r\n      items.push(item);\r\n    } else {\r\n      folder = item;\r\n      objectForEach(folder, function (item) {\r\n        if (item.className === 'SamplePack') {\r\n          items.push(item);\r\n        }\r\n      });\r\n    }\r\n\r\n    for (i = items.length - 1; i >= 0; i--) {\r\n      item = items[i];\r\n      //console.log(item.localPath);\r\n      samples = item.samples;\r\n      for (s = samples.length - 1; s >= 0; s--) {\r\n        sample = samples[s];\r\n        //console.log('->', sample.folder + '/' + sample.id);\r\n        deleteItem(sample.folder + '/' + sample.id, storage.audio);\r\n      }\r\n      item.reset();\r\n      deleteItem(item.localPath, storage.samplepacks);\r\n    }\r\n\r\n    updateInstruments();\r\n    /*\r\n            function loopInstruments(root){\r\n                var item;\r\n    \r\n                for(i in root){\r\n                    if(root.hasOwnProperty(i)){\r\n                        if(i === 'id' || i === 'path' || i === 'className'){\r\n                            continue;\r\n                        }\r\n                        item = root[i];\r\n                        if(item.className === 'Folder'){\r\n                            loopInstruments(item);\r\n                        }else{\r\n                            item = findItem(item.folder + '/' + item.name, storage.instruments);\r\n                            console.log(item);\r\n                            if(item.parse){\r\n                                item.parse();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    \r\n            loopInstruments(storage.instruments);\r\n    */\r\n  };\r\n\r\n\r\n  sequencer.removeAssetPack = function (path) {\r\n    var item,\r\n      folder;\r\n\r\n    if (path.className === 'AssetPack') {\r\n      item = path;\r\n      path = item.localPath;\r\n    } else {\r\n      item = findItem(path, storage.assetpacks);\r\n    }\r\n\r\n    if (item.className === 'AssetPack') {\r\n      item.unload();\r\n    } else {\r\n      folder = item;\r\n      objectForEach(folder, function (item) {\r\n        if (item.className === 'AssetPack') {\r\n          item.unload();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  sequencer.startTaskQueue = function (cb) {\r\n    //console.log('startTaskQueue', taskQueue.length, busy);\r\n    if (busy === true) {\r\n      return;\r\n    }\r\n    busy = true;\r\n    loadQueueLoop(0, cb);\r\n  };\r\n\r\n\r\n  sequencer.addTask = function (task, callback, callbackAfterAllTasksAreDone) {\r\n    task.id = 'task' + taskIndex++;\r\n    taskQueue.push(task);\r\n    //console.log('task', task.type, taskQueue.length);\r\n    if (callback !== undefined) {\r\n      if (callbackAfterAllTasksAreDone === true) {\r\n        // call the callback only after all tasks are done\r\n        sequencer.addCallbackAfterTask(callback);\r\n      } else {\r\n        // call the callback right after this task is done\r\n        sequencer.addCallbackAfterTask(callback, [task.id]);\r\n      }\r\n    }\r\n    return task.id;\r\n  };\r\n\r\n\r\n  sequencer.addCallbackAfterTask = function (callback, taskIds) {\r\n    callbacks.push({\r\n      method: callback,\r\n      taskIds: taskIds\r\n    });\r\n    //console.log('taskIds', taskIds);\r\n  };\r\n\r\n\r\n  // this method loops over the load cue and performs the individual load method per asset\r\n  function loadQueueLoop(index, onTaskQueueDone) {\r\n    var task, params, scope,\r\n      i, j, callback, taskIds,\r\n      performCallback;\r\n\r\n    if (index === taskQueue.length) {\r\n      // call all callbacks that have to be called at the end of the loop queue\r\n      for (i = callbacks.length - 1; i >= 0; i--) {\r\n        callback = callbacks[i];\r\n        if (callback === false) {\r\n          // this callback has already been called\r\n          continue;\r\n        }\r\n        //console.log(i, callback.method);\r\n        var m = callback.method;\r\n        //callback = false;\r\n        //console.log(1,callback);\r\n        setTimeout(function () {\r\n          //console.log(2, m);\r\n          //callback.method();\r\n          m();\r\n        }, 0);\r\n      }\r\n      finishedTasks = {};\r\n      taskQueue = [];\r\n      callbacks = [];\r\n      taskIndex = 0;\r\n      busy = false;\r\n      if (onTaskQueueDone) {\r\n        // for internal use only, never used so far\r\n        console.log('onTaskQueueDone');\r\n        onTaskQueueDone();\r\n      }\r\n      //console.log('task queue done', sequencer.storage);\r\n      return;\r\n    }\r\n\r\n    task = taskQueue[index];\r\n    scope = task.scope || null;\r\n    params = task.params || [];\r\n\r\n    //console.log(index, task.type, taskQueue.length);\r\n\r\n    if (typeString(params) !== 'array') {\r\n      params = [params];\r\n    }\r\n\r\n    function cbActionLoop(success) {\r\n      //console.log('cbActionLoop', success);\r\n      // set a flag that this task has been done\r\n      finishedTasks[task.id] = true;\r\n\r\n      // check which callbacks we can call now\r\n      for (i = callbacks.length - 1; i >= 0; i--) {\r\n        callback = callbacks[i];\r\n        if (callback === false) {\r\n          // this callback has already been called\r\n          continue;\r\n        }\r\n        taskIds = callback.taskIds;\r\n        // console.log(i, callback.method, taskIds);\r\n        // some callbacks may only be called after a task, or a number of tasks have been done\r\n        if (taskIds !== undefined) {\r\n          performCallback = true;\r\n          for (j = taskIds.length - 1; j >= 0; j--) {\r\n            // if one of the required tasks has not been done yet, do not perform the callback\r\n            if (finishedTasks[taskIds[j]] !== true) {\r\n              performCallback = false;\r\n            }\r\n          }\r\n          //console.log('performCallback', performCallback);\r\n          if (performCallback) {\r\n            //callback.method.call(null);\r\n            //console.log(callback);\r\n            var m = callback.method;\r\n            callbacks[i] = false;\r\n            setTimeout(function () {\r\n              m(success);\r\n              //console.log(callbacks);\r\n            }, 0);\r\n          }\r\n        }\r\n      }\r\n\r\n      //console.log('task done', task.name, index, taskQueue.length);\r\n      index++;\r\n\r\n      // if(index === taskQueue.length && taskIds === undefined){\r\n\r\n      // }\r\n      loadQueueLoop(index, onTaskQueueDone);\r\n    }\r\n\r\n    params.push(cbActionLoop);\r\n\r\n    //console.log(index, taskQueue.length, task.method.name, params);\r\n    task.method.apply(scope, params);\r\n  }\r\n\r\n\r\n  sequencer.getInstrument = function (path, exact_match) {\r\n    return findItem(path, storage.instruments, exact_match);\r\n  };\r\n\r\n  sequencer.getMidiFile = function (path, exact_match) {\r\n    return findItem(path, storage.midi, exact_match);\r\n  };\r\n\r\n  sequencer.getSamplePack = function (path, exact_match) {\r\n    return findItem(path, storage.samplepacks, exact_match);\r\n  };\r\n\r\n  sequencer.getSample = function (path, exact_match) {\r\n    return findItem(path, storage.audio, exact_match);\r\n  };\r\n\r\n  sequencer.getAssetPack = function (path, exact_match) {\r\n    return findItem(path, storage.assetpacks, exact_match);\r\n  };\r\n\r\n  sequencer.getSamplePacks = function (path, include_subfolders) {\r\n    return findItemsInFolder(path, storage.samplepacks, include_subfolders);\r\n  };\r\n\r\n  sequencer.getAssetPacks = function (path, include_subfolders) {\r\n    return findItemsInFolder(path, storage.assetpacks, include_subfolders);\r\n  };\r\n\r\n  sequencer.getSamples = function (path, include_subfolders) {\r\n    return findItemsInFolder(path, storage.audio, include_subfolders);\r\n  };\r\n\r\n  sequencer.getInstruments = function (path, include_subfolders) {\r\n    return findItemsInFolder(path, storage.instruments, include_subfolders);\r\n  };\r\n\r\n  sequencer.getMidiFiles = function (path, include_subfolders) {\r\n    return findItemsInFolder(path, storage.midi, include_subfolders);\r\n  };\r\n\r\n\r\n  sequencer.protectedScope.addInitMethod(function () {\r\n    storage = sequencer.storage;\r\n    loadLoop = sequencer.protectedScope.loadLoop;\r\n    findItem = sequencer.protectedScope.findItem;\r\n    storeItem = sequencer.protectedScope.storeItem;\r\n    deleteItem = sequencer.protectedScope.deleteItem;\r\n    typeString = sequencer.protectedScope.typeString;\r\n    getArguments = sequencer.protectedScope.getArguments;\r\n    isEmptyObject = sequencer.protectedScope.isEmptyObject;\r\n    objectForEach = sequencer.protectedScope.objectForEach;\r\n    updateInstruments = sequencer.protectedScope.updateInstruments;\r\n    findItemsInFolder = sequencer.protectedScope.findItemsInFolder;\r\n  });\r\n\r\n}\r\nfunction assetPack() {\n\n    'use strict';\n\n    // console.log('AssetPack');\n\n    var\n        index = 0,\n        storage, // defined in open_module.js\n        ajax, // defined in utils.js\n        round, // defined in utils.js\n        parseUrl, // defined in utils.js\n        findItem, // defined in utils.js\n        storeItem, // defined in utils.js\n        deleteItem, // defined in utils.js\n        typeString, // defined in utils.js\n        objectForEach, // defined in utils.js\n        removeMidiFile, // defined in asset_manager.js\n        removeAssetPack, // defined in asset_manager.js\n        removeInstrument, // defined in asset_manager.js\n        removeSamplePack, // defined in asset_manager.js\n\n        AssetPack;\n\n    AssetPack = function (config) {\n        this.id = 'AP' + index++ + new Date().getTime();\n        this.name = this.id;\n        this.className = 'AssetPack';\n        this.loaded = false;\n        this.midifiles = config.midifiles || [];\n        this.samplepacks = config.samplepacks || [];\n        this.instruments = config.instruments || [];\n        this.url = config.url;\n        var pack = this;\n        objectForEach(config, function (val, key) {\n            pack[key] = val;\n        });\n    };\n\n\n    function cleanup(assetpack, callback) {\n        assetpack = null;\n        //console.log(callback.name);\n        callback(false);\n    }\n\n\n    function store(assetpack) {\n        var occupied = findItem(assetpack.localPath, sequencer.storage.assetpacks, true),\n            action = assetpack.action;\n\n        //console.log('occ', occupied);\n        if (occupied && occupied.className === 'AssetPack' && action !== 'overwrite') {\n            if (sequencer.debug >= 2) {\n                console.warn('there is already an AssetPack at', assetpack.localPath);\n            }\n            return true;\n        } else {\n            storeItem(assetpack, assetpack.localPath, sequencer.storage.assetpacks);\n            return false;\n        }\n    }\n\n\n    function load(pack, callback) {\n        if (pack.url !== undefined) {\n            ajax({\n                url: pack.url,\n                responseType: 'json',\n                onError: function (e) {\n                    //console.log('onError', e);\n                    cleanup(pack, callback);\n                },\n                onSuccess: function (data, fileSize) {\n                    // if the json data is corrupt (for instance because of a trailing comma) data will be null\n                    if (data === null) {\n                        callback(false);\n                        return;\n                    }\n\n                    pack.loaded = true;\n\n                    if (data.name !== undefined && pack.name === undefined) {\n                        pack.name = data.name;\n                    }\n\n                    if (data.folder !== undefined && pack.folder === undefined) {\n                        pack.folder = data.folder;\n                    }\n\n                    if (pack.name === undefined) {\n                        pack.name = parseUrl(pack.url).name;\n                    }\n\n                    pack.localPath = pack.folder !== undefined ? pack.folder + '/' + pack.name : pack.name;\n                    pack.filesize = fileSize;\n                    //pack.fileSize = round(data.length/1024/1024, 2);\n                    //console.log(pack.filesize);\n\n                    if (data.instruments) {\n                        pack.instruments = pack.instruments.concat(data.instruments);\n                    }\n                    if (data.samplepacks) {\n                        pack.samplepacks = pack.samplepacks.concat(data.samplepacks);\n                    }\n                    if (data.midifiles) {\n                        pack.midifiles = pack.midifiles.concat(data.midifiles);\n                    }\n\n                    loadLoop(pack, callback);\n                }\n            });\n        } else {\n            pack.localPath = pack.folder !== undefined ? pack.folder + '/' + pack.name : pack.name;\n            loadLoop(pack, callback);\n        }\n    }\n\n\n    function loadLoop(assetpack, callback) {\n        var i, assets, asset,\n            loaded = store(assetpack),\n            localPath = assetpack.localPath;\n\n\n        if (loaded === true) {\n            assetpack = findItem(localPath, sequencer.storage.assetpacks, true);\n            callback(assetpack);\n            return;\n        }\n\n        if (assetpack.url !== undefined) {\n            var packs = sequencer.storage.assetpacks,\n                tmp, p, double = null;\n\n            for (p in packs) {\n                tmp = packs[p];\n                if (tmp.className !== 'AssetPack') {\n                    continue;\n                }\n                //console.log('loop', p, assetpack.id);\n                if (tmp.id !== assetpack.id && tmp.url === assetpack.url) {\n                    double = tmp;\n                    break;\n                }\n            }\n            if (double !== null) {\n                //console.log(double.id, assetpack.id);\n                localPath = assetpack.localPath;\n                removeAssetPack(localPath);\n\n                assetpack = null;\n                assetpack = findItem(double.localPath, sequencer.storage.assetpacks, true);\n                //console.log(assetpack.id, double.id);\n                callback(assetpack);\n                return;\n            }\n        }\n\n\n        assets = assetpack.midifiles;\n        for (i = assets.length - 1; i >= 0; i--) {\n            //console.log('midifile', assets[i]);\n            asset = assets[i];\n            asset.pack = assetpack;\n            sequencer.addMidiFile(asset);\n        }\n\n        assets = assetpack.instruments;\n        for (i = assets.length - 1; i >= 0; i--) {\n            //console.log('instrument', assets[i]);\n            asset = assets[i];\n            asset.pack = assetpack;\n            sequencer.addInstrument(asset);\n        }\n\n        assets = assetpack.samplepacks;\n        for (i = assets.length - 1; i >= 0; i--) {\n            //console.log('samplepack', assets[i], pack);\n            asset = assets[i];\n            asset.pack = assetpack;\n            //console.log(asset.folder, pack.fileSize);\n            sequencer.addSamplePack(asset);\n        }\n\n        callback(assetpack);\n    }\n\n\n    AssetPack.prototype.unload = function () {\n        var i, assets, asset;\n\n        assets = this.midifiles;\n        for (i = assets.length - 1; i >= 0; i--) {\n            asset = assets[i];\n            removeMidiFile(asset.folder + '/' + asset.name);\n        }\n\n        assets = this.instruments;\n        for (i = assets.length - 1; i >= 0; i--) {\n            asset = assets[i];\n            removeInstrument(asset.folder + '/' + asset.name);\n        }\n\n        assets = this.samplepacks;\n        for (i = assets.length - 1; i >= 0; i--) {\n            asset = assets[i];\n            removeSamplePack(asset.folder + '/' + asset.name);\n        }\n\n        deleteItem(this.localPath, storage.assetpacks);\n    };\n\n\n    sequencer.addAssetPack = function (config, callback) {\n        var type = typeString(config),\n            assetpack, json, name, folder;\n\n        if (type !== 'object') {\n            if (sequencer.debug >= 2) {\n                console.warn('can\\'t create an AssetPack with this data', config);\n            }\n            return false;\n        }\n\n        if (callback === undefined) {\n            callback = function () { };\n        }\n\n        if (config.json) {\n            json = config.json;\n            name = config.name;\n            folder = config.folder;\n            if (typeString(json) === 'string') {\n                try {\n                    json = JSON.parse(json);\n                } catch (e) {\n                    if (sequencer.debug >= 2) {\n                        console.warn('can\\'t create an AssetPack with this data', config);\n                    }\n                    return false;\n                }\n            }\n            if (json.instruments === undefined && json.midifiles === undefined && json.samplepacks === undefined) {\n                if (sequencer.debug >= 2) {\n                    console.warn('can\\'t create an AssetPack with this data', config);\n                }\n                return false;\n            }\n            config = {\n                midifiles: json.midifiles,\n                instruments: json.instruments,\n                samplepacks: json.samplepacks,\n                name: name === undefined ? json.name : name,\n                folder: folder === undefined ? json.folder : folder\n            };\n            //console.log('config', name, folder, json.name, json.folder);\n        }\n\n\n        //assetpack = new AssetPack(config);\n        //console.log(assetpack.id);\n\n        sequencer.addTask({\n            type: 'load asset pack',\n            method: load,\n            params: new AssetPack(config)\n        }, function (assetpack) {\n            config = null;\n            // console.log(assetpack.id);\n            callback(assetpack);\n            //console.log('assetpack', assetpack);\n        }, true);\n\n        sequencer.startTaskQueue();\n/*\n        sequencer.addTask({\n            method: load,\n            params: assetpack\n        }, function(){\n            console.log('loaded', assetpack);\n            store(assetpack);\n            if(callback){\n                callback(assetpack);\n            }\n        });\n*/\n    };\n\n\n    sequencer.protectedScope.addInitMethod(function () {\n\n        ajax = sequencer.protectedScope.ajax;\n        round = sequencer.protectedScope.round;\n        parseUrl = sequencer.protectedScope.parseUrl;\n        findItem = sequencer.protectedScope.findItem;\n        storeItem = sequencer.protectedScope.storeItem;\n        deleteItem = sequencer.protectedScope.deleteItem;\n        typeString = sequencer.protectedScope.typeString;\n        objectForEach = sequencer.protectedScope.objectForEach;\n\n        storage = sequencer.storage;\n        removeMidiFile = sequencer.removeMidiFile;\n        removeInstrument = sequencer.removeInstrument;\n        removeSamplePack = sequencer.removeSamplePack;\n        removeAssetPack = sequencer.removeAssetPack;\n    });\n}\nfunction audioEvent() {\r\n\r\n    'use strict';\r\n\r\n    var\r\n        slice = Array.prototype.slice,\r\n\r\n        //import\r\n        typeString, // → defined in utils.js\r\n\r\n        AudioEvent,\r\n        audioEventId = 0;\r\n\r\n\r\n    AudioEvent = function (config) {\r\n\r\n        if (config === undefined) {\r\n            // bypass for cloning\r\n            return;\r\n        }\r\n\r\n        // use ticks like in MidiEvent\r\n        if (config.ticks === undefined) {\r\n            this.ticks = 0;\r\n        } else {\r\n            this.ticks = config.ticks;\r\n        }\r\n\r\n\r\n        // provide either buffer (AudioBuffer) or path to a sample in the sequencer.storage object\r\n        this.buffer = config.buffer;\r\n        this.sampleId = config.sampleId;\r\n        this.path = config.path;\r\n\r\n        if (this.buffer === undefined && this.path === undefined) {\r\n            if (sequencer.debug >= sequencer.WARN) {\r\n                console.warn('please provide an AudioBuffer or a path to a sample in the sequencer.storage object');\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (this.buffer !== undefined && typeString(this.buffer) !== 'audiobuffer') {\r\n            if (sequencer.debug >= sequencer.WARN) {\r\n                console.warn('buffer has to be an AudioBuffer');\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (this.path !== undefined) {\r\n            if (typeString(this.path) !== 'string') {\r\n                if (sequencer.debug >= sequencer.WARN) {\r\n                    console.warn('path has to be a String');\r\n                }\r\n                return;\r\n            } else {\r\n\r\n                this.sampleId = this.path;\r\n                this.sampleId = this.sampleId.replace(/^\\//, '');\r\n                this.sampleId = this.sampleId.replace(/\\/$/, '');\r\n                this.sampleId = this.sampleId.split('/');\r\n                this.sampleId = this.sampleId[this.sampleId.length - 1];\r\n\r\n                this.buffer = sequencer.getSample(this.path);\r\n                if (this.buffer === false) {\r\n                    if (sequencer.debug >= sequencer.WARN) {\r\n                        console.warn('no sample found at', this.path);\r\n                    }\r\n                    return;\r\n                }\r\n                this.buffer = sequencer.getSample(this.path);\r\n                //console.log(this.sampleId, this.path, this.buffer);\r\n                //console.log(this.buffer);\r\n            }\r\n        }\r\n\r\n        // set either durationTicks of durationMillis, or both if they represent the same value\r\n        this.durationTicks = config.durationTicks;\r\n        this.durationMillis = config.durationMillis;\r\n\r\n        //console.log(this.durationTicks, this.durationMillis);\r\n\r\n        if (this.durationTicks === undefined && this.durationMillis === undefined) {\r\n            this.duration = this.buffer.duration;\r\n            this.durationMillis = this.duration * 1000;\r\n        }\r\n        //console.log(this.durationMillis, this.duration, this.buffer);\r\n\r\n        this.muted = false;\r\n\r\n        if (config.velocity === undefined) {\r\n            this.velocity = 127;\r\n        } else {\r\n            this.velocity = config.velocity;\r\n        }\r\n\r\n        // start of audio, also the quantize point, value in ticks or millis\r\n        this.sampleOffsetTicks = config.sampleOffsetTicks;\r\n        this.sampleOffsetMillis = config.sampleOffsetMillis;\r\n\r\n        if (this.sampleOffsetMillis === undefined && this.sampleOffsetTicks === undefined) {\r\n            this.sampleOffsetTicks = 0;\r\n            this.sampleOffsetMillis = 0;\r\n            this.sampleOffset = 0;\r\n        } else if (this.sampleOffsetMillis !== undefined) {\r\n            this.sampleOffset = this.sampleOffsetMillis / 1000;\r\n        }\r\n\r\n        this.latencyCompensation = config.latencyCompensation;\r\n        if (this.latencyCompensation === undefined) {\r\n            this.latencyCompensation = 0;\r\n        }\r\n\r\n        // if the playhead starts somewhere in the sample, this value will be set by the scheduler\r\n        this.playheadOffset = 0;\r\n\r\n        this.className = 'AudioEvent';\r\n        this.time = 0;\r\n        this.type = 'audio';\r\n        this.id = 'A' + audioEventId + new Date().getTime();\r\n    };\r\n\r\n\r\n    AudioEvent.prototype.update = function () {\r\n        var pos;\r\n        if (this.duration === undefined) {\r\n            pos = this.song.getPosition('ticks', this.ticks + this.durationTicks);\r\n            this.durationMillis = pos.millis - this.millis;\r\n            this.duration = this.durationMillis / 1000;\r\n            //console.log(pos, this.durationMillis);\r\n        } else if (this.durationTicks === undefined) {\r\n            pos = this.song.getPosition('millis', this.millis + this.durationMillis);\r\n            this.durationTicks = pos.ticks - this.ticks;\r\n        }\r\n\r\n        if (this.sampleOffset === undefined) {\r\n            pos = this.song.getPosition('ticks', this.ticks + this.sampleOffsetTicks);\r\n            //console.log(pos.barsAsString);\r\n            this.sampleOffsetMillis = pos.millis - this.millis;\r\n            this.sampleOffset = this.sampleOffsetMillis / 1000;\r\n            //console.log(this.sampleOffsetMillis);\r\n        } else if (this.sampleOffsetTicks === undefined) {\r\n            pos = this.song.getPosition('millis', this.millis + this.sampleOffsetMillis);\r\n            this.sampleOffsetTicks = pos.ticks - this.ticks;\r\n        }\r\n\r\n        this.endTicks = this.ticks + this.durationTicks;\r\n        this.endMillis = this.millis + this.durationMillis;\r\n    };\r\n\r\n\r\n\r\n    AudioEvent.prototype.stopSample = function (seconds) {\r\n        this.track.audio.stopSample(this, seconds);\r\n    };\r\n\r\n\r\n    AudioEvent.prototype.setSampleOffset = function (type, value) {\r\n        if (type === 'millis') {\r\n            this.sampleOffsetMillis = value;\r\n            this.sampleOffset = value / 1000;\r\n            this.durationTicks = undefined;\r\n            if (this.song !== undefined) {\r\n                this.update();\r\n            }\r\n        } else if (type === 'ticks') {\r\n            this.sampleOffsetTicks = value;\r\n            this.sampleOffset = undefined;\r\n            this.sampleOffsetMillis = undefined;\r\n            if (this.song !== undefined) {\r\n                this.update();\r\n            }\r\n        } else {\r\n            if (sequencer.debug >= sequencer.WARN) {\r\n                console.warn('you have to provide a type \"ticks\" or \"millis\" and a value');\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    AudioEvent.prototype.setDuration = function (type, value) {\r\n        if (type === 'millis') {\r\n            this.durationMillis = value;\r\n            this.duration = value / 1000;\r\n            this.durationTicks = undefined;\r\n            if (this.song !== undefined) {\r\n                this.update();\r\n            }\r\n        } else if (type === 'ticks') {\r\n            this.durationTicks = value;\r\n            this.duration = undefined;\r\n            this.durationMillis = undefined;\r\n            if (this.song !== undefined) {\r\n                this.update();\r\n            }\r\n        } else {\r\n            if (sequencer.debug >= sequencer.WARN) {\r\n                console.warn('you have to provide a type \"ticks\" or \"millis\" and a value');\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    AudioEvent.prototype.clone = AudioEvent.prototype.copy = function () {\r\n        var event = new AudioEvent(),\r\n            property;\r\n\r\n        for (property in this) {\r\n            if (this.hasOwnProperty(property)) {\r\n                //console.log(property);\r\n                if (property !== 'id' && property !== 'eventNumber') {\r\n                    event[property] = this[property];\r\n                }\r\n                event.song = undefined;\r\n                event.track = undefined;\r\n                event.trackId = undefined;\r\n                event.part = undefined;\r\n                event.partId = undefined;\r\n            }\r\n        }\r\n        return event;\r\n    };\r\n\r\n\r\n    // same as MidiEvent, could be inherited from generic Event\r\n    AudioEvent.prototype.reset = function (fromPart, fromTrack, fromSong) {\r\n\r\n        fromPart = fromPart === undefined ? true : false;\r\n        fromTrack = fromTrack === undefined ? true : false;\r\n        fromSong = fromSong === undefined ? true : false;\r\n\r\n        if (fromPart) {\r\n            this.part = undefined;\r\n            this.partId = undefined;\r\n        }\r\n        if (fromTrack) {\r\n            this.track = undefined;\r\n            this.trackId = undefined;\r\n            this.channel = 0;\r\n        }\r\n        if (fromSong) {\r\n            this.song = undefined;\r\n        }\r\n    };\r\n\r\n\r\n\r\n    // same as MidiEvent, could be inherited from generic Event\r\n    AudioEvent.prototype.move = function (ticks) {\r\n        if (isNaN(ticks)) {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('please provide a number');\r\n            }\r\n            return;\r\n        }\r\n        this.ticks += parseInt(ticks, 10);\r\n        if (this.song !== undefined) {\r\n            this.update();\r\n        }\r\n        if (this.state !== 'new') {\r\n            this.state = 'changed';\r\n        }\r\n        if (this.part !== undefined) {\r\n            this.part.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    // same as MidiEvent, could be inherited from generic Event\r\n    AudioEvent.prototype.moveTo = function () {\r\n        var position = slice.call(arguments);\r\n        //console.log(position);\r\n\r\n        if (position[0] === 'ticks' && isNaN(position[1]) === false) {\r\n            this.ticks = parseInt(position[1], 10);\r\n        } else if (this.song === undefined) {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('The audio event has not been added to a song yet; you can only move to ticks values');\r\n            }\r\n        } else {\r\n            position = this.song.getPosition(position);\r\n            if (position === false) {\r\n                if (sequencer.debug >= 1) {\r\n                    console.error('wrong position data');\r\n                }\r\n            } else {\r\n                this.ticks = position.ticks;\r\n            }\r\n        }\r\n\r\n        if (this.song !== undefined) {\r\n            this.update();\r\n        }\r\n        if (this.state !== 'new') {\r\n            this.state = 'changed';\r\n        }\r\n        if (this.part !== undefined) {\r\n            this.part.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    sequencer.createAudioEvent = function (config) {\r\n        if (config.className === 'AudioEvent') {\r\n            return config.clone();\r\n        }\r\n        return new AudioEvent(config);\r\n    };\r\n\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n        typeString = sequencer.protectedScope.typeString;\r\n    });\r\n\r\n}function audioRecorder() {\n\n    'use strict';\n\n    var\n        // import\n        context, // defined in open_module.js\n        encode64, // defined in util.js\n        dispatchEvent, // defined in song_event_listener.js\n        createWorker, // defined in audio_recorder_worker.js\n        getWaveformData, //defined in util.js\n\n        microphoneAccessGranted = null,\n        localMediaStream,\n\n        bufferSize = 8192,\n        millisPerSample,\n        bufferMillis,\n\n        waveformConfig = {\n            height: 200,\n            width: 800,\n            //density: 0.0001,\n            sampleStep: 1,\n            color: '#71DE71',\n            bgcolor: '#000'\n        };\n\n\n    function AudioRecorder(track) {\n        this.track = track;\n        this.song = track.song;\n        this.audioEvents = {};\n        this.callback = null; // callback after wav audio file of the recording has been created or updated\n        this.worker = createWorker();\n        this.waveformConfig = track.waveformConfig || waveformConfig;\n\n        var scope = this;\n        this.worker.onmessage = function (e) {\n            //createAudioBuffer(scope, e.data.wavArrayBuffer, e.data.interleavedSamples, e.data.planarSamples, e.data.id);\n            encodeAudioBuffer(scope, e.data.wavArrayBuffer, e.data.interleavedSamples, e.data.id);\n        };\n    }\n\n\n    function createAudioBuffer(scope, wavArrayBuffer, interleavedSamples, planarSamples, type) {\n        var\n            i,\n            frameCount = planarSamples.length,\n            base64 = encode64(wavArrayBuffer),\n            audioBuffer = context.createBuffer(1, frameCount, context.sampleRate),\n            samples = audioBuffer.getChannelData(0),\n            recording = {\n                id: scope.recordId,\n                audioBuffer: null,\n                wavArrayBuffer: wavArrayBuffer,\n                wav: {\n                    blob: new Blob([new Uint8Array(wavArrayBuffer)], { type: 'audio/wav' }),\n                    base64: base64,\n                    dataUrl: 'data:audio/wav;base64,' + base64\n                },\n                waveform: {}\n            };\n\n    for (let i = 0; i < frameCount; i++) {\n            samples[i] = planarSamples[i];\n        }\n        recording.audioBuffer = audioBuffer;\n\n        // keep a copy of the original samples for non-destructive editing\n        if (type === 'new') {\n            recording.planarSamples = planarSamples;\n            recording.interleavedSamples = interleavedSamples;\n        } else {\n            recording.planarSamples = sequencer.storage.audio.recordings[scope.recordId].planarSamples;\n            recording.interleavedSamples = sequencer.storage.audio.recordings[scope.recordId].interleavedSamples;\n        }\n\n        sequencer.storage.audio.recordings[scope.recordId] = recording;\n        //console.log('create took', window.performance.now() - scope.timestamp);\n\n        if (scope.callback !== null) {\n            scope.callback(recording);\n            scope.callback = null;\n        }\n    }\n\n\n    function encodeAudioBuffer(scope, wavArrayBuffer, interleavedSamples, type) {\n        //console.log(wavArrayBuffer, interleavedSamples, type);\n        context.decodeAudioData(wavArrayBuffer, function (audioBuffer) {\n            var\n                base64 = encode64(wavArrayBuffer),\n                recording = {\n                    id: scope.recordId,\n                    audioBuffer: audioBuffer,\n                    wavArrayBuffer: wavArrayBuffer,\n                    wav: {\n                        blob: new Blob([new Uint8Array(wavArrayBuffer)], { type: 'audio/wav' }),\n                        base64: base64,\n                        dataUrl: 'data:audio/wav;base64,' + base64\n                    },\n                    waveform: {}\n                };\n\n            // keep a copy of the original samples for non-destructive editing\n            if (type === 'new') {\n                recording.interleavedSamples = interleavedSamples;\n            } else {\n                recording.interleavedSamples = sequencer.storage.audio.recordings[scope.recordId].interleavedSamples;\n            }\n\n            // create waveform images\n            getWaveformData(\n                audioBuffer,\n                scope.waveformConfig,\n                //callback\n                function (data) {\n                    recording.waveform = { dataUrls: data };\n                    sequencer.storage.audio.recordings[scope.recordId] = recording;\n                    //console.log('encode took', window.performance.now() - scope.timestamp);\n                    if (scope.callback !== null) {\n                        scope.callback(recording);\n                        scope.callback = null;\n                    }\n                }\n            );\n\n        }, function () {\n            if (sequencer.debug >= sequencer.WARN) {\n                console.warn('no valid audiodata');\n            }\n        });\n    }\n\n\n    function record(callback) {\n\n        navigator.getUserMedia({ audio: true },\n\n            // successCallback\n            function (stream) {\n                microphoneAccessGranted = true;\n                // localMediaStream is type of MediaStream that comes from microphone\n                localMediaStream = stream;\n                //console.log(localMediaStream.getAudioTracks());\n                //console.log(localMediaStream.getVideoTracks());\n                callback();\n            },\n\n            // errorCallback\n            function (error) {\n                if (sequencer.debug >= sequencer.WARN) {\n                    console.log(error);\n                }\n                microphoneAccessGranted = false;\n                callback();\n            }\n        );\n    }\n\n\n    // this triggers the little popup in the browser where the user has to grant access to her microphone\n    AudioRecorder.prototype.prepare = function (recordId, callback) {\n        var scope = this;\n\n        this.recordId = recordId;\n\n        if (microphoneAccessGranted === null) {\n            record(function () {\n                callback(microphoneAccessGranted);\n                if (localMediaStream !== undefined) {\n                    //scope.localMediaStream = localMediaStream.clone(); -> not implemented yet\n                    scope.start();\n                }\n            });\n        } else {\n            callback(microphoneAccessGranted);\n            if (localMediaStream !== undefined) {\n                //this.localMediaStream = localMediaStream.clone(); -> not implemented yet\n                this.start();\n            }\n        }\n    };\n\n\n    AudioRecorder.prototype.start = function () {\n        var scope = this,\n            song = this.track.song;\n\n        scope.worker.postMessage({\n            command: 'init',\n            sampleRate: context.sampleRate\n        });\n\n        this.scriptProcessor = context.createScriptProcessor(bufferSize, 1, 1);\n\n        this.scriptProcessor.onaudioprocess = function (e) {\n\n            if (e.inputBuffer.numberOfChannels === 1) {\n\n                scope.worker.postMessage({\n                    command: 'record_mono',\n                    buffer: e.inputBuffer.getChannelData(0)\n                });\n\n\n            } else {\n\n                scope.worker.postMessage({\n                    command: 'record_stereo',\n                    buffer: [\n                        e.inputBuffer.getChannelData(0),\n                        e.inputBuffer.getChannelData(1)\n                    ]\n                });\n            }\n\n            if (song.recording === false && song.precounting === false) {\n                scope.createAudio();\n            }\n        };\n\n        this.sourceNode = context.createMediaStreamSource(localMediaStream);\n        this.sourceNode.connect(this.scriptProcessor);\n        this.scriptProcessor.connect(context.destination);\n    };\n\n\n    AudioRecorder.prototype.stop = function (callback) {\n        this.stopRecordingTimestamp = context.currentTime * 1000;\n        this.timestamp = window.performance.now();\n        if (this.sourceNode === undefined) {\n            callback();\n            return;\n        }\n        this.callback = callback;\n    };\n\n\n    // create wav audio file after recording has stopped\n    AudioRecorder.prototype.createAudio = function () {\n        this.sourceNode.disconnect(this.scriptProcessor);\n        this.scriptProcessor.disconnect(context.destination);\n        this.scriptProcessor.onaudioprocess = null;\n        this.sourceNode = null;\n        this.scriptProcessors = null;\n\n        // remove precount bars and latency\n        var bufferIndexStart = parseInt((this.song.metronome.precountDurationInMillis + this.song.audioRecordingLatency) / millisPerSample),\n            bufferIndexEnd = -1;\n\n        this.worker.postMessage({\n            command: 'get_wavfile',\n            //command: 'get_wavfile2', // use this if you want to create the audio buffer instead of decoding it\n            bufferIndexStart: bufferIndexStart,\n            bufferIndexEnd: bufferIndexEnd\n        });\n    };\n\n\n    // adjust latency for specific recording -> all audio events that use this audio data will be updated!\n    // if you don't want that, please use AudioEvent.sampleOffset to adjust the starting point of the audio data\n    AudioRecorder.prototype.setAudioRecordingLatency = function (recordId, value, callback) {\n        var bufferIndexStart = parseInt(value / millisPerSample),\n            bufferIndexEnd = -1;\n\n        this.callback = callback;\n        this.worker.postMessage({\n            command: 'update_wavfile',\n            samples: sequencer.storage.audio.recordings[recordId].interleavedSamples,\n            bufferIndexStart: bufferIndexStart,\n            bufferIndexEnd: bufferIndexEnd\n        });\n    };\n\n\n    AudioRecorder.prototype.cleanup = function () {\n        if (localMediaStream === undefined) {\n            this.worker.terminate();\n            return;\n        }\n        //this.localMediaStream.stop();\n        this.scriptProcessor.disconnect();\n        this.scriptProcessor.onaudioprocess = null;\n        this.sourceNode.disconnect();\n        this.scriptProcessor = null;\n        this.sourceNode = null;\n        this.worker.terminate();\n    };\n\n\n    sequencer.protectedScope.createAudioRecorder = function (track) {\n        if (sequencer.record_audio === false) {\n            return false;\n        }\n        return new AudioRecorder(track);\n    };\n\n\n    sequencer.protectedScope.addInitMethod(function () {\n        encode64 = sequencer.util.encode64;\n        context = sequencer.protectedScope.context;\n        getWaveformData = sequencer.getWaveformData;\n        createWorker = sequencer.protectedScope.createAudioRecorderWorker;\n        millisPerSample = (1 / context.sampleRate) * 1000;\n        dispatchEvent = sequencer.protectedScope.songDispatchEvent;\n        bufferMillis = bufferSize * millisPerSample;\n    });\n\n}\n\n\n/*\n    // real-time waveform rendering, not implemented\n    AudioRecorder.prototype.drawCanvas = function(amplitudeArray, column){\n        var minValue = 9999999;\n        var maxValue = 0;\n        var canvasHeight = 100;\n        var canvasWidth = 1000;\n\n        for (var i = 0; i < amplitudeArray.length; i++) {\n            var value = amplitudeArray[i] / 256;\n            if(value > maxValue) {\n                maxValue = value;\n            } else if(value < minValue) {\n                minValue = value;\n            }\n        }\n\n        var y_lo = canvasHeight - (canvasHeight * minValue) - 1;\n        var y_hi = canvasHeight - (canvasHeight * maxValue) - 1;\n\n        this.context2d.fillStyle = '#ffffff';\n        this.context2d.fillRect(column, y_lo, 1, y_hi - y_lo);\n    };\n*/\n\n\n\n/*\n            getWaveformImageUrlFromBuffer(\n                audioBuffer,\n\n                {\n                    height: 200,\n                    //density: 0.0001,\n                    width: 800,\n                    sampleStep: 1,\n                    // density: 0.5,\n                    color: '#71DE71',\n                    bgcolor: '#000',\n                    samples: samples\n                },\n\n                //callback\n                function(urls){\n                    var image, images = [],\n                        i, maxi = urls.length;\n\n                    // create html image instances from the data-urls\n                    for(i = 0; i < maxi; i++){\n                        image = document.createElement('img');\n                        image.src = urls[i];\n                        image.origWidth = image.width;\n                        image.height = 100;\n                        images.push(image);\n                    }\n\n                    recording.waveform.images = images;\n                    recording.waveform.dataUrls = urls;\n\n                    sequencer.storage.audio.recordings[scope.recordId] = recording;\n                    console.log('took', window.performance.now() - scope.timestamp);\n                    if(scope.callback !== null){\n                        scope.callback(recording);\n                        scope.callback = null;\n                    }\n                }\n            );\n*/\n/*\n    controls the playback of the audio events in a track\n*/\nfunction audioTrack() {\n  \"use strict\";\n\n  var slice = Array.prototype.slice,\n    //import\n    typeString, // → defined in utils.js\n    createAudioRecorder, // → defined in audio_recorder.js\n    unscheduleCallback,\n    AudioTrack;\n\n  AudioTrack = function (track) {\n    this.track = track;\n    this.className = \"AudioTrack\";\n    this.scheduledSamples = {};\n    // this.recorder = createAudioRecorder(track);\n  };\n\n  unscheduleCallback = function (sample) {\n    //console.log(sample.id, 'has been unscheduled');\n    delete this.scheduledSamples[sample.id];\n    sample = null;\n  };\n\n  AudioTrack.prototype.setAudioRecordingLatency = function (\n    recordId,\n    value,\n    callback\n  ) {\n    this.recorder.setAudioRecordingLatency(recordId, value, callback);\n  };\n\n  AudioTrack.prototype.processEvent = function (audioEvent) {\n    var sample = sequencer.createSample({\n      buffer: audioEvent.buffer,\n      track: audioEvent.track,\n    });\n    audioEvent.sample = sample;\n    //console.log(audioEvent.sampleOffset, audioEvent.playheadOffset, audioEvent.latencyCompensation);\n    audioEvent.offset = audioEvent.sampleOffset + audioEvent.playheadOffset; // + audioEvent.latencyCompensation;\n    //audioEvent.time -= audioEvent.latencyCompensation;\n    // set playheadOffset to 0 after the event has been scheduled\n    audioEvent.playheadOffset = 0;\n    //sample.start(audioEvent.time/1000, 127, audioEvent.offsetMillis/1000, audioEvent.durationMillis/1000);\n\n    // console.log(sample);\n    sample.start(audioEvent);\n    //console.log(time, time + audioEvent.durationMillis/1000);\n    //sample.stop(time + audioEvent.durationMillis/1000, function(){});\n\n    this.scheduledSamples[sample.id] = sample;\n  };\n\n  /*\n        AudioTrack.prototype.playEvent = function(audioEvent, seconds){\n        };\n    */\n\n  AudioTrack.prototype.mute = function (audioEvent, mute) {\n    console.log(audioEvent.sample);\n    if (audioEvent.sample === undefined) {\n      return;\n    }\n    audioEvent.sample.output.gain = mute ? 0 : 1;\n  };\n\n  AudioTrack.prototype.stopSample = function (audioEvent, seconds) {\n    //console.log('stopping', audioEvent.id);\n    if (audioEvent.sample === undefined) {\n      return;\n    }\n    audioEvent.sample.stop(seconds, unscheduleCallback.bind(this));\n  };\n\n  AudioTrack.prototype.allNotesOff = function () {\n    var sampleId,\n      sample,\n      scheduledSamples = this.scheduledSamples;\n\n    for (sampleId in scheduledSamples) {\n      if (scheduledSamples.hasOwnProperty(sampleId)) {\n        //console.log('allNotesOff', sampleId);\n        sample = scheduledSamples[sampleId];\n        if (sample) {\n          sample.unschedule(0, unscheduleCallback.bind(this));\n        }\n      }\n    }\n    this.scheduledSamples = {};\n  };\n\n  AudioTrack.prototype.prepareForRecording = function (recordId, callback) {\n    if (this.recorder === false) {\n      return false;\n    }\n    this.recorder.prepare(recordId, callback);\n  };\n\n  AudioTrack.prototype.stopRecording = function (callback) {\n    this.recorder.stop(function (recording) {\n      callback(recording);\n    });\n  };\n\n  sequencer.protectedScope.createAudioTrack = function (track) {\n    return new AudioTrack(track);\n  };\n\n  sequencer.protectedScope.addInitMethod(function () {\n    typeString = sequencer.protectedScope.typeString;\n    createAudioRecorder = sequencer.protectedScope.createAudioRecorder;\n  });\n}\n\n// Sample.source -> gain (midiEvent.velocity) ->\n// Track.input -> [FX input ~~ FX output] -> Track.panner (Track.setPanning())-> Track.output (Track.setVolume())\n// Song.gain (Song.setVolume()) ->\n// Sequencer.gain (sequencer.setMasterVolume()) -> Sequencer.compressor -> context.destiny\n\nfunction channelEffects() {\n\n    'use strict';\n\n    var\n\n        id = 0,\n        context,\n\n        zeroValue = 0.00000000000000001,\n\n        createClass, // defined in util.js\n        getSample, // defined in instrument_manager.js\n\n        Reverb,\n        Panner,\n        Panner2,\n        Delay,\n        BiQuadFilter,\n        Compressor;\n\n\n    function Effect(config) {\n        this.id = 'FX' + id++ + '' + new Date().getTime();\n        this.type = config.type;\n        this.buffer = config.buffer;\n        this.config = config;\n\n        this.bypass = false;\n        this.amount = 0;//0.5;\n\n        this.output = context.createGainNode();\n        this.wetGain = context.createGainNode();\n        this.dryGain = context.createGainNode();\n\n        this.output.gain.value = 1;\n        this.wetGain.gain.value = this.amount;\n        this.dryGain.gain.value = 1 - this.amount;\n    }\n\n\n    Effect.prototype.setInput = function (input) {\n        // input.connect(this.node);\n        // return;\n\n        // dry channel\n        input.connect(this.dryGain);\n        this.dryGain.connect(this.output);\n\n        // wet channel\n        input.connect(this.node);\n        this.node.connect(this.wetGain);\n        this.wetGain.connect(this.output);\n    };\n\n    /*\n        Effect.prototype.setOutput = function(output){\n            this.output.disconnect(0);\n            this.output.connect(output);\n        };\n    */\n\n    Effect.prototype.setAmount = function (value) {\n        /*\n        this.amount = value < 0 ? 0 : value > 1 ? 1 : value;\n        var gain1 = Math.cos(this.amount * 0.5 * Math.PI),\n            gain2 = Math.cos((1.0 - this.amount) * 0.5 * Math.PI);\n        this.gainNode.gain.value = gain2 * this.ratio;\n        */\n\n        this.amount = value < 0 ? 0 : value > 1 ? 1 : value;\n        this.wetGain.gain.value = this.amount;\n        this.dryGain.gain.value = 1 - this.amount;\n        //console.log('wet',this.wetGain.gain.value,'dry',this.dryGain.gain.value);\n    };\n\n\n    Effect.prototype.copy = function () {\n        switch (this.type) {\n            case 'reverb':\n                return new Reverb(this.config);\n            case 'panner':\n                return new Panner(this.config);\n            case 'panner2':\n                return new Panner2(this.config);\n            case 'delay':\n                return new Delay(this.config);\n            case 'compressor':\n                return new Compressor(this.config);\n        }\n    };\n\n\n    sequencer.createReverb = function (id) {\n        var buffer = getSample(id);\n        if (buffer === false) {\n            console.warn('no reverb with id', id, 'loaded');\n            return false;\n        }\n        var config = {\n            type: 'reverb',\n            buffer: buffer\n        };\n        return new Reverb(config);\n    };\n\n\n    sequencer.createPanner = function (config) {\n        config = config || {};\n        config.type = 'panner';\n        return new Panner(config);\n    };\n\n\n    sequencer.createPanner2 = function (config) {\n        config = config || {};\n        config.type = 'panner2';\n        return new Panner2(config);\n    };\n\n\n    sequencer.createDelay = function (config) {\n        config = config || {};\n        config.type = 'delay';\n        return new Delay(config);\n    };\n\n\n    sequencer.createCompressor = function (config) {\n        config = config || {};\n        config.type = 'compressor';\n        return new Compressor(config);\n    };\n\n\n    sequencer.createBiQuadFilter = function (config) {\n        config = config || {};\n        config.type = 'biquadfilter';\n        return new BiQuadFilter(config);\n    };\n\n\n    sequencer.protectedScope.addInitMethod(function () {\n        context = sequencer.protectedScope.context;\n        createClass = sequencer.protectedScope.createClass;\n        getSample = sequencer.getSample;\n\n        Reverb = createClass(Effect, function (config) {\n            this.node = context.createConvolver();\n            this.node.buffer = config.buffer;\n            //console.log(this.node.buffer);\n        });\n\n        Panner = createClass(Effect, function (config) {\n            this.node = context.createPanner();\n            this.node.panningModel = 'equalpower';\n            this.node.setPosition(zeroValue, zeroValue, zeroValue);\n        });\n\n        Panner2 = createClass(Effect, function (config) {\n            this.node = context.createPanner();\n            this.node.panningModel = 'HRTF';\n            this.node.setPosition(zeroValue, zeroValue, zeroValue);\n        });\n\n        Delay = createClass(Effect, function (config) {\n            this.node = context.createDelay();\n            this.node.delayTime.value = 0.3;\n        });\n\n        Compressor = createClass(Effect, function (config) {\n            this.node = context.createDynamicsCompressor();\n        });\n\n\n        BiQuadFilter = createClass(Effect, function (config) {\n            this.node = context.createBiquadFilter();\n            this.node.type = 0;\n            this.node.Q.value = 4;\n            this.node.frequency.value = 1600;\n        });\n\n        /*\n        Panner.prototype.setPosition = function(x, y, z){\n            var multiplier = 5;\n            console.log(x * multiplier);\n            this.node.setPosition(x * multiplier, y * multiplier, z * multiplier);\n        };\n        */\n\n        Panner.prototype.setPosition = function (value) {\n            var x = value,\n                y = 0,\n                z = 1 - Math.abs(x);\n\n            x = x === 0 ? zeroValue : x;\n            y = y === 0 ? zeroValue : y;\n            z = z === 0 ? zeroValue : z;\n            this.node.setPosition(x, y, z);\n            //console.log(1,x,y,z);\n        };\n\n        Panner2.prototype.setPosition = function (value) {\n            var xDeg = parseInt(value),\n                zDeg = xDeg + 90,\n                x, y, z;\n            if (zDeg > 90) {\n                zDeg = 180 - zDeg;\n            }\n            x = Math.sin(xDeg * (Math.PI / 180));\n            y = 0;\n            z = Math.sin(zDeg * (Math.PI / 180));\n            x = x === 0 ? zeroValue : x;\n            y = y === 0 ? zeroValue : y;\n            z = z === 0 ? zeroValue : z;\n            this.node.setPosition(x, y, z);\n            //console.log(2,x,y,z);\n        };\n\n        Delay.prototype.setTime = function (value) {\n            this.node.delayTime.value = value;\n        };\n\n    });\n}\n\n\n/*\n\n        // only reverb is currently supported, filter out reverb\n        if(this.numEffects > 0){\n            for(i in this.effects){\n                if(this.effects.hasOwnProperty(i)){\n                   effect = this.effects[i];\n                   if(this.reverb === undefined && effect.type === 'reverb'){\n                        this.reverb = effect;\n                        break;\n                   }\n                }\n            }\n            this.source.connect(this.reverb.node);\n            this.reverb.node.disconnect(0);\n            this.reverb.node.connect(this.wetGain);\n            this.wetGain.gain.value = this.reverb.amount;\n            this.dryGain.gain.value = (1 - this.reverb.amount);\n        }else{\n            this.dryGain.gain.value = 1;\n        }\n\n\n*/\n\n\n\n/*\n\n    operators:\n\n    - max\n    - min\n    - avg\n    - all\n\n\n    eventStats.get('noteNumber max');\n    eventStats.get('noteNumber min');\n    eventStats.get('noteNumber avg');\n\n    eventStats.get('data2 max type = PITCH_BEND');\n    eventStats.get('data2 min');\n    eventStats.get('data2 avg');\n\n    eventStats.get('velocity avg bar = 3');\n\n    eventStats.get('velocity max musical_time > 1,1,1,0 < 8,1,1,0');\n\n\n    return {\n        min: min,\n        max: max,\n        avg: avg\n    };\n\n\n    implementation:\n\n    song.getStats(searchString);\n    track.getStats(searchString);\n    sequencer.getStats(events, searchString);\n\n\n*/\n\nfunction eventStatistics() {\n\n    'use strict';\n\n    var\n        //import\n        createNote = sequencer.createNote, // → defined in note.js\n        findEvent = sequencer.findEvent, // → defined in find_event.js\n        round = sequencer.protectedScope.round, // → defined in util.js\n        getEvents = sequencer.protectedScope.getEvents, // → defined in find_event.js\n        typeString = sequencer.protectedScope.typeString, // → defined in util.js\n\n        supportedOperators = 'max min avg all',\n        supportedProperties = 'data1 data2 velocity noteNumber noteName frequency',\n\n        //public\n        getStats;\n\n\n    /**\n        @memberof sequencer\n        @instance\n        @param {array} events\n        @param {string} searchString\n        @description Get statistics of an array of events, see [documentation]{@link http://heartbeatjs.org/docs/statistics}\n    */\n    getStats = function () {\n        var args = Array.prototype.slice.call(arguments),\n            numArgs = args.length,\n            property,\n            operator,\n            events,\n            searchPattern,\n            patternLength,\n            i, maxi, event, propValue,\n            minNoteName,\n            maxNoteName,\n            min = 128,//Number.MAX_VALUE,\n            max = -1,\n            sum = 0,\n            avg = 0,\n            useNoteName = false;\n\n\n        events = getEvents(args[0]);\n\n        if (events.length === 0) {\n            //console.warn('getStats: no events');\n            return -1;\n        }\n\n        searchPattern = args[1];\n\n        if (typeString(searchPattern) !== 'string') {\n            console.error('please provide a search string like for instance get(\\'velocity max bar >= 1 < 8\\')');\n            return -1;\n        }\n\n        if (numArgs > 2) {\n            console.warn('ignoring invalid arguments, please consult documentation');\n        }\n\n        searchPattern = searchPattern.split(' ');\n        patternLength = searchPattern.length;\n\n        property = searchPattern[0];\n        operator = searchPattern[1];\n\n        if (supportedProperties.indexOf(property) === -1) {\n            console.error('you can\\'t use \\'min\\', \\'max\\' or \\'avg\\'', 'on the property', property);\n            return -1;\n        }\n\n        if (supportedOperators.indexOf(operator) === -1) {\n            console.error(operator, 'is not a valid operator');\n            return -1;\n        }\n\n\n        if (patternLength > 2) {\n\n            //if(patternLength !== 5 && !(patternLength >= 7)){\n            if (patternLength === 6) {\n                console.warn('ignoring cruft found in search string, please consult documentation');\n            }\n\n            searchPattern.shift(); // remove property\n            searchPattern.shift(); // remove operator\n\n            //filter events\n            events = findEvent(events, searchPattern.join(' '));\n        }\n\n        //console.log(events);\n\n        if (property === 'noteName') {\n            property = 'noteNumber';\n            useNoteName = true;\n        }\n\n        for (i = 0, maxi = events.length; i < maxi; i++) {\n            event = events[i];\n            propValue = event[property];\n\n            if (propValue > max) {\n                //console.log('max', propValue, max);\n                max = propValue;\n                maxNoteName = event.noteName;\n            }\n            if (propValue < min) {\n                //console.log('min', propValue, min);\n                min = propValue;\n                minNoteName = event.noteName;\n            }\n\n            if (propValue !== undefined) {\n                sum += propValue;\n            }\n        }\n\n        avg = sum / maxi;\n\n        if (useNoteName) {\n            avg = round(avg);\n            avg = createNote(avg).name;\n            min = minNoteName;\n            max = maxNoteName;\n        }\n\n        if (operator === 'max') {\n            return max;\n        }\n\n        if (operator === 'min') {\n            return min;\n        }\n\n        if (operator === 'avg') {\n            return avg;\n        }\n\n        if (operator === 'all') {\n            return {\n                min: min,\n                max: max,\n                avg: avg\n            };\n        }\n    };\n\n    sequencer.getStats = getStats;\n\n    sequencer.protectedScope.addInitMethod(function () {\n        createNote = sequencer.createNote;\n        findEvent = sequencer.findEvent;\n        round = sequencer.protectedScope.round;\n        getEvents = sequencer.protectedScope.getEvents;\n        typeString = sequencer.protectedScope.typeString;\n    });\n\n}function findEvent() {\r\n\r\n\t'use strict';\r\n\r\n\tvar\r\n\t\t//import\r\n\t\tcreateNote, // → defined in note.js\r\n\t\ttypeString, // → defined in util.js\r\n\t\tcreateMidiNote, // → defined in midi_note.js\r\n\t\tmidiEventNumberByName, // → defined in midi_event_names.js\r\n\r\n\t\t//local\r\n\t\tpatterns,\r\n\t\toperators,\r\n\r\n\t\tproperties = {\r\n\t\t\t'barsbeats': ['bar', 'beat', 'sixteenth', 'tick'],\r\n\t\t\t'time': ['hour', 'minute', 'second', 'millisecond']\r\n\t\t},\r\n\r\n\t\tlogicalOperators = 'OR AND NOT XOR',\r\n\t\tlogicalOperatorsRegex = new RegExp(' ' + logicalOperators.replace(/\\s+/g, ' | ') + ' '),// → replaces logical operator by a white space\r\n\r\n\t\tsupportedProperties = {\r\n\t\t\tbar: 1,\r\n\t\t\tbeat: 1,\r\n\t\t\tsixteenth: 1,\r\n\t\t\ttick: 1,\r\n\t\t\tticks: 1,\r\n\t\t\tbarsbeats: 1,\r\n\t\t\tmusical_time: 1,\r\n\r\n\t\t\thour: 1,\r\n\t\t\tminute: 1,\r\n\t\t\tsecond: 1,\r\n\t\t\tmillisecond: 1,\r\n\t\t\tmillis: 1,\r\n\t\t\ttime: 1,\r\n\t\t\tlinear_time: 1,\r\n\r\n\t\t\tid: 1,\r\n\t\t\ttype: 1,\r\n\t\t\tdata1: 1,\r\n\t\t\tdata2: 1,\r\n\t\t\tvelocity: 1, // only if midi event is note on or note off\r\n\t\t\tnoteNumber: 1, // idem\r\n\t\t\tfrequency: 1, // idem\r\n\t\t\tnoteName: 1 // idem\r\n\t\t},\r\n\r\n\r\n\t\t//public\r\n\t\tfindEvent,\r\n\t\tfindNote,\r\n\r\n\t\t//private\r\n\t\tgetEvents,\r\n\t\tcheckValue,\r\n\t\tcreatePattern,\r\n\t\tcheckOperators,\r\n\t\tcheckCondition,\r\n\t\tcheckCondition2,\r\n\t\tinverseOperator,\r\n\t\tremoveMutualEvents,\r\n\t\tremoveDoubleEvents,\r\n\t\tperformSearch;\r\n\r\n\t/*\r\n\r\n\t\t(bar > 3 AND beat = 2 OR velocity = 60) => ((bar > 3 && beat === 2) || velocity === 60)\r\n\r\n\t\t(beat = 2 OR velocity = 60 AND bar > 3) => ((beat === 2 || velocity === 60) && bar > 3)\r\n\r\n\t\t(beat == 2 XOR velocity == 60) -> all events that are on beat 2 and all events that have on velocity 60, but not the event that match both\r\n\r\n\t\tstep 1: get all events that match beat == 2\r\n\t\tstep 2: add all events that match velocity == 60\r\n\t\tstep 3: remove all events that match both beat == 2 AND velocity == 60\r\n\t*/\r\n\r\n\r\n\tfindEvent = function () {\r\n\t\t//console.time('find events');\r\n\t\tvar args = Array.prototype.slice.call(arguments),\r\n\t\t\ti, maxi,\r\n\t\t\t//j, maxj,\r\n\t\t\t//k, maxk,\r\n\t\t\tsearchString, tmp,\r\n\t\t\toperator, pattern,\r\n\t\t\tprevPattern, prevOperator,\r\n\t\t\tpatternIndex, operatorIndex,\r\n\t\t\tevents, results,\r\n\t\t\tlastResult,\r\n\t\t\tsubResult1,\r\n\t\t\tsubResult2;\r\n\r\n\r\n\t\t//console.log(args[0])\r\n\t\tevents = getEvents(args[0]);\r\n\t\tresults = [];\r\n\r\n\t\tif (events.length === 0) {\r\n\t\t\tconsole.warn('findEvent: no events');\r\n\t\t\treturn results;\r\n\t\t}\r\n\r\n\t\tif (typeString(args[1]) !== 'string') {\r\n\t\t\tconsole.error('please provide a search string like for instance findEvent(\\'beat = 2 AND velocity > 60 < 100\\');');\r\n\t\t\treturn results;\r\n\t\t}\r\n\r\n\t\tsearchString = args[1];\r\n\r\n\t\t//get the operators\r\n\t\ttmp = searchString.split(' ');\r\n\t\tmaxi = tmp.length;\r\n\t\toperators = [];\r\n\r\n\t\tfor (i = 0; i < maxi; i++) {\r\n\t\t\toperator = tmp[i];\r\n\t\t\tif (logicalOperatorsRegex.test(' ' + operator + ' ')) {\r\n\t\t\t\toperators.push(operator);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//get the patterns\r\n\t\ttmp = searchString.split(logicalOperatorsRegex);\r\n\t\tmaxi = tmp.length;\r\n\t\tpatterns = [];\r\n\r\n\t\tfor (i = 0; i < maxi; i++) {\r\n\t\t\tcreatePattern(tmp[i].split(' '));\r\n\t\t}\r\n\r\n\t\t//start loop over events\r\n\t\tmaxi = patterns.length;\r\n\t\tpatternIndex = 0;\r\n\t\toperatorIndex = -1;\r\n\r\n\t\tfor (i = 0; i < maxi; i++) {\r\n\r\n\t\t\tpattern = patterns[patternIndex++];\r\n\t\t\toperator = operators[operatorIndex++];\r\n\t\t\t//console.log(operator,pattern,patternIndex,results.length);\r\n\r\n\r\n\t\t\tif (operator === 'AND') {\r\n\t\t\t\t// perform search on the results of the former search\r\n\t\t\t\tresults = performSearch(results, pattern);\r\n\r\n\t\t\t} else if (operator === 'NOT') {\r\n\t\t\t\t// perform search on the results of the former search\r\n\t\t\t\tresults = performSearch(results, pattern, true);\r\n\r\n\t\t\t} else if (operator === 'XOR') {\r\n\t\t\t\t/*\r\n\t\t\t\t\t\t\t\t//filter events from the previous results\r\n\t\t\t\t\t\t\t\tif(prevOperator === 'OR' || prevOperator === 'XOR'){\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tsubResult1 = performSearch(results,pattern,true);\r\n\t\t\t\t\t\t\t\t\tsubResult1 = performSearch(subResult1,prevPattern,true);\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t//filter results of the left part of the XOR expression by inversing the right part of the expression\r\n\t\t\t\t\t\t\t\t\tsubResult1 = performSearch(results,pattern,true);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t//filter events from all events (OR and XOR always operate on all events)\r\n\t\t\t\t\t\t\t\tsubResult2 = performSearch(events,pattern);\r\n\t\t\t\t\t\t\t\tsubResult2 = performSearch(subResult2,prevPattern,true);\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t//combine the 2 result sets\r\n\t\t\t\t\t\t\t\tresults = subResult1.concat(subResult2);//subResult1.concat(subResult1,subResult2);\r\n\t\t\t\t*/\r\n\t\t\t\t//NEW APPROACH\r\n\t\t\t\t//get from all events the events that match the pattern\r\n\t\t\t\tsubResult1 = performSearch(events, pattern);\r\n\t\t\t\t//and then remove all events that match both all previous patterns and the current pattern\r\n\t\t\t\tresults = removeMutualEvents(results, subResult1);\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlastResult = performSearch(events, pattern);\r\n\t\t\t\tresults = results.concat(lastResult);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprevPattern = pattern;\r\n\t\t\tprevOperator = operator;\r\n\t\t}\r\n\r\n\t\t//console.log(patterns,operators);\r\n\t\t//console.log(results.length);\r\n\t\t//console.timeEnd('find events');\r\n\t\treturn removeDoubleEvents(results);\r\n\t};\r\n\r\n\r\n\tremoveMutualEvents = function (resultSet1, resultSet2) {\r\n\t\tvar i, maxi = resultSet1.length,\r\n\t\t\tj, maxj = resultSet2.length,\r\n\t\t\tevent, eventId, addEvent,\r\n\t\t\tresult = [];\r\n\r\n\t\tfor (i = 0; i < maxi; i++) {\r\n\r\n\t\t\taddEvent = true;\r\n\r\n\t\t\tevent = resultSet1[i];\r\n\t\t\teventId = event.id;\r\n\r\n\t\t\tfor (j = 0; j < maxj; j++) {\r\n\r\n\t\t\t\tif (resultSet2[j].id === eventId) {\r\n\t\t\t\t\taddEvent = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (addEvent) {\r\n\t\t\t\tresult.push(event);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (j = 0; j < maxj; j++) {\r\n\r\n\t\t\taddEvent = true;\r\n\r\n\t\t\tevent = resultSet2[j];\r\n\t\t\teventId = event.id;\r\n\r\n\t\t\tfor (i = 0; i < maxi; i++) {\r\n\r\n\t\t\t\tif (resultSet1[i].id === eventId) {\r\n\t\t\t\t\taddEvent = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (addEvent) {\r\n\t\t\t\tresult.push(event);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\r\n\tremoveDoubleEvents = function (events) {\r\n\t\tvar i, maxi = events.length,\r\n\t\t\tevent, eventId, lastId,\r\n\t\t\tresult = [];\r\n\r\n\t\tevents.sort(function (a, b) {\r\n\t\t\treturn a.eventNumber - b.eventNumber;\r\n\t\t});\r\n\r\n\t\tfor (i = 0; i < maxi; i++) {\r\n\t\t\tevent = events[i];\r\n\t\t\teventId = event.id;\r\n\t\t\tif (eventId !== lastId) {\r\n\t\t\t\tresult.push(event);\r\n\t\t\t}\r\n\t\t\tlastId = eventId;\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\r\n\r\n\tperformSearch = function (events, pattern, inverse) {\r\n\t\tvar\r\n\t\t\tsearchResult = [],\r\n\t\t\tproperty = pattern.property,\r\n\t\t\toperator1 = pattern.operator1,\r\n\t\t\toperator2 = pattern.operator2,\r\n\t\t\tvalue1 = pattern.value1,\r\n\t\t\tvalue2 = pattern.value2,\r\n\t\t\tnumEvents = events.length, event, i,\r\n\t\t\tcondition = false;\r\n\r\n\t\tinverse = inverse || false;\r\n\r\n\t\tif (inverse) {\r\n\t\t\toperator1 = inverseOperator(operator1);\r\n\t\t\toperator2 = inverseOperator(operator2);\r\n\t\t}\r\n\r\n\r\n\t\tfor (i = 0; i < numEvents; i++) {\r\n\r\n\t\t\tevent = events[i];\r\n\t\t\tcondition = checkCondition(property, event[property], operator1, value1, operator2, value2);\r\n\r\n\t\t\tif (condition) {\r\n\t\t\t\tsearchResult.push(event);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn searchResult;\r\n\t};\r\n\r\n\r\n\tcheckCondition = function (property, propValue, operator1, value1, operator2, value2) {\r\n\t\tvar result = false,\r\n\t\t\tisString = false;\r\n\r\n\r\n\t\tif (propValue === undefined) {\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\r\n\t\tswitch (property) {\r\n\r\n\t\t\tcase 'noteName':\r\n\t\t\t\tif (operator1 === '=') {\r\n\t\t\t\t\t//this situation occurs if you search for the first letter(s) of an note name, e.g C matches C#, C##, Cb and Cbb\r\n\t\t\t\t\tif (value1.length === 3 && propValue.length === 4) {\r\n\t\t\t\t\t\tresult = propValue.indexOf(value1) === 0;\r\n\t\t\t\t\t} else if (value1.length === 4 && propValue.length === 5) {\r\n\t\t\t\t\t\tresult = propValue.indexOf(value1) === 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'type':\r\n\t\t\t\tif (typeString(value1) !== 'number' && isNaN(value1)) {\r\n\t\t\t\t\tvalue1 = midiEventNumberByName(value1);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'bar':\r\n\t\t\tcase 'beat':\r\n\t\t\tcase 'sixteenth':\r\n\t\t\t\t//propValue += 1;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\r\n\t\tif (typeString(propValue) === 'string') {\r\n\r\n\t\t\tif (typeString(value1) !== 'string') {\r\n\t\t\t\tvalue1 = '\\'' + value1 + '\\'';\r\n\t\t\t}\r\n\t\t\tif (value2 && typeString(value2) !== 'string') {\r\n\t\t\t\tvalue2 = '\\'' + value2 + '\\'';\r\n\t\t\t}\r\n\t\t\tisString = true;\r\n\r\n\t\t} else if (typeString(propValue) === 'number') {\r\n\r\n\t\t\tif (typeString(value1) !== 'number') {\r\n\t\t\t\tvalue1 = parseInt(value1);//don't use a radix because values can be both decimal and hexadecimal!\r\n\t\t\t}\r\n\t\t\tif (value2 && typeString(value2) !== 'number') {\r\n\t\t\t\tvalue2 = parseInt(value2);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tswitch (operator1) {\r\n\r\n\t\t\tcase '=':\r\n\t\t\tcase '==':\r\n\t\t\tcase '===':\r\n\t\t\t\tresult = propValue === value1;\r\n\t\t\t\tbreak;\r\n\r\n\r\n\t\t\tcase '*=':\r\n\t\t\t\tresult = propValue.indexOf(value1) !== -1;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '^=':\r\n\t\t\t\tresult = propValue.indexOf(value1) === 0;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '$=':\r\n\t\t\t\tresult = propValue.indexOf(value1) === (propValue.length - value1.length);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '%=':\r\n\t\t\t\tif (isString) {\r\n\t\t\t\t\tresult = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = propValue % value1 === 0;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\r\n\t\t\tcase '!*=':\r\n\t\t\t\tresult = !(propValue.indexOf(value1) !== -1);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '!^=':\r\n\t\t\t\tresult = !(propValue.indexOf(value1) === 0);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '!$=':\r\n\t\t\t\tresult = !(propValue.indexOf(value1) === (propValue.length - value1.length));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '!%=':\r\n\t\t\t\tif (isString) {\r\n\t\t\t\t\tresult = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = !(propValue % value1 === 0);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\r\n\t\t\tcase '!=':\r\n\t\t\tcase '!==':\r\n\t\t\t\tif (isString) {\r\n\t\t\t\t\tresult = propValue.indexOf(value1) === -1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = propValue !== value1;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '>':\r\n\t\t\t\tif (operator2) {\r\n\t\t\t\t\tresult = checkCondition2(propValue, operator1, value1, operator2, value2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = propValue > value1;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '>=':\r\n\t\t\t\tif (operator2) {\r\n\t\t\t\t\tresult = checkCondition2(propValue, operator1, value1, operator2, value2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = propValue >= value1;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '<':\r\n\t\t\t\tif (operator2) {\r\n\t\t\t\t\tresult = checkCondition2(propValue, operator1, value1, operator2, value2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = propValue < value1;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '<=':\r\n\t\t\t\tif (operator2) {\r\n\t\t\t\t\tresult = checkCondition2(propValue, operator1, value1, operator2, value2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = propValue <= value1;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.warn('eval is evil!');\r\n\t\t\t//result = eval(propValue + operator + value1);\r\n\r\n\t\t}\r\n\r\n\t\t//console.log(isString,property,propValue,operator,value1,result);\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\r\n\tcheckCondition2 = function (propValue, operator1, value1, operator2, value2) {\r\n\r\n\t\tvar result = false;\r\n\r\n\t\tswitch (operator1) {\r\n\r\n\t\t\tcase '>':\r\n\r\n\t\t\t\tswitch (operator2) {\r\n\t\t\t\t\tcase '<':\r\n\t\t\t\t\t\tresult = propValue > value1 && propValue < value2;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '<=':\r\n\t\t\t\t\t\tresult = propValue > value1 && propValue <= value2;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '>=':\r\n\r\n\t\t\t\tswitch (operator2) {\r\n\t\t\t\t\tcase '<':\r\n\t\t\t\t\t\tresult = propValue >= value1 && propValue < value2;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '<=':\r\n\t\t\t\t\t\tresult = propValue >= value1 && propValue <= value2;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '<':\r\n\r\n\t\t\t\tswitch (operator2) {\r\n\t\t\t\t\tcase '>':\r\n\t\t\t\t\t\tresult = propValue < value1 || propValue > value2;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '>=':\r\n\t\t\t\t\t\tresult = propValue < value1 || propValue >= value2;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '<=':\r\n\r\n\t\t\t\tswitch (operator2) {\r\n\t\t\t\t\tcase '>':\r\n\t\t\t\t\t\tresult = propValue <= value1 || propValue > value2;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '>=':\r\n\t\t\t\t\t\tresult = propValue <= value1 || propValue >= value2;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\r\n\tgetEvents = function (obj) {\r\n\t\tvar i, numTracks, tracks, events = [];\r\n\r\n\t\tif (typeString(obj) === 'array') {\r\n\t\t\tevents = obj;\r\n\t\t} else if (obj.className === undefined) {\r\n\t\t\tconsole.warn(obj);\r\n\t\t} else if (obj.className === 'Track' || obj.className === 'Part') {\r\n\t\t\tevents = obj.events;\r\n\r\n\t\t} else if (obj.className === 'Song') {\r\n\t\t\t/*\r\n\t\t\t\t\t\ttracks = obj.tracks;\r\n\t\t\t\t\t\tnumTracks = obj.numTracks;\r\n\t\t\t\t\t\tfor(i = 0; i < numTracks; i++){\r\n\t\t\t\t\t\t\tevents = events.concat(tracks[i].events);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tevents = events.concat(obj.timeEvents);\r\n\t\t\t*/\r\n\t\t\tevents = obj.eventsMidiTime;\r\n\t\t}\r\n\t\t//console.log(obj.className,events.length);\r\n\t\treturn events;\r\n\t};\r\n\r\n\r\n\tcreatePattern = function (args) {\r\n\t\tvar pattern = {\r\n\t\t\tproperty: args[0],\r\n\t\t\toperator1: args[1],\r\n\t\t\tvalue1: args[2],\r\n\t\t\toperator2: args[3],\r\n\t\t\tvalue2: args[4]\r\n\t\t},\r\n\t\t\tproperty = args[0],\r\n\t\t\toperator1 = args[1],\r\n\t\t\tvalue1 = args[2],\r\n\t\t\toperator2 = args[3],\r\n\t\t\tvalue2 = args[4],\r\n\t\t\ti;\r\n\r\n\t\tif (supportedProperties[property] !== 1) {\r\n\t\t\tconsole.error(property, 'is not a supported property');\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\r\n\t\tpattern = checkOperators(pattern);\r\n\r\n\r\n\t\tif (property === 'barsbeats' || property === 'time') {\r\n\t\t\tvalue1 = checkValue(value1, property);\r\n\t\t\t//console.log(value1);\r\n\t\t\tfor (i = 0; i < 4; i++) {\r\n\t\t\t\tpattern = {};\r\n\t\t\t\tpattern.property = properties[property][i];\r\n\t\t\t\tpattern.operator1 = operator1;\r\n\t\t\t\tpattern.value1 = value1[i];\r\n\t\t\t\tpatterns.push(pattern);\r\n\t\t\t\toperators.push('AND');\r\n\t\t\t}\r\n\t\t\toperators.pop();\r\n\r\n\t\t\tif (value2) {\r\n\t\t\t\tvalue2 = checkValue(value2, property);\r\n\t\t\t\tfor (i = 0; i < 4; i++) {\r\n\t\t\t\t\tpattern = {};\r\n\t\t\t\t\tpattern.property = properties[property][i];\r\n\t\t\t\t\tpattern.operator2 = operator2;\r\n\t\t\t\t\tpattern.value2 = value2[i];\r\n\t\t\t\t\tpatterns.push(pattern);\r\n\t\t\t\t\toperators.push('AND');\r\n\t\t\t\t}\r\n\t\t\t\toperators.pop();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tpatterns.push(pattern);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tcheckValue = function (value, type) {\r\n\t\t//if the value is provided in array notation strip the brackets\r\n\t\tvalue = value.replace(/(\\[|\\])/g, '');\r\n\r\n\t\tif (typeString(value) !== 'array') {\r\n\t\t\tif (type === 'barsbeats') {\r\n\t\t\t\tif (value.indexOf(',') === -1) {\r\n\t\t\t\t\tvalue = [value, 1, 1, 0];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = value.split(',');\r\n\t\t\t\t}\r\n\t\t\t} else if (type === 'time') {\r\n\t\t\t\tif (value.indexOf(',') === -1) {\r\n\t\t\t\t\tvalue = [0, value, 0, 0];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = value.split(',');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tswitch (value.length) {\r\n\t\t\tcase 1:\r\n\t\t\t\tif (type === 'barsbeats') {\r\n\t\t\t\t\tvalue.push(1, 1, 0);\r\n\t\t\t\t} else if (type === 'time') {\r\n\t\t\t\t\tvalue.push(0, 0, 0);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\tif (type === 'barsbeats') {\r\n\t\t\t\t\tvalue.push(1, 0);\r\n\t\t\t\t} else if (type === 'time') {\r\n\t\t\t\t\tvalue.push(0, 0);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 3:\r\n\t\t\t\tvalue.push(0);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\r\n\r\n\tcheckOperators = function (pattern) {\r\n\r\n\t\tvar operator1 = pattern.operator1,\r\n\t\t\toperator2 = pattern.operator2,\r\n\t\t\tcheck = function (operator) {\r\n\t\t\t\tif (operator === '<' || operator === '>' || operator === '<=' || operator === '>=') {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tcheck2 = function (operator) {\r\n\t\t\t\tif (operator === '=' || operator === '==' || operator === '===') {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t};\r\n\r\n\r\n\t\tif (pattern.property === 'noteName' && (check(operator1) || check2(operator1))) {\r\n\t\t\tpattern.property = 'noteNumber';\r\n\t\t\tpattern.value1 = createNote(pattern.value1).number;\r\n\t\t}\r\n\r\n\t\tif (pattern.property === 'noteName' && (check(operator2) || check2(operator2))) {\r\n\t\t\tpattern.property = 'noteNumber';\r\n\t\t\tpattern.value2 = createNote(pattern.value2).number;\r\n\t\t}\r\n\r\n\t\t// second operator is wrong, remove it\r\n\t\tif (check(operator1) && !check(operator2)) {\r\n\t\t\tdelete pattern.operator2;\r\n\t\t\tdelete pattern.value2;\r\n\t\t}\r\n\r\n\t\treturn pattern;\r\n\t};\r\n\r\n\r\n\tinverseOperator = function (operator) {\r\n\t\tvar inversedOperator;\r\n\r\n\t\tswitch (operator) {\r\n\t\t\tcase '=':\r\n\t\t\tcase '==':\r\n\t\t\tcase '===':\r\n\t\t\t\tinversedOperator = '!==';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '!=':\r\n\t\t\tcase '!==':\r\n\t\t\t\tinversedOperator = '===';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '<':\r\n\t\t\t\tinversedOperator = '>=';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '>':\r\n\t\t\t\tinversedOperator = '<=';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '<=':\r\n\t\t\t\tinversedOperator = '>';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '>=':\r\n\t\t\t\tinversedOperator = '<';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '*=':\r\n\t\t\tcase '^=':\r\n\t\t\tcase '&=':\r\n\t\t\tcase '%=':\r\n\t\t\t\tinversedOperator = '!' + operator;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tinversedOperator = operator;\r\n\r\n\t\t}\r\n\r\n\t\treturn inversedOperator;\r\n\t};\r\n\r\n\r\n\tfindNote = function () {\r\n\t\tvar results = findEvent.apply(this, arguments),\r\n\t\t\tnumEvents = results.length,\r\n\t\t\ti, event,\r\n\t\t\tnoteOnEvent, noteOnEvents = {},\r\n\t\t\ttmp, resultsFiltered = [];\r\n\r\n\t\t// loop over all events and filter the note on events that have a matching note off event\r\n\t\tfor (i = 0; i < numEvents; i++) {\r\n\t\t\tevent = results[i];\r\n\r\n\t\t\tif (event.type === sequencer.NOTE_ON) {\r\n\r\n\t\t\t\tif (noteOnEvents[event.noteNumber] === undefined) {\r\n\t\t\t\t\tnoteOnEvents[event.noteNumber] = [];\r\n\t\t\t\t}\r\n\t\t\t\tnoteOnEvents[event.noteNumber].push(event);\r\n\r\n\t\t\t} else if (event.type === sequencer.NOTE_OFF) {\r\n\r\n\t\t\t\ttmp = noteOnEvents[event.noteNumber];\r\n\t\t\t\tif (tmp) {\r\n\t\t\t\t\tnoteOnEvent = tmp.shift();\r\n\t\t\t\t\tresultsFiltered.push(createMidiNote(noteOnEvent, event));\r\n\t\t\t\t\t//resultsFiltered.push(noteOnEvent);\r\n\t\t\t\t\t//resultsFiltered.push(event);\r\n\t\t\t\t}\r\n\t\t\t\tif (tmp.length === 0) {\r\n\t\t\t\t\tdelete noteOnEvents[event.noteNumber];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// put the events back into the right order\r\n\t\tresultsFiltered.sort(function (a, b) {\r\n\t\t\treturn a.sortIndex - b.sortIndex;\r\n\t\t});\r\n\r\n\t\treturn resultsFiltered;\r\n\t};\r\n\r\n\tsequencer.findEvent = findEvent;\r\n\tsequencer.findNote = findNote;\r\n\t//sequencer.removeMutualEvents = removeMutualEvents;\r\n\tsequencer.protectedScope.getEvents = getEvents;\r\n\r\n\tsequencer.protectedScope.addInitMethod(function () {\r\n\t\tcreateNote = sequencer.createNote;\r\n\t\ttypeString = sequencer.protectedScope.typeString;\r\n\t\tcreateMidiNote = sequencer.createMidiNote;\r\n\t\tmidiEventNumberByName = sequencer.midiEventNumberByName;\r\n\t});\r\n\r\n}function instrument() {\r\n\r\n  'use strict';\r\n\r\n  var\r\n    debug = sequencer.debug,\r\n\r\n    //import\r\n    context, // → defined in open_module.js\r\n    storage, // → defined in open_module.js\r\n    timedTasks, // → defined in open_module.js\r\n    repetitiveTasks, // → defined in open_module.js\r\n    findItem, // → defined in utils.js\r\n    storeItem, // → defined in utils.js\r\n    typeString, // → defined in utils.js\r\n    pathToArray, // → defined in utils.js\r\n    //createClass, // → defined in utils.js\r\n    isEmptyObject, // → defined in utils.js\r\n    objectForEach, // → defined in utils.js\r\n    createSample, // → defined in sample.js\r\n    createReverb, // → defined in effects.js\r\n    dispatchEvent, // → defined in song.js\r\n    remap, // defined in util.js\r\n    round, // defined in util.js\r\n    getEqualPowerCurve, // defined in util.js\r\n    transpose, // defined in transpose.js\r\n\r\n    Instrument,\r\n    SimpleSynth;\r\n\r\n\r\n  function unscheduleCallback(sample) {\r\n    //console.log(sample.id, 'has been unscheduled');\r\n    sample = null;\r\n  }\r\n\r\n\r\n  Instrument = function (config) {\r\n    //console.log(config);\r\n    this.className = 'Instrument';\r\n    this.config = config;\r\n    this.scheduledEvents = {};\r\n    this.scheduledSamples = {};\r\n    this.sustainPedalDown = false;\r\n    this.sustainPedalSamples = {};\r\n    this.sampleDataByNoteNumber = {};\r\n    this.sampleData = [];\r\n\r\n    this.info = config.info || config.instrument_info;\r\n    this.author = config.author || config.instrument_author;\r\n    this.license = config.license || config.instrument_license;\r\n    this.pack = config.pack;\r\n\r\n    this.parse();\r\n  };\r\n\r\n\r\n  // called by asset manager when a sample pack or an instrument has been unloaded, see asset_manager.js\r\n  Instrument.prototype.reset = function () {\r\n    var instrument = sequencer.getInstrument(this.config.localPath),\r\n      samplepack = sequencer.getSamplePack(this.config.sample_path);\r\n\r\n    if (samplepack === false || instrument === false) {\r\n      this.scheduledEvents = {};\r\n      this.scheduledSamples = {};\r\n      this.sustainPedalSamples = {};\r\n      this.sampleDataByNoteNumber = {};\r\n      this.sampleData = [];\r\n      if (this.update) {\r\n        delete repetitiveTasks[this.updateTaskId];\r\n      }\r\n      // if the instrument has been unloaded, set the track to the default instrument\r\n      if (instrument === false) {\r\n        this.track.setInstrument();\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  Instrument.prototype.parse = function () {\r\n    var i, maxi, v, v1, v2, length, octave, note, noteName, noteNumber,\r\n      pathArray,\r\n      buffer, names,\r\n      id, data, subdata,\r\n      update,\r\n      sample,\r\n      sampleConfig,\r\n      samplePack,\r\n      audioFolder,\r\n      config = this.config,\r\n      noteNameMode = config.notename_mode === undefined ? sequencer.noteNameMode : config.notename_mode,\r\n      mapping = config.mapping,\r\n      me = this;\r\n\r\n    if (config.name === undefined) {\r\n      console.error('instruments must have a name', config);\r\n      return false;\r\n    }\r\n\r\n    if (mapping === undefined) {\r\n      console.error('instruments must have a mapping to samples', config);\r\n      return false;\r\n    }\r\n\r\n    this.name = config.name;\r\n    this.folder = config.folder || '';\r\n    this.autopan = config.autopan || false; // for simple synth\r\n    this.singlePitch = config.single_pitch || false;\r\n    this.samplePath = config.sample_path || this.name;\r\n    this.keyScalingRelease = config.keyscaling_release;\r\n    this.keyScalingPanning = config.keyscaling_panning;\r\n    this.keyRange = config.keyrange || config.key_range;\r\n    //console.log(this.keyRange, config);\r\n    pathArray = this.samplePath.split('/');\r\n\r\n    //console.log(this.keyScalingRelease, config);\r\n\r\n    samplePack = storage.samplepacks;\r\n    for (i = 0, maxi = pathArray.length; i < maxi; i++) {\r\n      if (samplePack === undefined) {\r\n        if (sequencer.debug) {\r\n          console.log('sample pack not found', pathArray.join('/'));\r\n        }\r\n        return;\r\n      }\r\n      samplePack = samplePack[pathArray[i]];\r\n    }\r\n    //console.log(samplePack.name);\r\n\r\n    audioFolder = storage.audio;\r\n    try {\r\n      for (i = 0, maxi = pathArray.length; i < maxi; i++) {\r\n        audioFolder = audioFolder[pathArray[i]];\r\n      }\r\n    } catch (e) {\r\n      if (sequencer.debug) {\r\n        console.log('sample pack \"' + pathArray[i] + '\" is not loaded');\r\n      }\r\n      //sampleConfig = false;\r\n      return;\r\n    }\r\n\r\n    if (audioFolder === undefined) {\r\n      if (sequencer.debug) {\r\n        console.log('sample pack not found', pathArray.join('/'));\r\n      }\r\n      //sampleConfig = false;\r\n      return;\r\n    }\r\n\r\n\r\n    if (typeString(mapping) === 'array') {\r\n      this.keyRange = mapping;\r\n      mapping = {};\r\n      for (i = this.keyRange[0]; i <= this.keyRange[1]; i++) {\r\n        mapping[i] = '';\r\n      }\r\n    }\r\n\r\n    if (this.keyRange === undefined) {\r\n      this.lowestNote = 128;\r\n      this.highestNote = -1;\r\n    } else {\r\n      this.lowestNote = this.keyRange[0];\r\n      this.highestNote = this.keyRange[1];\r\n      this.numNotes = this.highestNote - this.lowestNote;\r\n    }\r\n\r\n\r\n    if (config.release_duration !== undefined) {\r\n      this.releaseDuration = config.release_duration;\r\n    } else {\r\n      this.releaseDuration = 0;\r\n    }\r\n\r\n    this.releaseEnvelope = config.release_envelope || 'equal power';\r\n\r\n\r\n    if (this.autopan) {\r\n      this.autoPanner = createAutoPanner();\r\n    }\r\n\r\n    this.samplepack = samplePack;\r\n    //console.log(samplePack);\r\n\r\n    for (id in mapping) {\r\n      if (mapping.hasOwnProperty(id)) {\r\n        data = mapping[id];\r\n\r\n        if (isNaN(id)) {\r\n          // C3, D#5, Bb0, etc.\r\n          length = id.length;\r\n          octave = id.substring(length - 1);\r\n          note = id.substring(0, length - 1);\r\n          noteName = id;\r\n          noteNumber = sequencer.getNoteNumber(note, octave);\r\n        } else {\r\n          noteName = sequencer.getNoteNameFromNoteNumber(id, noteNameMode);\r\n          noteName = noteName.join('');\r\n          noteNumber = id;\r\n        }\r\n        //console.log(id, noteNameMode);\r\n\r\n        noteNumber = parseInt(noteNumber, 10);\r\n\r\n        if (this.keyRange === undefined) {\r\n          this.lowestNote = noteNumber < this.lowestNote ? noteNumber : this.lowestNote;\r\n          this.highestNote = noteNumber > this.highestNote ? noteNumber : this.highestNote;\r\n        }\r\n\r\n        //console.log(data,typeString(data));\r\n\r\n        if (typeString(data) === 'array') {\r\n          // multi-layered\r\n          this.multiLayered = true;\r\n          for (i = 0, maxi = data.length; i < maxi; i++) {\r\n            subdata = data[i];\r\n            parseSampleData(subdata);\r\n            if (this.sampleDataByNoteNumber[noteNumber] === undefined) {\r\n              this.sampleDataByNoteNumber[noteNumber] = [];\r\n            }\r\n            // store the same sample config for every step in this velocity range\r\n            v1 = subdata.v[0];\r\n            v2 = subdata.v[1];\r\n            for (v = v1; v <= v2; v++) {\r\n              this.sampleDataByNoteNumber[noteNumber][v] = sampleConfig;\r\n            }\r\n            this.sampleData.push(sampleConfig);\r\n          }\r\n        } else {\r\n          // single-layered\r\n          parseSampleData(data);\r\n          //console.log('--->', sampleConfig);\r\n          this.sampleDataByNoteNumber[noteNumber] = sampleConfig;\r\n          this.sampleData.push(sampleConfig);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.keyRange === undefined) {\r\n      //console.log(this.highestNote, this.lowestNote);\r\n      this.numNotes = this.highestNote - this.lowestNote;\r\n      this.keyRange = [this.lowestNote, this.highestNote];\r\n    }\r\n\r\n\r\n    // if a key range is set for the instrument, the mapping object is generated by parseSampleData() so we need to add\r\n    // the mapping object to the config to make it available for unloading\r\n    this.config.mapping = mapping;\r\n\r\n    if (this.singlePitch) {\r\n      // TODO: fix this for multi-layered instruments (low prio)\r\n      for (i = 127; i >= 0; i--) {\r\n        this.sampleData[i] = sampleConfig;\r\n        this.sampleDataByNoteNumber[i] = sampleConfig;\r\n      }\r\n    }\r\n\r\n    if (update) {\r\n      this.updateTaskId = 'update_' + this.name + '_' + new Date().getTime();\r\n      //console.log('start update', this.name);\r\n      repetitiveTasks[this.updateTaskId] = function () {\r\n        //console.log('update');\r\n        if (me.autopan) {\r\n          me.update(this.autoPanner.getValue());\r\n        } else {\r\n          me.update();\r\n        }\r\n      };\r\n    }\r\n\r\n    // inner function of Instrument.parse();\r\n    function parseSampleData(data) {\r\n      var tmp, n;\r\n      //console.log('find', this.samplePath + '/' + data.n);\r\n      //buffer = findItem(this.samplePath + '/' + data.n, storage.audio);\r\n      //console.log(data);\r\n\r\n      if (data.n) {\r\n        // get the buffer by an id\r\n        buffer = audioFolder[data.n];\r\n        //console.log(data.n, buffer);\r\n      } else {\r\n        // get the buffer by a note number or note name if a keyrange is specified\r\n        names = [noteNumber, noteName, noteName.toLowerCase()];\r\n        for (n = 2; n >= 0; n--) {\r\n          buffer = audioFolder[names[n]];\r\n          if (buffer !== undefined) {\r\n            mapping[id] = { n: names[n] };\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (buffer === undefined) {\r\n        if (sequencer.debug) {\r\n          console.log('no buffer found for ' + id + ' (' + me.name + ')');\r\n        }\r\n        sampleConfig = false;\r\n        return;\r\n      }\r\n\r\n      sampleConfig = {\r\n        noteNumber: noteNumber,\r\n        buffer: buffer,\r\n        bufferId: data.n,\r\n        autopan: me.autopan\r\n      };\r\n\r\n      // sample pack sustain\r\n      if (config.sustain === true) {\r\n        sampleConfig.sustain = true;\r\n        update = true;\r\n      }\r\n\r\n      // sustain\r\n      if (data.s !== undefined) {\r\n        sampleConfig.sustain_start = data.s[0];\r\n        sampleConfig.sustain_end = data.s[1];\r\n        sampleConfig.sustain = true;\r\n        update = true;\r\n      } else if (config.sustain === true) {\r\n        tmp = samplePack.samplesById[data.n].sustain;\r\n        if (tmp !== undefined) {\r\n          sampleConfig.sustain_start = tmp[0];\r\n          sampleConfig.sustain_end = tmp[1];\r\n          //sampleConfig.sustain = true;\r\n          //console.log(tmp, update, sampleConfig.sustain);\r\n        } else {\r\n          sampleConfig.sustain = false;\r\n        }\r\n        //console.log(data.n, samplePack.samplesById[data.n]);\r\n      }\r\n\r\n      // global release\r\n      if (config.release_duration !== undefined) {\r\n        sampleConfig.release_duration = config.release_duration;\r\n        sampleConfig.release_envelope = config.release_envelope || me.releaseEnvelope;\r\n        sampleConfig.release = true;\r\n        update = true;\r\n      }\r\n\r\n      // release duration and envelope per sample overrules global release duration and envelope\r\n      if (data.r !== undefined) {\r\n        if (typeString(data.r) === 'array') {\r\n          sampleConfig.release_duration = data.r[0];\r\n          sampleConfig.release_envelope = data.r[1] || me.releaseEnvelope;\r\n        } else if (!isNaN(data.r)) {\r\n          sampleConfig.release_duration = data.r;\r\n          sampleConfig.release_envelope = me.releaseEnvelope;\r\n        }\r\n        sampleConfig.release = true;\r\n        update = true;\r\n        //console.log(data.r, sampleConfig.release_duration, sampleConfig.release_envelope)\r\n      }\r\n\r\n      // panning\r\n      if (data.p !== undefined) {\r\n        sampleConfig.panPosition = data.p;\r\n        sampleConfig.panning = true;\r\n      }\r\n      //console.log(data.p, sampleConfig.panning);\r\n      //console.log('ready', sampleConfig);\r\n    }\r\n  };\r\n\r\n\r\n  Instrument.prototype.getInfoAsHTML = function () {\r\n    var html = '',\r\n      instrumentInfo = '',\r\n      samplepackInfo = '',\r\n      sp = this.samplepack;\r\n\r\n    if (this.info !== undefined) {\r\n      instrumentInfo += '<tr><td>info</td><td>' + this.info + '</td></tr>';\r\n    }\r\n    if (this.author !== undefined) {\r\n      instrumentInfo += '<tr><td>author</td><td>' + this.author + '</td></tr>';\r\n    }\r\n    if (this.license !== undefined) {\r\n      instrumentInfo += '<tr><td>license</td><td>' + this.license + '</td></tr>';\r\n    }\r\n    instrumentInfo += '<tr><td>keyrange</td><td>' + this.lowestNote + '(' + sequencer.getFullNoteName(this.lowestNote) + ')';\r\n    instrumentInfo += ' - ' + this.highestNote + '(' + sequencer.getFullNoteName(this.highestNote) + ')</td></tr>';\r\n\r\n    if (instrumentInfo !== '') {\r\n      instrumentInfo = '<table><th colspan=\"2\">instrument</th>' + instrumentInfo + '</table>';\r\n      html += instrumentInfo;\r\n    }\r\n\r\n    if (sp === undefined) {\r\n      return html;\r\n    }\r\n\r\n    if (sp.info !== undefined) {\r\n      samplepackInfo += '<tr><td>info</td><td>' + sp.info + '</td></tr>';\r\n    }\r\n    if (sp.author !== undefined) {\r\n      samplepackInfo += '<tr><td>author</td><td>' + sp.author + '</td></tr>';\r\n    }\r\n    if (sp.license !== undefined) {\r\n      samplepackInfo += '<tr><td>license</td><td>' + sp.license + '</td></tr>';\r\n    }\r\n    if (sp.compression !== undefined) {\r\n      samplepackInfo += '<tr><td>compression</td><td>' + sp.compression + '</td></tr>';\r\n    }\r\n    if (sp.filesize !== undefined) {\r\n      samplepackInfo += '<tr><td>filesize</td><td>' + round(sp.filesize / 1024 / 1024, 2) + ' MiB</td></tr>';\r\n    }\r\n\r\n    if (samplepackInfo !== '') {\r\n      samplepackInfo = '<table><th colspan=\"2\">samplepack</th>' + samplepackInfo + '</table>';\r\n      html += samplepackInfo;\r\n    }\r\n\r\n    return html;\r\n  };\r\n\r\n\r\n  Instrument.prototype.getInfo = function () {\r\n    var info = {\r\n      instrument: {},\r\n      samplepack: {}\r\n    };\r\n\r\n    if (this.info !== undefined) {\r\n      info.instrument.info = this.info;\r\n    }\r\n    if (this.author !== undefined) {\r\n      info.instrument.author = this.author;\r\n    }\r\n    if (this.license !== undefined) {\r\n      info.instrument.license = this.license;\r\n    }\r\n    if (this.keyrange !== undefined) {\r\n      info.instrument.keyrange = this.keyrange;\r\n    }\r\n\r\n\r\n    if (this.info !== undefined) {\r\n      info.samplepack.info = this.info;\r\n    }\r\n    if (this.author !== undefined) {\r\n      info.samplepack.author = this.author;\r\n    }\r\n    if (this.license !== undefined) {\r\n      info.samplepack.license = this.license;\r\n    }\r\n    if (this.compression !== undefined) {\r\n      info.samplepack.compression = this.compression;\r\n    }\r\n    if (this.filesize !== undefined) {\r\n      info.samplepack.filesize = round(this.samplepack.filesize / 1024 / 1024, 2);\r\n    }\r\n\r\n    return info;\r\n  };\r\n\r\n\r\n  Instrument.prototype.createSample = function (event) {\r\n    var\r\n      noteNumber = event.noteNumber,\r\n      velocity = event.velocity,\r\n      data = this.sampleDataByNoteNumber[noteNumber],\r\n      type = typeString(data);\r\n\r\n    if (type === 'array') {\r\n      data = data[velocity];\r\n      //console.log(velocity, data.bufferId);\r\n    }\r\n\r\n    if (data === undefined || data === false) {\r\n      // no buffer data, return a dummy sample\r\n      return {\r\n        start: function () {\r\n          console.warn('no audio data loaded for', noteNumber);\r\n        },\r\n        stop: function () { },\r\n        update: function () { },\r\n        addData: function () { },\r\n        unschedule: function () { }\r\n      };\r\n    }\r\n    //console.log(data);\r\n    data.track = event.track;\r\n    return createSample(data);\r\n  };\r\n\r\n\r\n  Instrument.prototype.setKeyScalingPanning = function (start, end) {\r\n    //console.log('keyScalingPanning', start, end);\r\n    var i, data, numSamples = this.sampleData.length,\r\n      panStep, currentPan;\r\n\r\n    if (start === false) {\r\n      for (i = 0; i < numSamples; i++) {\r\n        data = this.sampleData[i];\r\n        data.panning = false;\r\n      }\r\n    }\r\n\r\n    if (isNaN(start) === false && isNaN(end) === false) {\r\n      panStep = (end - start) / this.numNotes;\r\n      currentPan = start;\r\n      for (i = 0; i < numSamples; i++) {\r\n        data = this.sampleData[i];\r\n        data.panning = true;\r\n        data.panPosition = currentPan;\r\n        //console.log(currentPan, panStep, highestNote, lowestNote, data.noteNumber);\r\n        currentPan += panStep;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  Instrument.prototype.setRelease = function (millis, envelope) {\r\n    if (millis === undefined) {\r\n      return;\r\n    }\r\n    this.releaseEnvelope = envelope || this.releaseEnvelope;\r\n    this.keyScalingRelease = undefined;\r\n\r\n    var i, data, numSamples = this.sampleData.length;\r\n    for (i = 0; i < numSamples; i++) {\r\n      data = this.sampleData[i];\r\n      data.release = true;\r\n      data.release_duration = millis;\r\n      data.release_envelope = this.releaseEnvelope;\r\n    }\r\n    this.releaseDuration = millis;\r\n  };\r\n\r\n\r\n  Instrument.prototype.setKeyScalingRelease = function (start, end, envelope) {\r\n    var i, data, numSamples = this.sampleData.length,\r\n      releaseStep, currentRelease;\r\n\r\n    this.releaseEnvelope = envelope || this.releaseEnvelope;\r\n\r\n    if (isNaN(start) === false && isNaN(end) === false) {\r\n      this.keyScalingRelease = [start, end];\r\n      this.releaseDuration = 0;\r\n      releaseStep = (end - start) / this.numNotes;\r\n      currentRelease = start;\r\n      for (i = 0; i < numSamples; i++) {\r\n        data = this.sampleData[i];\r\n        data.release_duration = currentRelease;\r\n        data.release_envelope = currentRelease;\r\n        //console.log(currentRelease, releaseStep, data.noteNumber);\r\n        currentRelease += releaseStep;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  Instrument.prototype.transpose = function (semitones, cb1, cb2) {\r\n    if (transpose === undefined) {\r\n      console.log('transpose is still experimental');\r\n      return;\r\n    }\r\n    var numSamples = this.sampleData.length;\r\n    function loop(num, samples) {\r\n      var data;\r\n      if (cb2) {\r\n        cb2('transposing sample ' + (num + 1) + ' of ' + numSamples);\r\n      }\r\n      //console.log(num, numSamples);\r\n      if (num < numSamples) {\r\n        data = samples[num];\r\n        setTimeout(function () {\r\n          transpose(data.buffer, semitones, function (transposedBuffer) {\r\n            data.buffer = transposedBuffer;\r\n            loop(++num, samples);\r\n          });\r\n        }, 10);\r\n      } else {\r\n        if (cb1) {\r\n          console.log('ready');\r\n          cb1();\r\n        }\r\n      }\r\n    }\r\n    loop(0, this.sampleData);\r\n  };\r\n\r\n\r\n  // called when midi events arrive from a midi input, from processEvent or from the scheduler\r\n  Instrument.prototype.processEvent = function (midiEvent) {\r\n    // console.log(midiEvent.type + ' : ' + midiEvent.velocity, midiEvent.time);\r\n    var type = midiEvent.type,\r\n      data1, data2, track, output;\r\n\r\n    //seconds = seconds === undefined ? 0 : seconds;\r\n    if (midiEvent.time === undefined) {\r\n      midiEvent.time = 0;\r\n    }\r\n\r\n    if (type === 128 || type === 144) {\r\n      if (type === 128) {\r\n        if (this.sustainPedalDown === true) {\r\n          midiEvent.sustainPedalDown = true;\r\n        }\r\n        //console.log(type, midiEvent.noteNumber, midiEvent.ticks, midiEvent.midiNote.id);\r\n        this.stopNote(midiEvent);\r\n      } else {\r\n        //console.log(type, midiEvent.noteNumber, midiEvent.ticks, midiEvent.midiNote.noteOff.ticks, midiEvent.midiNote.id);\r\n        this.playNote(midiEvent);\r\n      }\r\n    } else if (midiEvent.type === 176) {\r\n      //return;\r\n      data1 = midiEvent.data1;\r\n      data2 = midiEvent.data2;\r\n      if (data1 === 64) { // sustain pedal\r\n        //console.log(this.sustainPedalDown, data1, data2)\r\n        if (data2 === 127) {\r\n          this.sustainPedalDown = true;\r\n          //console.log('sustain pedal down', this.track.song.id);\r\n          dispatchEvent(this.track.song, 'sustain_pedal', 'down');\r\n        } else if (data2 === 0) {\r\n          this.sustainPedalDown = false;\r\n          //console.log('sustain pedal up');\r\n          dispatchEvent(this.track.song, 'sustain_pedal', 'up');\r\n          this.stopSustain(midiEvent.time);\r\n        }\r\n      } else if (data1 === 10) { // panning\r\n        // panning is *not* exactly timed -> not possible (yet) with WebAudio\r\n        track = this.track;\r\n        //console.log(data2, remap(data2, 0, 127, -1, 1));\r\n        track.setPanning(remap(data2, 0, 127, -1, 1));\r\n      } else if (data1 === 7) { // volume\r\n        track = this.track;\r\n        output = track.output;\r\n        output.gain.setValueAtTime(data2 / 127, midiEvent.time);\r\n        /*\r\n        //@TODO: this should be done by a plugin\r\n        if(track.volumeChangeMethod === 'linear'){\r\n            output.gain.linearRampToValueAtTime(data2/127, seconds);\r\n        }else if(track.volumeChangeMethod === 'equal_power'){\r\n            volume1 = track.getVolume();\r\n            volume2 = data2/127;\r\n            if(volume1 > volume2){\r\n                values = getEqualPowerCurve(100, 'fadeOut', volume2);\r\n            }else{\r\n                values = getEqualPowerCurve(100, 'fadeIn', volume2);\r\n            }\r\n            now = sequencer.getTime();\r\n            output.gain.setValueCurveAtTime(values, seconds, seconds + 0.05);\r\n        }else{\r\n            output.gain.setValueAtTime(data2/127, seconds);\r\n        }\r\n        */\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  Instrument.prototype.stopSustain = function (seconds) {\r\n    var midiNote,\r\n      scheduledSamples = this.scheduledSamples,\r\n      sustainPedalSamples = this.sustainPedalSamples;\r\n\r\n    objectForEach(sustainPedalSamples, function (sample) {\r\n      if (sample !== undefined) {\r\n        midiNote = sample.midiNote;\r\n        midiNote.noteOn.sustainPedalDown = undefined;\r\n        midiNote.noteOff.sustainPedalDown = undefined;\r\n        sample.stop(seconds, function (sample) {\r\n          //console.log('stopped sustain pedal up:', sample.id, sample.sourceId);\r\n          scheduledSamples[sample.sourceId] = null;\r\n          delete scheduledSamples[sample.sourceId];\r\n          //delete sustainPedalSamples[sample.sourceId];\r\n        });\r\n      }\r\n    });\r\n\r\n    this.sustainPedalSamples = {};\r\n  };\r\n\r\n\r\n  Instrument.prototype.playNote = function (midiEvent) {\r\n    var\r\n      sample,\r\n      sourceId;\r\n\r\n    if (!midiEvent.midiNote) {\r\n      if (sequencer.debug) {\r\n        console.warn('playNote() no midi note');\r\n      }\r\n      return;\r\n    }\r\n\r\n    sourceId = midiEvent.midiNote.id;\r\n    sample = this.scheduledSamples[sourceId];\r\n    // console.log('start', sourceId);\r\n\r\n    if (sample !== undefined) {\r\n      // console.log('already scheduled', sourceId);\r\n      sample.unschedule(0);\r\n    }\r\n\r\n    sample = this.createSample(midiEvent);\r\n    // add some extra attributes to the sample\r\n    sample.addData({\r\n      midiNote: midiEvent.midiNote,\r\n      noteName: midiEvent.midiNote.note.fullName,\r\n      sourceId: sourceId\r\n    });\r\n    this.scheduledSamples[sourceId] = sample;\r\n    sample.start(midiEvent);\r\n  };\r\n\r\n\r\n  Instrument.prototype.stopNote = function (midiEvent) {\r\n    if (midiEvent.midiNote === undefined) {\r\n      if (sequencer.debug) {\r\n        console.warn('stopNote() no midi note', midiEvent.ticks, midiEvent.noteNumber);\r\n      }\r\n      return;\r\n    }\r\n\r\n    var sourceId = midiEvent.midiNote.id,\r\n      sample = this.scheduledSamples[sourceId],\r\n      scheduledSamples = this.scheduledSamples,\r\n      sustainPedalSamples = this.sustainPedalSamples;\r\n\r\n    // if(this.song && this.song.bar >= 6 && this.track.name === 'Sonata # 3'){\r\n    //     console.log('stopNote', midiEvent, seconds, sequencer.getTime());\r\n    // }\r\n\r\n    //console.log(midiEvent.sustainPedalDown);\r\n    if (midiEvent.sustainPedalDown === true) {\r\n      // while sustain pedal is pressed, bypass note off events\r\n      //console.log('sustain');\r\n      sustainPedalSamples[sourceId] = sample;\r\n      return;\r\n    }\r\n\r\n    if (sample === undefined) {\r\n      // if(sequencer.debug){\r\n      //     console.log('no sample scheduled (anymore) for this midiEvent', sourceId, seconds);\r\n      // }\r\n      return;\r\n    }\r\n\r\n    sample.stop(midiEvent.time, function () {\r\n      scheduledSamples[sourceId] = null;\r\n      delete scheduledSamples[sourceId];\r\n    });\r\n  };\r\n\r\n\r\n  Instrument.prototype.hasScheduledSamples = function () {\r\n    return isEmptyObject(this.scheduledSamples);\r\n  };\r\n\r\n\r\n  Instrument.prototype.reschedule = function (song) {\r\n    var\r\n      min = song.millis,\r\n      max = min + (sequencer.bufferTime * 1000),\r\n      max2 = min + 20,\r\n      scheduledSamples = this.scheduledSamples,\r\n      id, note, sample;\r\n\r\n    for (id in scheduledSamples) {\r\n      if (scheduledSamples.hasOwnProperty(id)) {\r\n        sample = scheduledSamples[id]; // the sample\r\n        note = sample.midiNote; // the midi note\r\n\r\n        if (note === undefined || note.state === 'removed') {\r\n          sample.unschedule(0, unscheduleCallback);\r\n          delete scheduledSamples[id];\r\n        } else if (\r\n          note.noteOn.millis >= min &&\r\n          note.noteOff.millis < max &&\r\n          sample.noteName === note.fullName\r\n        ) {\r\n          // nothing has changed, skip\r\n          continue;\r\n        } else {\r\n          //console.log('unscheduled', id);\r\n          delete scheduledSamples[id];\r\n          sample.unschedule(null, unscheduleCallback);\r\n        }\r\n      }\r\n    }\r\n    /*\r\n            objectForEach(this.scheduledEvents, function(event, eventId){\r\n                if(event === undefined || event.state === 'removed'){\r\n                    delete sequencer.timedTasks['event_' + eventId];\r\n                    delete this.scheduledEvents[eventId];\r\n                }else if((event.millis >= min && event.millis < max2) === false){\r\n                    delete sequencer.timedTasks['event_' + eventId];\r\n                    delete this.scheduledEvents[eventId];\r\n                }\r\n            });\r\n    */\r\n  };\r\n\r\n\r\n  function loop(data, i, maxi, events) {\r\n    var arg;\r\n    for (i = 0; i < maxi; i++) {\r\n      arg = data[i];\r\n      if (arg === undefined) {\r\n        continue;\r\n      } else if (arg.className === 'MidiNote') {\r\n        events.push(arg.noteOn);\r\n      } else if (typeString(arg) === 'array') {\r\n        loop(arg, 0, arg.length);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // stop specified events or notes, used by stopProcessEvent()\r\n  Instrument.prototype.unschedule = function () {\r\n    var args = Array.prototype.slice.call(arguments),\r\n      events = [],\r\n      i, e, id, sample;\r\n\r\n    loop(args, 0, args.length, events);\r\n\r\n    for (i = events.length - 1; i >= 0; i--) {\r\n      e = events[i];\r\n      if (e.midiNote !== undefined) {\r\n        // note on and note off events\r\n        id = e.midiNote.id;\r\n        sample = this.scheduledSamples[id];\r\n        if (sample !== undefined) {\r\n          sample.unschedule(0, unscheduleCallback);\r\n          delete this.scheduledSamples[id];\r\n        }\r\n      } else if (e.className === 'MidiEvent') {\r\n        // other channel events\r\n        id = e.id;\r\n        delete timedTasks['event_' + id];\r\n        delete this.scheduledEvents[id];\r\n      }\r\n      //console.log(id);\r\n    }\r\n  };\r\n\r\n\r\n  // stop all events and notes\r\n  Instrument.prototype.allNotesOff = function () {\r\n    var sample, sampleId,\r\n      scheduledSamples = this.scheduledSamples;\r\n\r\n    this.stopSustain(0);\r\n    this.sustainPedalDown = false;\r\n\r\n    //console.log(scheduledSamples);\r\n\r\n    if (scheduledSamples === undefined || isEmptyObject(scheduledSamples) === true) {\r\n      return;\r\n    }\r\n\r\n    for (sampleId in scheduledSamples) {\r\n      if (scheduledSamples.hasOwnProperty(sampleId)) {\r\n        //console.log('allNotesOff', sampleId);\r\n        sample = scheduledSamples[sampleId];\r\n        if (sample) {\r\n          sample.unschedule(0, unscheduleCallback);\r\n        }\r\n      }\r\n    }\r\n    this.scheduledSamples = {};\r\n\r\n    objectForEach(this.scheduledEvents, function (event, eventId) {\r\n      delete timedTasks['event_' + eventId];\r\n    });\r\n    this.scheduledEvents = {};\r\n  };\r\n\r\n\r\n  Instrument.prototype.allNotesOffPart = function (partId) {\r\n    var sample, sampleId,\r\n      scheduledSamples = this.scheduledSamples;\r\n\r\n    // make this more subtle\r\n    this.stopSustain(0);\r\n    this.sustainPedalDown = false;\r\n\r\n    //console.log(scheduledSamples);\r\n\r\n    if (scheduledSamples === undefined || isEmptyObject(scheduledSamples) === true) {\r\n      return;\r\n    }\r\n\r\n    for (sampleId in scheduledSamples) {\r\n      if (scheduledSamples.hasOwnProperty(sampleId)) {\r\n        //console.log('allNotesOff', sampleId);\r\n        sample = scheduledSamples[sampleId];\r\n        if (sample) {\r\n          sample.unschedule(0, unscheduleCallback);\r\n        }\r\n      }\r\n    }\r\n    this.scheduledSamples = {};\r\n\r\n    objectForEach(this.scheduledEvents, function (event, eventId) {\r\n      delete timedTasks['event_' + eventId];\r\n    });\r\n    this.scheduledEvents = {};\r\n  };\r\n\r\n  Instrument.prototype.update = function (value) {\r\n    var sampleId, sample;\r\n    //console.log(this.scheduledSamples);\r\n    for (sampleId in this.scheduledSamples) {\r\n      if (this.scheduledSamples.hasOwnProperty(sampleId)) {\r\n        sample = this.scheduledSamples[sampleId];\r\n        if (sample) {\r\n          sample.update(value);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  function createAutoPanner(time) {\r\n    /*\r\n            var osc = context.createOscillator();\r\n            osc.frequency.value = 50;\r\n            osc.type = 0;\r\n            var gain = context.createGain();\r\n            gain.gain.value = 1;\r\n            osc.connect(gain);\r\n            gain.connect(context.destination);\r\n            osc.start();\r\n            console.log(osc);\r\n            return {\r\n                getValue: function(){\r\n                    return osc.frequency.getValueAtTime(time);\r\n                }\r\n            };\r\n    */\r\n    return {\r\n      getValue: function (time) {\r\n        return Math.sin(time * 2 * Math.PI);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n\r\n  sequencer.createInstrument = function (arg) {\r\n    var type = typeString(arg),\r\n      config,\r\n      instrument;\r\n\r\n    //console.log(arg, type, arg.className);\r\n\r\n    if (type === 'object') {\r\n      if (arg.className === 'Instrument') {\r\n        instrument = arg;\r\n      } else if (arg.className === 'InstrumentConfig') {\r\n        if (arg.name === 'sinewave') {\r\n          instrument = new SimpleSynth(arg);\r\n        } else {\r\n          instrument = new Instrument(arg);\r\n        }\r\n      }\r\n      return instrument;\r\n    }\r\n\r\n\r\n    if (type === 'string') {\r\n      //@TODO what happens if we have 2 instruments with the same name?\r\n      config = findItem(arg, storage.instruments);\r\n      //console.log('string', arg, config, storage.instruments);\r\n    }\r\n\r\n    if (config == false || config.className !== 'InstrumentConfig') {\r\n      if (debug >= 2) {\r\n        console.info('can not create instrument from', arg);\r\n      }\r\n      return false;\r\n    }\r\n\r\n\r\n    if (config.name === 'sinewave') {\r\n      instrument = new SimpleSynth(config);\r\n    } else {\r\n      instrument = new Instrument(config);\r\n    }\r\n\r\n    return instrument;\r\n  };\r\n\r\n\r\n  sequencer.protectedScope.addInitMethod(function () {\r\n    var protectedScope = sequencer.protectedScope;\r\n\r\n    storage = sequencer.storage;\r\n    createSample = sequencer.createSample;\r\n    createReverb = sequencer.createReverb;\r\n    dispatchEvent = sequencer.protectedScope.songDispatchEvent;\r\n\r\n    context = protectedScope.context;\r\n    timedTasks = protectedScope.timedTasks;\r\n    repetitiveTasks = protectedScope.repetitiveTasks;\r\n    objectForEach = protectedScope.objectForEach;\r\n    isEmptyObject = protectedScope.isEmptyObject;\r\n    findItem = protectedScope.findItem;\r\n    storeItem = protectedScope.storeItem;\r\n    typeString = protectedScope.typeString;\r\n    pathToArray = protectedScope.pathToArray;\r\n    transpose = protectedScope.transpose;\r\n    SimpleSynth = protectedScope.createClass(Instrument);\r\n\r\n    remap = sequencer.util.remap;\r\n    round = sequencer.util.round;\r\n    getEqualPowerCurve = sequencer.util.getEqualPowerCurve;\r\n\r\n    SimpleSynth.prototype.parse = function () {\r\n      var me = this,\r\n        config = this.config;\r\n\r\n      //console.log(this.config);\r\n      this.name = 'SineWave';\r\n      this.waveForm = config.wave_form || 'sine';\r\n      this.autopan = config.autopan || false;\r\n      this.folder = config.folder || 'heartbeat';\r\n      this.releaseDuration = config.release_duration || 1500;\r\n      if (this.autopan) {\r\n        this.autoPanner = createAutoPanner();\r\n      }\r\n\r\n      repetitiveTasks['update_' + this.name + '_' + new Date().getTime()] = function () {\r\n        if (me.autopan) {\r\n          //console.log('update',me.autoPanner.getValue(context.currentTime), me.autopan);\r\n          //me.update(me.autoPanner.getValue(context.currentTime));\r\n          me.update(Math.sin(context.currentTime * 2 * Math.PI));\r\n        } else {\r\n          me.update();\r\n        }\r\n      };\r\n    };\r\n\r\n    SimpleSynth.prototype.createSample = function (event) {\r\n      var data = {\r\n        oscillator: true,\r\n        track: event.track,\r\n        event: event,\r\n        autopan: this.autopan,\r\n        wave_form: this.waveForm,\r\n        release_envelope: 'equal power',\r\n        release_duration: this.releaseDuration\r\n      };\r\n      //console.log(data);\r\n      return createSample(data);\r\n    };\r\n\r\n    sequencer.createSimpleSynth = function (config) {\r\n      config = config || {};\r\n      //console.log('creating sinewave');\r\n      return new SimpleSynth(config);\r\n    };\r\n  });\r\n}\r\nfunction instrumentConfig() {\n\n    'use strict';\n\n    var\n        ajax, // defined in utils.js\n        parseUrl, // defined in utils.js\n        findItem, // defined in utils.js\n        storeItem, // defined in utils.js\n        typeString, // defined in utils.js\n        objectForEach, // defined in utils.js\n\n        index = 0,\n\n        InstrumentConfig;\n\n\n    InstrumentConfig = function (config) {\n        this.id = 'IC' + index++ + new Date().getTime();\n        this.className = 'InstrumentConfig';\n        var instrument = this;\n        objectForEach(config, function (val, key) {\n            instrument[key] = val;\n        });\n        //console.log(instrument);\n    };\n\n\n    function cleanup(instrument, callback) {\n        instrument = undefined;\n        if (callback) {\n            callback(false);\n        }\n    }\n\n\n    function store(instrument) {\n        var occupied = findItem(instrument.localPath, sequencer.storage.instruments, true),\n            action = instrument.action;\n\n        //console.log(instrument.localPath, occupied);\n        if (occupied && occupied.className === 'InstrumentConfig' && action !== 'overwrite') {\n            if (sequencer.debug >= 2) {\n                console.warn('there is already an Instrument at', instrument.localPath);\n                cleanup(instrument);\n            }\n        } else {\n            storeItem(instrument, instrument.localPath, sequencer.storage.instruments);\n        }\n    }\n\n\n    function load(instrument, callback) {\n\n        if (instrument.url === undefined) {\n            instrument.localPath = instrument.folder !== undefined ? instrument.folder + '/' + instrument.name : instrument.name;\n            callback();\n            return;\n        }\n\n\n        ajax({\n            url: instrument.url,\n            responseType: 'json',\n            onError: function () {\n                cleanup(instrument, callback);\n            },\n            onSuccess: function (data) {\n                // if the json data is corrupt (for instance because of a trailing comma) data will be null\n                if (data === null) {\n                    callback(false);\n                    return;\n                }\n\n                //console.log(data);\n                if (data.name !== undefined && instrument.name === undefined) {\n                    instrument.name = data.name;\n                }\n\n                if (data.folder !== undefined && instrument.folder === undefined) {\n                    instrument.folder = data.folder;\n                }\n\n                if (instrument.name === undefined) {\n                    instrument.name = parseUrl(instrument.url).name;\n                }\n\n                instrument.localPath = instrument.folder !== undefined ? instrument.folder + '/' + instrument.name : instrument.name;\n                objectForEach(data, function (val, key) {\n                    if (key !== 'name' && key !== 'folder') {\n                        instrument[key] = val;\n                    }\n                });\n                callback();\n            }\n        });\n    }\n\n\n    sequencer.addInstrument = function (config, callback, callbackAfterAllTasksAreDone) {\n        var type = typeString(config),\n            instrument, json, name, folder;\n\n\n        if (type !== 'object') {\n            if (sequencer.debug >= 2) {\n                console.warn('can\\'t add an Instrument with this data', config);\n            }\n            return false;\n        }\n\n        //console.log(config);\n\n        if (config.json) {\n            json = config.json;\n            name = config.name;\n            folder = config.folder;\n            if (typeString(json) === 'string') {\n                try {\n                    json = JSON.parse(json);\n                } catch (e) {\n                    if (sequencer.debug >= 2) {\n                        console.warn('can\\'t add an Instrument with this data', config);\n                    }\n                    return false;\n                }\n            }\n            if (json.mapping === undefined) {\n                if (sequencer.debug >= 2) {\n                    console.warn('can\\'t add an Instrument with this data', config);\n                }\n                return false;\n            }\n            config = {\n                mapping: json.mapping,\n                name: name === undefined ? json.name : name,\n                folder: folder === undefined ? json.folder : folder\n            };\n            //console.log('config', name, folder, json.name, json.folder);\n        }\n\n\n        instrument = new InstrumentConfig(config);\n\n        sequencer.addTask({\n            type: 'load instrument config',\n            method: load,\n            params: instrument\n        }, function (value) {\n            //console.log(instrument, callback);\n            store(instrument);\n            if (callback) {\n                //console.log('callback', callback.name)\n                callback(instrument);\n            }\n        }, callbackAfterAllTasksAreDone);\n\n        sequencer.startTaskQueue();\n\n        /*\n        load(instrument, function(){\n            console.log(instrument);\n            store(instrument);\n            if(callback){\n                callback(instrument);\n            }\n        });\n        */\n    };\n\n\n    sequencer.protectedScope.addInitMethod(function () {\n        ajax = sequencer.protectedScope.ajax;\n        findItem = sequencer.protectedScope.findItem;\n        parseUrl = sequencer.protectedScope.parseUrl;\n        storeItem = sequencer.protectedScope.storeItem;\n        typeString = sequencer.protectedScope.typeString;\n        objectForEach = sequencer.protectedScope.objectForEach;\n    });\n\n}\nfunction keyEditor() {\n\n  'use strict';\n\n  var\n    //private\n    KeyEditor,\n\n    updateDataKeys = 'newEvents newNotes newParts changedEvents changedNotes changedParts removedEvents removedNotes removedParts'.split(' '),\n\n    // default values\n    tickWidth = 0.1,\n    pitchHeight = 10,\n    barsPerPage = 4,\n    snapValueX = 0, // means snaps is off -> ticks value do not get rounded\n    //snapValueX = 1, // means snaps to all ticks\n    snapValueY = 'chromatic',\n    eventWidth = 2,\n\n    ceil = Math.ceil,\n\n    //import\n    createIteratorFactory,\n    getPosition,\n    createPlayhead,\n    getScaffoldingBars,\n    typeString,\n    objectToArray,\n    arrayToObject,\n    debug,\n    round,\n    floor,\n    createNote,\n\n    //public\n    //getLines,\n    //xToTicks,\n    //yToPitch,\n\n    //private\n    setPageData,\n    checkNextPage,\n    checkScrollPosition,\n    dispatchEvent,\n    handleKeys;\n\n\n\n  KeyEditor = function (song, config) {\n    this.song = song;\n    this.song.keyEditor = this;\n    this.playhead = createPlayhead(this.song, 'barsbeats ticks millis', 'keyeditor');\n\n    this.numBars = song.bars;\n    this.newNumBars = this.numBars;\n    this.eventListeners = {};\n    this.interrupt = false;\n\n    this.iteratorFactory = createIteratorFactory(this.song, this);\n    this.verticalLine = this.iteratorFactory.createVerticalLineIterator(this);\n    this.horizontalLine = this.iteratorFactory.createHorizontalLineIterator(this);\n    this.eventIterator = this.iteratorFactory.createEventIterator(this);\n    this.noteIterator = this.iteratorFactory.createNoteIterator(this);\n    this.partIterator = this.iteratorFactory.createPartIterator(this);\n\n\n    this.exactFitVertical = config.exactFitVertical || false;\n    this.exactFitHorizontal = config.exactFitHorizontal || false;\n\n    this.activeEvents = [];\n    this.activeNotes = [];\n    this.activeParts = [];\n\n    this.newEvents = [];\n    this.newNotes = [];\n    this.newParts = [];\n\n    this.changedEvents = [];\n    this.changedNotes = [];\n    this.changedParts = [];\n\n    this.removedEvents = [];\n    this.removedNotes = [];\n    this.removedParts = [];\n\n    this.recordedNotesObj = {};\n    this.recordedEventsObj = {};\n\n    this.snapshot = {\n      activeEvents: this.activeEvents,\n      activeNotes: this.activeNotes,\n      activeParts: this.activeParts,\n\n      newEvents: this.newEvents,\n      newNotes: this.newNotes,\n      newParts: this.newParts,\n\n      changedEvents: this.changedEvents,\n      changedNotes: this.changedNotes,\n      changedParts: this.changedParts,\n\n      removedEvents: this.removedEvents,\n      removedNotes: this.removedNotes,\n      removedParts: this.removedParts\n    };\n\n\n    if (config.paginate) {\n      this.paginate = true;\n      this.pageNo = 0;\n      this.barsPerPage = config.barsPerPage;\n      this.pageWidth = config.pageWidth;\n      this.pageHeight = config.pageHeight;\n      this.width = this.pageWidth;\n      this.lowestNote = config.lowestNote || song.lowestNote;\n      this.highestNote = config.highestNote || song.highestNote;\n      this.pitchRange = this.highestNote - this.lowestNote;\n      if (this.exactFitVertical) {\n        this.pitchHeight = this.height / this.pitchRange;\n        this.height = this.pageHeight;\n      } else {\n        this.pitchHeight = config.pitchHeight || pitchHeight;\n        this.height = this.pitchHeight * this.pitchRange;\n      }\n      //this.startBar = 0;//make this configurable\n      setPageData(this, 0);\n      checkNextPage(this);\n\n    } else {\n\n      this.setStartPosition(config.startPosition || 1);\n      this.setEndPosition(config.endPosition || song.bars + 1);\n      this.numTicks = this.endTicks - this.startTicks;\n\n      if (config.width) {\n        this.width = config.width;\n        this.tickWidth = this.width / this.numTicks;\n      } else if (config.tickWidth) {\n        this.tickWidth = config.tickWidth;\n        this.width = this.numTicks * this.tickWidth;\n        this.exactFitHorizontal = false;\n      } else if (config.barsPerPage && config.viewportWidth) {\n        //@TODO: add support for time measurement changes\n        this.barsPerPage = config.barsPerPage;\n        this.viewportWidth = config.viewportWidth;\n        this.tickWidth = this.viewportWidth / (this.startPosition.ticksPerBar * this.barsPerPage);\n        this.width = this.numTicks * this.tickWidth;\n        this.scrollX = 0;\n        this.scrollPosition = 0;\n        this.viewportTicks = this.viewportWidth / this.tickWidth;\n        this.maxScrollPosition = ceil(this.width / this.viewportWidth);\n        this.scrollLimit = this.viewportWidth / this.tickWidth;\n        checkScrollPosition(this);\n        this.exactFitHorizontal = false;\n      } else if (config.viewportWidth) {\n        this.viewportWidth = this.width = config.viewportWidth;\n        this.tickWidth = this.viewportWidth / this.numTicks;\n        this.exactFitHorizontal = true;\n      } else {\n        this.tickWidth = tickWidth;\n        this.width = this.numTicks * this.tickWidth;\n        this.exactFitHorizontal = false;\n      }\n\n\n      this.lowestNote = config.lowestNote || song.lowestNote;\n      this.highestNote = config.highestNote || song.highestNote;\n      this.pitchRange = config.pitchRange || this.highestNote - this.lowestNote + 1;\n      //console.log(this.pitchRange);\n\n      if (config.height) {\n        this.height = config.height;\n        this.pitchHeight = this.height / this.pitchRange;\n      } else if (config.pitchHeight) {\n        this.pitchHeight = config.pitchHeight;\n        this.height = this.pitchRange * this.pitchHeight;\n        this.exactFitVertical = false;\n      } else if (config.viewportHeight) {\n        this.viewportHeight = this.height = config.viewportHeight;\n        this.pitchHeight = this.viewportHeight / this.pitchRange;\n        this.exactFitVertical = true;\n      } else {\n        this.pitchHeight = pitchHeight;\n        this.height = this.pitchRange * this.pitchHeight;\n        this.exactFitVertical = false;\n      }\n\n      // this.verticalLine.setStartPosition(this.startPosition);\n      // this.verticalLine.setEndPosition(this.endPosition);\n      //this.verticalLine.reset(this.startPosition, this.endPosition);\n      //this.horizontalLine.reset();\n      //this.eventIterator.reset();\n      //this.noteIterator.reset();\n      //this.partIterator.reset();\n      //console.log(this.tickWidth,this.pitchHeight);\n    }\n\n    this.scrollX = 0;\n    this.scrollY = 0;\n    this.currentPage = 1;\n    this.numPages = ceil(this.width / this.viewportWidth);\n\n    this.snapValueX = config.snapX === undefined ? snapValueX : config.snapX;\n    this.snapValueY = config.snapY === undefined ? snapValueY : config.snapY;\n    this.setSnapX(this.snapValueX);\n    this.setSnapY(this.snapValueY);\n\n    //console.log(this.maxScrollPosition);\n  };\n\n\n  KeyEditor.prototype.setBarsPerPage = function (bbp) {\n    this.interrupt = true;\n\n    var tmp = round(this.scrollX / (this.viewportWidth / this.barsPerPage));\n    this.barsPerPage = bbp;\n    this.tickWidth = this.viewportWidth / (this.startPosition.ticksPerBar * this.barsPerPage);\n    this.viewportTicks = this.viewportWidth / this.tickWidth;\n    this.width = this.numTicks * this.tickWidth;\n    this.verticalLine.reset();\n    this.horizontalLine.reset();\n    this.eventIterator.reset();\n    this.partIterator.reset();\n    this.scrollLimit = this.viewportWidth / this.tickWidth;\n    this.maxScrollPosition = ceil(this.width / this.viewportWidth);\n    this.snapWidth = this.tickWidth * this.snapTicks;\n\n    this.numPages = ceil(this.numBars / this.barsPerPage);\n    this.currentPage = floor(this.song.ticks / (this.barsPerPage * this.song.ticksPerBar)) + 1;\n\n    dispatchEvent(this, 'scale', {});\n\n    if (this.song.playing) {\n      this.scrollPosition = floor(this.song.ticks / this.viewportTicks);\n    } else {\n      //console.log(tmp,this.scrollPosition);\n      this.scrollPosition = ((this.viewportWidth / this.barsPerPage) * tmp) / this.viewportWidth;\n      dispatchEvent(this, 'scroll', { x: (this.scrollPosition * this.viewportWidth) });\n    }\n    this.interrupt = false;\n  };\n\n\n  KeyEditor.prototype.setViewport = function (w, h) {\n    var draw = false;\n\n    if (this.barsPerPage && w !== this.viewportWidth) {\n      //@TODO: add support for time measurement changes\n      this.viewportWidth = w;\n      this.tickWidth = this.viewportWidth / (this.startPosition.ticksPerBar * this.barsPerPage);\n      this.viewportTicks = this.viewportWidth / this.tickWidth;\n      this.width = this.numTicks * this.tickWidth;\n      draw = true;\n    } else if (this.exactFitHorizontal === true && w !== this.width) {\n      this.viewportWidth = this.width = w;\n      this.tickWidth = this.width / this.numTicks;\n      draw = true;\n    }\n\n    if (this.exactFitVertical === true && h !== this.height) {\n      this.viewportHeight = this.height = h;\n      this.pitchHeight = this.height / this.pitchRange;\n      draw = true;\n    }\n\n    if (draw) {\n      this.verticalLine.reset();\n      this.horizontalLine.reset();\n      this.eventIterator.reset();\n      this.noteIterator.reset();\n      this.partIterator.reset();\n\n      dispatchEvent(this, 'draw', {});\n    }\n  };\n\n\n  KeyEditor.prototype.updateSong = function (data) {\n    this.iteratorFactory.updateSong();\n\n    var key, i = 0, j, k, arr, tmp;\n\n    for (i = updateDataKeys.length - 1; i >= 0; i--) {\n      key = updateDataKeys[i];\n      switch (key) {\n        case 'newNotes':\n        case 'changedNotes':\n          arr = data[key];\n          for (j = arr.length - 1; j >= 0; j--) {\n            tmp = arr[j];\n            tmp.bbox = this.getNoteRect(tmp);\n          }\n          break;\n\n        case 'newParts':\n        case 'changedParts':\n          arr = data[key];\n          for (j = arr.length - 1; j >= 0; j--) {\n            tmp = arr[j];\n            tmp.bbox = this.getPartRect(tmp);\n          }\n          break;\n      }\n    }\n\n    /*\n            this.newNumBars = data.numBars;\n            // delete numBars otherwise the for loop below doesn't work anymore\n            delete data.numBars;\n    \n            for(key in data){\n                if(data.hasOwnProperty(key)){\n                    arr = data[key];\n                    for(j = arr.length - 1; j >= 0; j--){\n                        tmp = arr[j];\n                        k = floor(i/3);\n                        //console.log(i,k);\n                        switch(k){\n                            case 0: // event arrays\n                                //console.log(k,i);\n                                //tmp.bbox = getEventRect(tmp);\n                                // arr[j] = {\n                                //     event: tmp\n                                // }\n                                break;\n                            case 1: // note arrays\n                                //console.log(k,i);\n                                if(tmp.bbox)\n                                console.log(1,tmp.bbox.x)\n                                tmp.bbox = this.getNoteRect(tmp);\n                                console.log(2,tmp.bbox.x)\n                                // arr[j] = {\n                                //     note: tmp,\n                                //     bbox: this.getNoteRect(tmp)\n                                // }\n                                break;\n                            case 2: // part arrays\n                                //console.log(k,i);\n                                //console.log(tmp);\n                                tmp.bbox = this.getPartRect(tmp);\n                                // arr[j] = {\n                                //     part: tmp,\n                                //     bbox: this.getPartRect(tmp)\n                                // }\n                                break;\n                        }\n                    }\n                    i++;\n                }\n            }\n    */\n    this.newNumBars = data.numBars;\n\n    this.newEvents = this.newEvents.concat(data.newEvents);\n    this.changedEvents = this.changedEvents.concat(data.changedEvents);\n    this.removedEvents = this.removedEvents.concat(data.removedEvents);\n    this.removedEventsObj = arrayToObject(this.removedEvents, 'id');\n\n    this.newNotes = this.newNotes.concat(data.newNotes);\n    this.changedNotes = this.changedNotes.concat(data.changedNotes);\n    this.removedNotes = this.removedNotes.concat(data.removedNotes);\n    this.removedNotesObj = arrayToObject(this.removedNotes, 'id');\n\n    this.newParts = this.newParts.concat(data.newParts);\n    this.changedParts = this.changedParts.concat(data.changedParts);\n    this.removedParts = this.removedParts.concat(data.removedParts);\n    this.removedPartsObj = arrayToObject(this.removedParts, 'id');\n  };\n\n\n  KeyEditor.prototype.setStartPosition = function (pos) {\n    if (typeString(pos) !== 'array') {\n      pos = ['barsandbeats', pos, 1, 1, 0];\n    }\n\n    this.startPosition = getPosition(this.song, pos);\n    this.startTicks = this.startPosition.ticks;\n    this.startMillis = this.startPosition.millis;\n    //console.log('start',pos,this.startTicks);\n  };\n\n\n  KeyEditor.prototype.setEndPosition = function (pos) {\n    if (typeString(pos) !== 'array') {\n      pos = ['barsandbeats', pos, 1, 1, 0];\n    }\n\n    this.endPosition = getPosition(this.song, pos);\n    this.endTicks = this.endPosition.ticks;\n    this.endMillis = this.endPosition.millis;\n    //console.log('end',pos,this.endTicks,this.endPosition);\n  };\n\n\n  KeyEditor.prototype.addEventListener = function (id, cb) {\n    var ids = id.split(' '),\n      tmp,\n      editor = this,\n      eventId;\n\n    ids.forEach(function (id) {\n\n      tmp = editor.eventListeners[id];\n\n      if (tmp === undefined) {\n        editor.eventListeners[id] = [];\n        tmp = editor.eventListeners[id];\n      }\n\n      eventId = id + '-' + tmp.length;\n      tmp.push(cb);\n    });\n  };\n\n\n  KeyEditor.prototype.nextPage = function () {\n    setPageData(this, this.startBar + this.barsPerPage);\n    dispatchEvent(this, 'pagechange', { pageNo: this.pageNo, lastPage: this.lastPage });\n  };\n\n\n  KeyEditor.prototype.prevPage = function () {\n    setPageData(this, this.startBar - this.barsPerPage);\n    dispatchEvent(this, 'pagechange', { pageNo: this.pageNo, lastPage: this.lastPage });\n  };\n\n\n  KeyEditor.prototype.gotoPage = function (n) {\n    console.warn('ooops, not implemented yet!');\n    return;\n    // n = n - 1;\n    // if (n < 0 || n > this.lastPage) {\n    //     return;\n    // }\n    // this.pageNo = n;\n    // dispatchEvent(this, 'pagechange', { pageNo: this.pageNo, lastPage: this.lastPage });\n    // setPageData(this, this.pageNo);\n  };\n\n\n  KeyEditor.prototype.scroll = function (action) {\n\n    //this.scrollPosition = floor(this.scrollX/this.viewportWidth);\n    var x,\n      tmp = round(this.scrollX / (this.viewportWidth / this.barsPerPage));\n\n    this.scrollPosition = ((this.viewportWidth / this.barsPerPage) * tmp) / this.viewportWidth;\n\n    switch (action) {\n      case '>':\n        this.scrollPosition += 1;\n        this.scrollPosition = this.scrollPosition > this.maxScrollPosition ? this.maxScrollPosition : this.scrollPosition;\n        break;\n      case '>>':\n        this.scrollPosition = this.maxScrollPosition;\n        break;\n      case '<':\n        this.scrollPosition -= 1;\n        this.scrollPosition = this.scrollPosition < 0 ? 0 : this.scrollPosition;\n        break;\n      case '<<':\n        this.scrollPosition = 0;\n        break;\n      default:\n        if (isNaN(action)) {\n          return;\n        }\n        this.scrollPosition = parseInt(action);\n    }\n\n    x = this.scrollPosition * this.viewportWidth;\n    this.scrollLimit = (x + this.viewportWidth) / this.tickWidth;\n    this.currentPage = ceil(x / this.viewportWidth) + 1;\n    if (this.currentPage === 0) {\n      this.currentPage = 1;\n    } else if (this.currentPage > this.maxScrollPosition) {\n      this.currentPage = this.maxScrollPosition;\n    }\n    //console.log('bar',(this.scrollPosition * this.barsPerPage),'scroll',this.scrollPosition);\n    dispatchEvent(this, 'scroll', { x: x });\n  };\n\n\n  KeyEditor.prototype.updateScroll = function (scrollX, scrollY) {\n    this.scrollX = scrollX;\n    this.scrollY = scrollY;\n    this.scrollLimit = (scrollX + this.viewportWidth) / this.tickWidth;\n  };\n\n\n  KeyEditor.prototype.getEventRect = function (event) {\n    //console.log(note.number);\n    var\n      x = this.ticksToX(event.ticks - this.startTicks, false),\n      y = this.pitchToY(event.number),\n      w = eventWidth * this.tickWidth,\n      h = this.pitchHeight;\n\n    return {\n      x: x,\n      y: y,\n      width: w,\n      height: h,\n      top: y,\n      left: x,\n      bottom: y + h,\n      right: x + w\n    };\n  };\n\n\n  KeyEditor.prototype.getNoteRect = function (note) {\n    //console.log(note.number);\n    var\n      x = this.ticksToX(note.ticks - this.startTicks, false),//(note.ticks - this.startTicks) * this.tickWidth,\n      y = this.pitchToY(note.number),\n      w = note.durationTicks * this.tickWidth,\n      h = this.pitchHeight,\n      start, end, diff;\n\n    if (note.endless) {\n      w = (this.song.ticks - note.noteOn.ticks) * this.tickWidth;\n    }\n\n    ///*\n    if (this.paginate) {\n\n      start = note.ticks;\n      end = note.noteOff.ticks;\n\n      if (start < this.startTicks) {\n        diff = this.startTicks - start;\n        start = start + diff - this.startTicks;\n        x = start * this.tickWidth;\n\n        end = end > this.endTicks ? this.endTicks : end;\n        w = (end - this.startTicks) * this.tickWidth;\n      } else {\n        return false;\n      }\n    }\n\n    //*/\n\n    return {\n      x: x,\n      y: y,\n      width: w,\n      height: h,\n      top: y,\n      left: x,\n      bottom: y + h,\n      right: x + w\n    };\n  };\n\n\n  KeyEditor.prototype.getPartRect = function (part) {\n    var stats = part.getStats('noteNumber all'),\n      //firstEvent = part.events[0],\n      //lastEvent = part.events[part.events.length - 1],\n      bbox = {\n        // left: (firstEvent.ticks - this.startTicks) * this.tickWidth,\n        // right: (lastEvent.ticks - this.startTicks) * this.tickWidth,\n        // top: this.height - ((stats.max - this.lowestNote + 1) * this.pitchHeight),\n        // bottom: this.height - ((stats.min - this.lowestNote + 1) * this.pitchHeight) + this.pitchHeight,\n        top: this.pitchToY(stats.max),// - this.pitchHeight,\n        bottom: this.pitchToY(stats.min) + this.pitchHeight,\n        left: this.ticksToX(part.start.ticks - this.startTicks, false),\n        right: this.ticksToX(part.end.ticks - this.startTicks, false),\n        //left: this.ticksToX(part.events[0].ticks, false),\n        //right: this.ticksToX(part.events[part.events.length - 1].ticks, false)\n      };\n\n    //console.log(stats.min, stats.max);\n\n    bbox.x = bbox.left;\n    bbox.y = bbox.top;\n    bbox.width = bbox.right - bbox.left;\n    bbox.height = bbox.bottom - bbox.top;\n\n    part.bbox = bbox;\n    part.stats = stats;\n    //console.log(part.id,stats,bbox);\n    return bbox;\n  };\n\n\n  KeyEditor.prototype.getBBox = function (arg) {\n    var type, data;\n    if (typeString(arg) === 'string') {\n      switch (arg.substring(0, 1)) {\n        case 'E':\n          type = 'event';\n          if (event.type === 144 && event.endEvent !== undefined) {\n            data = this.song.findEvent('id = ' + arg);\n          } else {\n            console.error('argument not supported, please check documentation');\n            return;\n          }\n          break;\n        case 'P':\n          type = 'part';\n          data = this.song.getPart(arg);\n          break;\n        case 'T':\n          type = 'track';\n          break;\n        default:\n          console.error('argument not supported, please check documentation');\n          return;\n      }\n    } else {\n      switch (arg.className) {\n        case 'AudioEvent':\n          type = 'audio';\n          break;\n        case 'MidiEvent':\n          type = 'event';\n          break;\n        case 'Part':\n          type = 'part';\n          break;\n        case 'Track':\n          type = 'track';\n          break;\n        default:\n          console.error('argument not supported, please check documentation');\n          return;\n      }\n    }\n\n    if (data === undefined) {\n      console.error(arg, 'could not be found');\n      return;\n    }\n\n    switch (type) {\n      case 'event':\n        return this.getNoteRect(data);\n      //break;\n      case 'part':\n        return this.getPartRect(data);\n      //break;\n    }\n  };\n\n\n  KeyEditor.prototype.startMoveNote = function (note, x, y) {\n    if (note.className !== 'MidiNote') {\n      if (sequencer.debug >= sequencer.WARN) {\n        console.warn(note, 'is not a MidiNote');\n      }\n      return;\n    }\n    //sequencer.unscheduleEvent(note);\n    this.selectedNote = note;\n    this.gripX = x - this.selectedNote.bbox.x;\n  };\n\n\n  KeyEditor.prototype.stopMoveNote = function () {\n    this.selectedNote = undefined;\n  };\n\n\n  KeyEditor.prototype.moveNote = function (x, y) {\n    if (this.selectedNote === undefined) {\n      return;\n    }\n\n    var\n      newPitch = this.yToPitch(y).number,\n      oldPitch = this.selectedNote.pitch,\n      newTicks = this.xToTicks(x - this.gripX),\n      oldTicks = this.selectedNote.ticks,\n      part = this.selectedNote.part,\n      update = false;\n\n    //console.log(newTicks, oldTicks, this.gripX, x);\n\n    if (newPitch !== oldPitch) {\n      part.transposeNote(this.selectedNote, newPitch - oldPitch);\n      update = true;\n    }\n\n    if (newTicks !== oldTicks) {\n      part.moveNote(this.selectedNote, newTicks - oldTicks);\n      update = true;\n    }\n\n    if (update === true) {\n      this.song.update();\n    }\n  };\n\n\n  KeyEditor.prototype.startMovePart = function (part, x, y) {\n    if (part.className !== 'Part') {\n      if (sequencer.debug >= sequencer.WARN) {\n        console.warn(part, 'is not a Part');\n      }\n      return;\n    }\n    this.selectedPart = part;\n    this.selectedPart.pitch = this.yToPitch(y).number;\n    this.gripX = x - this.selectedPart.bbox.x;\n  };\n\n\n  KeyEditor.prototype.stopMovePart = function () {\n    this.selectedPart = undefined;\n  };\n\n\n  KeyEditor.prototype.movePart = function (x, y, autoUpdate) {\n    // console.log(this.selectedPart);\n    if (this.selectedPart === undefined) {\n      return;\n    }\n    if (typeof autoUpdate === 'undefined') {\n      autoUpdate = true;\n    }\n    // console.log(autoUpdate);\n\n    var\n      newPitch = this.yToPitch(y).number,\n      oldPitch = this.selectedPart.pitch,\n      newTicks = this.xToTicks(x - this.gripX),\n      oldTicks = this.selectedPart.ticks,\n      update = false;\n\n    if (newPitch !== oldPitch) {\n      this.selectedPart.track.transposePart(this.selectedPart, newPitch - oldPitch);\n      this.selectedPart.pitch = newPitch;\n      update = true;\n    }\n\n\n    if (newTicks !== oldTicks) {\n      this.selectedPart.track.movePart(this.selectedPart, newTicks - oldTicks);\n      update = true;\n    }\n\n    if (update === true && autoUpdate === true) {\n      this.song.update();\n    }\n  };\n\n\n  KeyEditor.prototype.getTicksAt = KeyEditor.prototype.xToTicks = function (x, snap) {\n    var ticks = ((x + this.scrollX) / this.width) * this.numTicks;\n    //console.log(this.scrollX,this.width,this.numTicks,ticks);\n    if (snap !== false && this.snapTicks !== 0) {\n      //ticks = floor(ticks/this.snapTicks) * this.snapTicks;\n      ticks = round(ticks / this.snapTicks) * this.snapTicks;\n    }\n    //console.log(ticks, this.snapTicks);\n    return ticks;\n  };\n\n\n  KeyEditor.prototype.getPitchAt = KeyEditor.prototype.yToPitch = function (y) {\n    //var note = this.highestNote - floor(((y + this.scrollY)/this.height) * this.pitchRange);\n    var note = this.highestNote - round(((y + this.scrollY) / this.height) * this.pitchRange);\n    note = createNote(note);\n    return note;\n  };\n\n\n  KeyEditor.prototype.getXAt = KeyEditor.prototype.ticksToX = function (ticks, snap) {\n    // var p = ticks/this.numTicks,\n    //     x = (p * this.width) - this.scrollX;\n    var x = (ticks - this.startTicks) * this.tickWidth;\n    if (snap !== false && this.snapWidth !== 0) {\n      //x = (floor(x/this.snapWidth) * this.snapWidth);\n      x = (round(x / this.snapWidth) * this.snapWidth);\n    }\n    return x;\n  };\n\n\n  KeyEditor.prototype.getYAt = KeyEditor.prototype.pitchToY = function (noteNumber) {\n    var y = this.height - ((noteNumber - this.lowestNote + 1) * this.pitchHeight);\n    return y;\n  };\n\n\n  KeyEditor.prototype.getPositionAt = function (x) {\n    var ticks = this.getTicksAt(x);\n    // console.time('get position')\n    // var position = getPosition(this.song,['ticks',ticks]);\n    // console.timeEnd('get position')\n    // return position;\n    //console.time('get position')\n    this.playhead.set('ticks', ticks, false);\n    //console.timeEnd('get position')\n    return this.playhead.get();\n  };\n\n\n  KeyEditor.prototype.getPlayheadX = function (compensateForScroll) {\n    var x = ((this.song.ticks / this.song.durationTicks) * this.width);\n    //var x = ((this.song.millis/this.song.durationMillis) * this.width);\n    //var x = (this.song.percentage * this.width);\n    x = compensateForScroll === true ? x - this.scrollX : x;\n    return x;\n  };\n\n\n  KeyEditor.prototype.setPlayheadToX = function (x) {\n    var ticks = this.xToTicks(x, false);\n    this.song.setPlayhead('ticks', ticks);\n  };\n\n  KeyEditor.prototype.getPlayheadPosition = function (compensateForScroll) {\n    //return (sequencer.percentage * this.width);// - this.scrollX;\n    //return ((sequencer.millis/song.durationMillis) * this.width);// - this.scrollX;\n    //var x = ((this.song.millis/this.song.durationMillis) * this.width);\n    // change to ticks to make tempo changes visible by a faster moving playhead\n    var x = ((this.song.ticks / this.song.durationTicks) * this.width);\n    x = compensateForScroll === true ? x - this.scrollX : x;\n    return x;\n  };\n\n\n  KeyEditor.prototype.setPlayheadPosition = function (type, value) {\n    //console.log(this.scrollX,value, this.scrollX + value);\n    var ticks;\n    switch (type) {\n      case 'x':\n        ticks = this.xToTicks(value, false);\n        break;\n      case 'ticks':\n        ticks = value;\n        break;\n      case 'millis':\n        ticks = this.playhead.set('millis', value).ticks;\n        break;\n      case 'barsbeats':\n      case 'barsandbeats':\n        ticks = getPosition(this.song, ['barsbeats', value]).ticks;\n        break;\n    }\n    this.song.setPlayhead('ticks', ticks);\n  };\n\n\n  KeyEditor.prototype.getEventAt = function (x, y) {\n    var position = this.getSongPosition(x),\n      pitch = this.getPitchAt(y);\n  };\n\n\n  KeyEditor.prototype.getEventsInRect = function (x, y, w, h) {\n    var startPos = this.getSongPosition(x),\n      endPos = this.getSongPosition(x + w),\n      startPitch = this.getPitchAt(y + h),\n      endPitch = this.getPitchAt(y);\n\n  };\n\n\n  KeyEditor.prototype.getNoteAt = function (x, y) {\n    var position = this.getSongPosition(x),\n      pitch = this.getPitchAt(y);\n  };\n\n\n  KeyEditor.prototype.getNotesInRect = function (x, y, w, h) {\n    var startPos = this.getSongPosition(x),\n      endPos = this.getSongPosition(x + w),\n      startPitch = this.getPitchAt(y + h),\n      endPitch = this.getPitchAt(y);\n  };\n\n\n  // takes x,y and returns snapped x,y\n  KeyEditor.prototype.snap = function (x, y) {\n    return {\n      x: this.snapX(x),\n      y: this.snapY(y)\n    };\n  };\n\n\n  // takes x returns snapped x\n  KeyEditor.prototype.snapX = function (x) {\n    //return floor((x + this.scrollX)/this.snapWidth) * this.snapWidth;\n    return round((x + this.scrollX) / this.snapWidth) * this.snapWidth;\n\n  };\n\n\n  // takes y returns snapped y\n  KeyEditor.prototype.snapY = function (y) {\n    //return floor((y + this.scrollY)/this.snapHeight) * this.snapHeight;\n    return round((y + this.scrollY) / this.snapHeight) * this.snapHeight;\n  };\n\n\n  KeyEditor.prototype.setSnapX = function (snapX) {\n    if (snapX === undefined) {\n      return;\n    }\n    //console.log('in', snapX);\n    // 4 -> 1, 8 -> 0.5 16 -> 0.25\n    var beatLength = 4 / this.song.denominator;\n\n    if (snapX === 'off') {\n      this.snapTicks = 0;\n    } else if (snapX === 'tick') {\n      this.snapTicks = 1;\n    } else if (snapX === 'beat') {\n      // TODO: dependent on current time signature!\n      this.snapTicks = this.song.ppq * beatLength;\n    } else if (snapX === 'bar') {\n      // TODO: dependent on current time signature!\n      this.snapTicks = (this.song.ppq * this.song.nominator) * beatLength;\n    } else if (isNaN(snapX) && snapX.indexOf('ticks') !== -1) {\n      this.snapTicks = snapX.replace(/ticks/, '');\n      if (isNaN(this.snapTicks)) {\n        this.snapTicks = this.song.ppq / 4;// sixteenth note\n      } else {\n        this.snapTicks = parseInt(this.snapTicks);\n      }\n    } else {\n      if (isNaN(snapX) || snapX === 0) {\n        // by default snap is off\n        snapX = 0;\n        this.snapTicks = 0;\n      } else {\n        snapX = parseInt(snapX);\n        this.snapTicks = (4 / snapX) * this.song.ppq;\n      }\n    }\n\n    //console.log(snapX,this.snapTicks, beatLength);\n    this.snapValueX = snapX;\n    this.snapWidth = this.tickWidth * this.snapTicks;\n  };\n\n\n  KeyEditor.prototype.setSnapY = function (snapY) {\n    if (snapY === undefined) {\n      return;\n    }\n    this.snapValueY = snapY;\n    //todo: add other scales then chromatic\n    this.snapHeight = this.pitchHeight;\n  };\n\n\n  KeyEditor.prototype.removeNote = function (note) {\n    //note.part.removeNote(note);\n    //console.log(note.id);\n    note.part.removeEvents(note.noteOn, note.noteOff);\n    this.song.update();\n  };\n\n\n  KeyEditor.prototype.removePart = function (part) {\n    part.track.removePart(part);\n    this.song.update();\n  };\n\n\n  KeyEditor.prototype.prepareForRecording = function () {\n    this.recordedEventsObj = {};\n    this.recordedNotesObj = {};\n  };\n\n\n  KeyEditor.prototype.getSnapshot = function () {\n\n    var activeEventsObj,\n      activeNotesObj,\n      activePartsObj,\n\n      recordedNotesSong,\n      //recordingNotesSong,\n      recordedEventsSong,\n\n      nonActiveEvents = [],\n      nonActiveNotes = [],\n      nonActiveParts = [],\n\n      prevActiveEvents = [].concat(this.activeEvents),\n      prevActiveNotes = [].concat(this.activeNotes),\n      prevActiveParts = [].concat(this.activeParts),\n\n      recordedEvents = [],\n      recordedNotes = [],\n      recordingNotes = [],\n\n      //prevRemovedNotes = [].concat(this.removedNotes),\n\n      s, e, n, p, i, j, tmp, length,\n      startBar, endBar;\n\n    this.activeEvents = [];\n    this.activeNotes = [];\n    this.activeParts = [];\n\n    this.activeStateChangedEvents = [];\n    this.activeStateChangedNotes = [];\n    this.activeStateChangedParts = [];\n\n    //if(this.song.bars > this.numBars){\n    if (this.newNumBars !== this.numBars) {\n      startBar = this.numBars;\n      endBar = this.song.lastBar + 1;\n      //console.log(startBar,endBar)\n      //this.verticalLine.setStartPosition(getPosition(song, ['barsbeats', startBar, 1, 1, 0]));\n      //this.verticalLine.setEndPosition(getPosition(song, ['barsbeats', endBar, 1, 1, 0]));\n      this.endPosition = getPosition(this.song, ['barsbeats', endBar, 1, 1, 0, true]);\n      this.verticalLine.reset(getPosition(this.song, ['barsbeats', startBar, 1, 1, 0, true]), this.endPosition);\n      this.numBars = this.song.bars;\n\n      //console.log(this.song.lastBar, this.endPosition.barsAsString);\n\n      this.endTicks = this.endPosition.ticks;\n      this.numTicks = this.song.durationTicks;\n      this.width = this.numTicks * this.tickWidth;\n      //console.log('new width', this.width, this.numTicks, this.tickWidth);\n      //console.log('song has gotten longer boy!', this.song.bars, this.newNumBars, this.numBars, this.width);\n      this.maxScrollPosition = ceil(this.width / this.viewportWidth);\n      //this.numPages = ceil(this.width/this.viewportWidth);\n      this.numPages = ceil(this.numBars / this.barsPerPage);\n    }\n\n\n\n    activeEventsObj = this.song.activeEvents;\n    for (i in activeEventsObj) {\n      if (activeEventsObj.hasOwnProperty(i)) {\n        tmp = activeEventsObj[i];\n        this.activeEvents.push(tmp);\n        if (tmp.active !== true) {\n          tmp.active = true;\n          this.activeStateChangedEvents.push(tmp);\n        }\n      }\n    }\n\n    activeNotesObj = this.song.activeNotes;\n    for (i in activeNotesObj) {\n      if (activeNotesObj.hasOwnProperty(i)) {\n        tmp = activeNotesObj[i];\n        this.activeNotes.push(tmp);\n        //console.log(tmp, tmp.active);\n        if (tmp.active !== true) {\n          tmp.active = true;\n          this.activeStateChangedNotes.push(tmp);\n        }\n      }\n    }\n\n    activePartsObj = this.song.activeParts;\n    for (i in activePartsObj) {\n      if (activePartsObj.hasOwnProperty(i)) {\n        tmp = activePartsObj[i];\n        this.activeParts.push(tmp);\n        if (tmp.active !== true) {\n          tmp.active = true;\n          this.activeStateChangedParts.push(tmp);\n        }\n      }\n    }\n\n    // fixing issue #4\n    recordedEventsSong = this.song.recordedEvents;\n    if (recordedEventsSong) {\n      length = recordedEventsSong.length;\n      for (i = 0; i < length; i++) {\n        tmp = recordedEventsSong[i];\n        if (this.recordedEventsObj[tmp.id] === undefined) {\n          tmp.bbox = this.getEventRect(tmp);\n          recordedEvents.push(tmp);\n          this.recordedEventsObj[tmp.id] = tmp;\n        }\n      }\n    }\n\n    // fixing issue #4\n    recordedNotesSong = this.song.recordedNotes;\n    if (recordedNotesSong) {\n      length = recordedNotesSong.length;\n      for (i = 0; i < length; i++) {\n        tmp = recordedNotesSong[i];\n        if (this.recordedNotesObj[tmp.id] === undefined) {\n          this.recordedNotesObj[tmp.id] = tmp;\n          tmp.bbox = this.getNoteRect(tmp);\n          recordedNotes.push(tmp);\n          //console.log('recordedNotes', tmp);\n        } else if (tmp.endless === true) {\n          tmp.bbox = this.getNoteRect(tmp);\n          recordingNotes.push(tmp);\n          //console.log('endless1', tmp);\n        } else if (tmp.endless === false) {\n          tmp.bbox = this.getNoteRect(tmp);\n          recordingNotes.push(tmp);\n          //console.log('endless2', tmp);\n          tmp.endless = undefined;\n        }\n        //console.log(tmp.bbox.width);\n      }\n    }\n    /*\n            recordingNotesObj = this.song.recordingNotes;\n            for(i in recordingNotesObj){\n                if(recordingNotesObj.hasOwnProperty(i)){\n                    tmp = recordingNotesObj[i];\n                    tmp.bbox = this.getNoteRect(tmp);\n                    recordingNotes.push(tmp);\n                }\n            }\n    */\n\n    for (i = prevActiveEvents.length - 1; i >= 0; i--) {\n      tmp = prevActiveEvents[i];\n      if (tmp === undefined) {\n        console.warn('event is undefined');\n        continue;\n      }\n      if (activeEventsObj[tmp.id] === undefined) {\n        nonActiveEvents.push(tmp);\n        if (tmp.active !== false) {\n          tmp.active = false;\n          this.activeStateChangedEvents.push(tmp);\n        }\n      }\n    }\n\n    for (i = prevActiveNotes.length - 1; i >= 0; i--) {\n      tmp = prevActiveNotes[i];\n      if (tmp === undefined) {\n        console.warn('note is undefined');\n        continue;\n      }\n      if (activeNotesObj[tmp.id] === undefined) {\n        nonActiveNotes.push(tmp);\n        if (tmp.active !== false) {\n          tmp.active = false;\n          this.activeStateChangedNotes.push(tmp);\n        }\n      }\n    }\n\n    for (i = prevActiveParts.length - 1; i >= 0; i--) {\n      tmp = prevActiveParts[i];\n      if (tmp === undefined) {\n        console.warn('part is undefined');\n        continue;\n      }\n      if (activePartsObj[tmp.id] === undefined) {\n        nonActiveParts.push(tmp);\n        if (tmp.active !== false) {\n          tmp.active = false;\n          this.activeStateChangedParts.push(tmp);\n        }\n      }\n    }\n\n    if (this.song.playing) {\n      //            this.currentPage = floor(sequencer.ticks / this.viewportTicks) + 1;\n      this.currentPage = floor(this.song.ticks / (this.barsPerPage * this.song.ticksPerBar)) + 1;\n    }\n\n    /*\n    \n            tmp = this.song.parts;\n            n = false;\n            // check for empty parts and remove them -> @TODO: this should be done in track and/or part!\n            for(i = tmp.length - 1; i >= 0; i--){\n                p = tmp[i];\n                console.log(p.keepWhenEmpty);\n                if(p.keepWhenEmpty === true){\n                    continue;\n                }\n                if(p.events.length === 0){\n                    //console.log('empty part!');\n                    p.track.removePart(p);\n                    n = true;\n                }\n            }\n            if(n){\n                this.song.update();\n            }\n    */\n\n    s = {\n\n      events: {\n        active: this.activeEvents,\n        inActive: this.nonActiveEvents,\n        recorded: recordedEvents,\n        new: this.newEvents,\n        changed: this.changedEvents,\n        removed: this.removedEvents,\n        stateChanged: this.activeStateChangedEvents\n      },\n\n      notes: {\n        active: this.activeNotes,\n        inActive: nonActiveNotes,\n        recorded: recordedNotes,\n        recording: recordingNotes,\n        new: this.newNotes,\n        changed: this.changedNotes,\n        removed: this.removedNotes,\n        stateChanged: this.activeStateChangedNotes\n      },\n\n      parts: {\n        active: this.activeParts,\n        inActive: nonActiveParts,\n        new: this.newParts,\n        changed: this.changedParts,\n        removed: this.removedParts,\n        stateChanged: this.activeStateChangedParts\n\n      },\n\n\n      hasNewBars: startBar !== endBar,\n      newWidth: this.width,\n\n      pageNo: this.currentPage,\n      lastPage: this.numPages\n      //newWidth: song.durationTicks * this.tickWidth\n\n      // hasNewBars: function(){\n      //     if(startBar === endBar){\n      //         return false;\n      //     }\n      // }\n    };\n\n    this.newEvents = [];\n    this.changedEvents = [];\n    this.removedEvents = [];\n\n    this.newNotes = [];\n    this.changedNotes = [];\n    this.removedNotes = [];\n\n    this.newParts = [];\n    this.changedParts = [];\n    this.removedParts = [];\n\n    /*\n            tmp = this.song.parts;\n            n = false;\n    \n            // check for empty parts and remove them -> @TODO: this should be done in track and/or part!\n            for(i = tmp.length - 1; i >= 0; i--){\n                p = tmp[i];\n                if(p.keepWhenEmpty === true){\n                    continue;\n                }\n                if(p.events.length === 0){\n                    //console.log('empty part!');\n                    p.track.removePart(p);\n                    n = true;\n                }\n            }\n            if(n){\n                this.song.update();\n            }\n    */\n\n    return s;\n  };\n\n\n  // flipping pages\n\n  setPageData = function (editor, startBar) {\n    //editor.pageNo = no;\n    editor.numTicks = 0;\n\n    editor.startBar = startBar > 0 ? startBar : 0;\n    editor.startBar = editor.startBar > editor.numBars - editor.barsPerPage ? editor.numBars - editor.barsPerPage : editor.startBar;\n    editor.endBar = startBar + editor.barsPerPage;\n    editor.endBar = editor.endBar > editor.numBars ? editor.numBars : editor.endBar;\n    editor.endBar = editor.endBar < editor.barsPerPage ? editor.barsPerPage : editor.endBar;\n\n    console.log(startBar, editor.startBar, editor.endBar, editor.numBars, editor.numBars - editor.barsPerPage);\n    var i;\n\n    for (i = editor.startBar; i < editor.endBar; i++) {\n      editor.numTicks += editor.bars[i].ticksPerBar;\n    }\n    editor.tickWidth = editor.pageWidth / editor.numTicks;\n\n    editor.startPosition = editor.bars[editor.startBar];\n    editor.endPosition = editor.bars[editor.endBar];\n    editor.startTicks = editor.startPosition.ticks;\n    editor.endTicks = editor.endPosition.ticks;\n\n    editor.verticalLine.reset();\n    editor.horizontalLine.reset();\n    editor.eventIterator.reset();\n    //console.log('nextPage',editor.startPosition,editor.endPosition);\n  };\n\n\n  checkNextPage = function (editor) {\n    if (editor.song.playing() && editor.song.ticks >= editor.endTicks) {\n      //console.log('nextpage');\n      editor.nextPage();\n      //dispatchEvent(this, 'pagechange', {pageNo: this.pageNo, lastPage: this.lastPage});\n    }\n    requestAnimationFrame(function () {\n      checkNextPage(editor);\n    });\n  };\n\n\n  checkScrollPosition = function (editor) {\n    //console.log(editor.song.ticks,editor.scrollLimit,interrupt);\n    if (editor.song.playing && editor.interrupt === false) {\n      if (editor.song.ticks >= editor.scrollLimit) {\n        dispatchEvent(editor, 'scroll', { x: editor.scrollX + editor.viewportWidth });\n        editor.scrollLimit += (editor.viewportWidth / editor.tickWidth);\n        //editor.currentPage++;\n      } else {\n        var x = (floor(editor.song.ticks / editor.viewportTicks) * editor.viewportTicks) * editor.tickWidth;\n        if (editor.scrollX !== x) {\n          dispatchEvent(editor, 'scroll', { x: x });\n        }\n      }\n    }\n    requestAnimationFrame(function () {\n      checkScrollPosition(editor);\n    });\n  };\n\n\n  dispatchEvent = function (editor, id, data) {\n    //console.log(id,eventListeners);\n    var listeners = editor.eventListeners[id];\n    if (listeners) {\n      listeners.forEach(function (cb) {\n        cb(data);\n      });\n    }\n  };\n\n\n  handleKeys = function (editor) {\n    var p = editor.selectedPart,\n      n = editor.selectedNote;\n\n    if (p !== undefined) {\n      p.track.removePart(p);\n      this.song.update();\n    } else if (n !== undefined) {\n      n.part.removeNote(n);\n      this.song.update();\n    }\n  };\n\n\n  sequencer.createKeyEditor = function (song, config) {\n    return new KeyEditor(song, config);\n  };\n\n\n  sequencer.protectedScope.addInitMethod(function () {\n    getPosition = sequencer.protectedScope.getPosition;\n    createPlayhead = sequencer.protectedScope.createPlayhead;\n    createNote = sequencer.createNote;\n    debug = sequencer.debug;\n    floor = sequencer.protectedScope.floor;\n    round = sequencer.protectedScope.round;\n    typeString = sequencer.protectedScope.typeString;\n    objectToArray = sequencer.protectedScope.objectToArray;\n    arrayToObject = sequencer.protectedScope.arrayToObject;\n    getScaffoldingBars = sequencer.protectedScope.getScaffoldingBars;\n    createIteratorFactory = sequencer.protectedScope.createKeyEditorIteratorFactory;\n  });\n\n}\nfunction keyEditorIteratorFactory() {\n\n  'use strict';\n\n  var\n    minWidthSixteenth = 0.042,\n    minWidthBeat = 0.02,\n    /*\n            events,\n            numEvents,\n            notes,\n            numNotes,\n            parts,\n            numParts,\n    \n            song,\n            editor,\n            position,\n    */\n    // import\n    createPlayhead, // defined in playhead.js\n    createNote; // defined in note.js\n\n  //public\n  /*\n          create,\n          updateSong,\n          createVerticalLineIterator,\n          createHorizontalLineIterator,\n          createEventIterator,\n          createNoteIterator,\n          createPartIterator;\n  */\n\n  function Factory(song, editor) {\n    this.song = song;\n    this.editor = editor;\n    //console.log(this.editor);\n    //this.position = createPlayhead(this.song, 'barsbeats ticks millis', 'iterators');\n    this.position = createPlayhead(this.song, 'all', 'iterators');\n    this.updateSong();\n  }\n\n  /*\n      create = function(s, e){\n          song = s;\n          editor = e;\n          updateSong();\n          position = createPlayhead(song, 'barsbeats ticks millis', 'iterators');\n          return {\n              updateSong: updateSong,\n              createVerticalLineIterator: createVerticalLineIterator,\n              createHorizontalLineIterator: createHorizontalLineIterator,\n              createEventIterator: createEventIterator,\n              createNoteIterator: createNoteIterator,\n              createPartIterator: createPartIterator\n          };\n      };\n  */\n\n  Factory.prototype.updateSong = function () {\n    this.events = this.song.events;\n    this.numEvents = this.events.length;\n    this.notes = this.song.notes;\n    this.numNotes = this.notes.length;\n    this.parts = this.song.parts;\n    this.numParts = this.parts.length;\n    this.position.updateSong();\n  };\n\n\n  Factory.prototype.createVerticalLineIterator = function () {\n    var supportedTypes = 'bar beat sixteenth',\n      lineType,\n      numTicks = {},\n      tickWidth,\n      offset,\n      type,\n      ticks,\n      endTicks,\n      bar,\n      beat,\n      sixteenth,\n      nominator,\n      numSixteenth,\n      startPosition,\n      endPosition,\n      editor = this.editor,\n      position = this.position,\n      // widthBar,\n      // widthBeat,\n      // widthSixteenth,\n      data, next, hasNext, reset, getData, setType;\n    //setStartPosition, setEndPosition;\n\n\n    getData = function () {\n      //console.log('ticks',ticks);\n      data = position.update('ticks', ticks);\n      numTicks.bar = data.ticksPerBar;\n      numTicks.beat = data.ticksPerBeat;\n      numTicks.sixteenth = data.ticksPerSixteenth;\n      nominator = data.nominator;\n      numSixteenth = data.numSixteenth;\n      //console.log(numTicks,nominator,numSixteenth);\n      //console.log(ticks, data);\n    };\n\n    next = function (t) {\n      if (t) {\n        type = t;\n        // if (tickWidth < minWidthBeat) {\n        //     type = 'bar';\n        // } else if (tickWidth < minWidthSixteenth) {\n        //     type = 'beat';\n        // }\n      } else {\n        if (tickWidth < minWidthBeat) {\n          type = 'bar';\n        } else if (tickWidth < minWidthSixteenth) {\n          type = 'beat';\n        }\n      }\n\n      switch (type) {\n        case 'sixteenth':\n          lineType = 'sixteenth';\n          sixteenth++;\n          if (sixteenth > numSixteenth) {\n            lineType = 'beat';\n            sixteenth = 1;\n            beat++;\n            if (beat > nominator) {\n              lineType = 'bar';\n              beat = 1;\n              bar++;\n            }\n          }\n          break;\n        case 'beat':\n          lineType = 'beat';\n          sixteenth = 1;\n          beat++;\n          if (beat > nominator) {\n            lineType = 'bar';\n            beat = 1;\n            bar++;\n          }\n          break;\n        case 'bar':\n          lineType = 'bar';\n          sixteenth = 1;\n          beat = 1;\n          bar++;\n          break;\n      }\n      ticks += numTicks[type];\n      getData();\n      if (ticks > endTicks) {\n        return false;\n      }\n      //console.log(bar,beat,sixteenth);\n      return {\n        x: (ticks * tickWidth) - offset,\n        bar: bar,\n        beat: beat,\n        sixteenth: sixteenth,\n        // widthBar: widthBar,\n        // widthBeat: widthBeat,\n        // widthSixteenth: widthSixteenth,\n        type: lineType,\n        position: data\n      };\n    };\n\n    hasNext = function (t) {\n      var diffTicks = endTicks - ticks,\n        result = false;\n\n      if (t) {\n        type = t;\n        if (tickWidth < minWidthBeat) {\n          type = 'bar';\n        } else if (tickWidth < minWidthSixteenth) {\n          type = 'beat';\n        }\n      }\n\n      switch (type) {\n        case 'bar':\n          result = diffTicks >= numTicks[type];\n          break;\n        case 'beat':\n          result = diffTicks >= numTicks[type];\n          break;\n        case 'sixteenth':\n          result = diffTicks >= numTicks[type];\n          break;\n      }\n      //console.log(ticks,endTicks,diffTicks);\n      return result;\n    };\n\n    reset = function (start, end) {\n      startPosition = start || editor.startPosition;\n      endPosition = end || editor.endPosition;\n      ticks = startPosition.ticks;\n      bar = startPosition.bar;\n      beat = startPosition.beat;\n      sixteenth = startPosition.sixteenth;\n      //console.log(startPosition.barsAsString);\n      //console.log(endPosition.barsAsString);\n      //console.log(ticks,bar,beat,sixteenth);\n      endTicks = endPosition.ticks;\n      tickWidth = editor.tickWidth;\n      offset = 0;//ticks * this.editor.tickWidth;\n      position.set('ticks', ticks);\n      //console.log(tickWidth,offset);\n      if (tickWidth < minWidthBeat) {\n        type = 'bar';\n      } else if (tickWidth < minWidthSixteenth) {\n        type = 'beat';\n      }\n      getData();\n      // widthBar = numTicks.bar * this.editor.tickWidth;\n      // widthBeat = numTicks.beat * this.editor.tickWidth;\n      // widthSixteenth = numTicks.sixteenth * this.editor.tickWidth;\n    };\n    /*\n            setStartPosition = function(position){\n                startPosition = position;\n            };\n    \n            setEndPosition = function(position){\n                endPosition = position;\n            };\n    */\n    setType = function (t) {\n      type = t;\n      if (tickWidth < minWidthBeat) {\n        type = 'bar';\n      } else if (tickWidth < minWidthSixteenth) {\n        type = 'beat';\n      }\n    };\n\n    //console.log('ver');\n    return {\n      next: next,\n      reset: reset,\n      hasNext: hasNext,\n      setType: setType\n      //setStartPosition: setStartPosition,\n      //setEndPosition: setEndPosition,\n    };\n  };\n\n\n  Factory.prototype.createHorizontalLineIterator = function () {\n    var index,\n      pitch,\n      range,\n      pitchHeight,\n      data = {},\n      editor = this.editor,\n      next, hasNext, reset;\n\n    next = function (type) {\n      data = {\n        note: createNote(pitch),\n        y: (index * pitchHeight)\n      };\n      pitch--;\n      index++;\n      return data;\n    };\n\n    hasNext = function (type) {\n      var result = false;\n      switch (type) {\n        case 'chromatic':\n          result = index < range;\n          break;\n      }\n      return result;\n    };\n\n    reset = function () {\n      index = 0;\n      pitch = editor.highestNote;\n      range = editor.pitchRange;\n      pitchHeight = editor.pitchHeight;\n      //console.log('reset',pitch,range,pitchHeight);\n    };\n\n    //console.log('hor');\n    return {\n      next: next,\n      reset: reset,\n      hasNext: hasNext\n    };\n  };\n\n\n  Factory.prototype.createEventIterator = function () {\n    var startTicks,\n      endTicks,\n      hasNextCalled,\n      index,\n      nextEvent,\n      editor = this.editor,\n      position = this.position,\n      events = this.events,\n      numEvents = this.numEvents,\n      types = '',\n      next, hasNext, reset, setTypes;\n\n    hasNext = function (t) {\n      types = t || types;\n      hasNextCalled = true;\n      index++;\n      if (index === numEvents) {\n        return false;\n      }\n\n      nextEvent = events[index];\n      if (types === '') {\n        return nextEvent.ticks <= endTicks;\n      }\n      return false;\n    };\n\n    next = function (t) {\n      types = t || types;\n      if (!hasNextCalled) {\n        hasNext(types);\n      }\n      hasNextCalled = false;\n      return nextEvent;\n    };\n\n    reset = function () {\n      var event;\n      startTicks = editor.startTicks;\n      endTicks = editor.endTicks;\n      hasNextCalled = false;\n      if (editor.paginate === true && sequencer.isPlaying() === true) {\n        return;\n      }\n      /*\n      for(index = 0; index < numEvents; index++){\n          event = events[index];\n          if(event.ticks >= startTicks){\n              break;\n          }\n      }\n      index--;\n      */\n      index = position.get().eventIndex - 2;\n      //console.log(events);\n      //console.log('ke',sequencer.isPlaying(),index,sequencer.eventIndex);\n    };\n\n    setTypes = function () {\n      var args = Array.prototype.slice.call(arguments);\n      args.forEach(function (type) {\n        types += type + ' ';\n      });\n    };\n\n    return {\n      next: next,\n      reset: reset,\n      hasNext: hasNext,\n      setTypes: setTypes\n    };\n  };\n\n\n  Factory.prototype.createNoteIterator = function () {\n    var startTicks,\n      endTicks,\n      hasNextCalled,\n      index,\n      newNote,\n      nextNote,\n      editor = this.editor,\n      song = this.song,\n      notes = this.notes,\n      numNotes = this.numNotes,\n      types = '',\n      next, hasNext, reset, setTypes;\n\n    hasNext = function (t) {\n      types = t || types;\n      hasNextCalled = true;\n      index++;\n      if (index === this.numNotes) {\n        return false;\n      }\n\n      newNote = false;\n\n      for (; index < numNotes; index++) {\n        nextNote = notes[index];\n        //console.log(nextNote);\n\n        if (nextNote.ticks >= endTicks) {\n          //console.log('skip',nextNote.ticks);\n          break;\n        }\n\n        if (editor.paginate) {\n          // show note that has started on previous page\n          if (nextNote.ticks < startTicks && nextNote.noteOff.ticks > startTicks) {\n            newNote = true;\n          } else if (nextNote.ticks < endTicks) {\n            newNote = true;\n          }\n          if (newNote) {\n            break;\n          }\n        } else {\n          newNote = nextNote.ticks <= endTicks;\n          //console.log(newNote, nextNote.ticks, nextNote.noteOff.ticks, startTicks, endTicks);\n          if (newNote) {\n            break;\n          }\n        }\n\n        //console.log(types.indexOf(nextEvent.type) !== -1,types,nextEvent.type,nextEvent.ticks,endTicks);\n      }\n      //console.log(index,nextEvent.ticks,endTicks,newEvent);\n      return newNote;\n    };\n\n    next = function (t) {\n      types = t || types;\n      if (!hasNextCalled) {\n        hasNext(types);\n      }\n      hasNextCalled = false;\n      //return nextEvent;\n      nextNote.bbox = editor.getNoteRect(nextNote);\n      return nextNote;\n    };\n\n    reset = function () {\n      var note;\n      startTicks = editor.startTicks;\n      endTicks = editor.endTicks;\n      notes = song.notes;\n      numNotes = song.numNotes;\n      //console.log(startTicks, endTicks);\n      hasNextCalled = false;\n      if (editor.paginate === true && sequencer.isPlaying() === true) {\n        return;\n      }\n\n      for (index = 0; index < numNotes; index++) {\n        note = notes[index];\n        //console.log(note, note.ticks, startTicks);\n        if (note.ticks >= startTicks) {\n          break;\n        }\n      }\n      index--;\n    };\n\n    return {\n      next: next,\n      reset: reset,\n      hasNext: hasNext\n    };\n  };\n\n\n  Factory.prototype.createPartIterator = function () {\n    var index,\n      max,\n      part,\n      data = {},\n      editor = this.editor,\n      song = this.song,\n      parts = this.parts,\n      next, hasNext, reset;\n\n    next = function (type) {\n      part = parts[index++];\n      part.bbox = editor.getPartRect(part);\n      return part;\n    };\n\n    hasNext = function (type) {\n      return index < max;\n    };\n\n    reset = function () {\n      parts = song.parts;\n      max = song.numParts;\n      index = 0;\n    };\n\n    return {\n      next: next,\n      reset: reset,\n      hasNext: hasNext\n    };\n  };\n\n\n  sequencer.protectedScope.createKeyEditorIteratorFactory = function (song, editor) {\n    return new Factory(song, editor);\n  };\n\n\n  sequencer.protectedScope.addInitMethod(function () {\n    createNote = sequencer.createNote;\n    createPlayhead = sequencer.protectedScope.createPlayhead;\n  });\n\n}function metronome() {\n\n  'use strict';\n\n  var\n    //import\n    context, //defined in open_module.js\n    findItem, //defined in asset_manager.js\n    getPosition, //defined in position.js\n    objectForEach, //defined in util.js\n    createMidiNote, //defined in midi_note.js\n    parseEvents, //defined in parse_events.js\n    parseMetronomeEvents, //defined in song_update.js\n\n    methodMap = {\n      volume: 'setVolume',\n      instrument: 'setInstrument',\n      noteNumberAccentedTick: 'setNoteNumberAccentedTick',\n      noteNumberNonAccentedTick: 'setNoteNumberNonAccentedTick',\n      velocityAccentedTick: 'setVelocityAccentedTick',\n      velocityNonAccentedTick: 'setVelocityNonAccentedTick',\n      noteLengthAccentedTick: 'setNoteLengthAccentedTick',\n      noteLengthNonAccentedTick: 'setNoteLengthNonAccentedTick'\n    },\n\n    Metronome;\n\n\n  function checkNumber(value) {\n    //console.log(value);\n    if (isNaN(value)) {\n      if (sequencer.debug) {\n        console.log('please provide a number');\n      }\n      return false;\n    }\n    if (value < 0 || value > 127) {\n      if (sequencer.debug) {\n        console.log('please provide a number between 0 and 127');\n      }\n      return false;\n    }\n    return value;\n  }\n\n\n  Metronome = function (song) {\n    this.song = song;\n    this.track = sequencer.createTrack(this.song.id + '_metronome', 'metronome');\n    this.part = sequencer.createPart();\n    this.track.addPart(this.part);\n    this.track.connect(this.song.gainNode);\n    this.events = [];\n    this.precountEvents = [];\n    this.noteNumberAccented = 61;\n    this.noteNumberNonAccented = 60;\n    this.volume = 1;\n    this.velocityNonAccented = 100;\n    this.velocityAccented = 100;\n    this.noteLengthNonAccented = song.ppq / 4; // sixteenth notes -> don't make this too short if your sample has a long attack!\n    this.noteLengthAccented = song.ppq / 4;\n    this.track.setInstrument('heartbeat/metronome');\n    this.precountDurationInMillis = 0;\n    this.bars = 0;\n    //this.reset();\n  };\n\n\n  function createEvents(metronome, startBar, endBar, id) {\n\n    var i, j,\n      data,\n      velocity,\n      noteLength,\n      noteNumber,\n      beatsPerBar,\n      ticksPerBeat,\n      ticks = 0,\n      events = [],\n      song = metronome.song,\n      noteOn, noteOff, note;\n\n    //console.log(startBar, endBar);\n\n    for (i = startBar; i <= endBar; i++) {\n      data = getPosition(song, ['barsbeats', i]);\n      beatsPerBar = data.nominator;\n      ticksPerBeat = data.ticksPerBeat;\n\n      for (j = 0; j < beatsPerBar; j++) {\n        noteNumber = j === 0 ? metronome.noteNumberAccented : metronome.noteNumberNonAccented;\n        noteLength = j === 0 ? metronome.noteLengthAccented : metronome.noteLengthNonAccented;\n        velocity = j === 0 ? metronome.velocityAccented : metronome.velocityNonAccented;\n\n        noteOn = sequencer.createMidiEvent(ticks, 144, noteNumber, velocity);\n        noteOff = sequencer.createMidiEvent(ticks + noteLength, 128, noteNumber, 0);\n\n        if (id === 'precount') {\n          noteOn.part = { id: 'precount' };\n          noteOn.track = metronome.track;\n          noteOff.part = { id: 'precount' };\n          noteOff.track = metronome.track;\n        }\n\n        note = createMidiNote(noteOn, noteOff);\n        events.push(noteOn, noteOff);\n\n        ticks += ticksPerBeat;\n      }\n    }\n\n    return events;\n  }\n\n\n  Metronome.prototype.init = function (id, startBar, endBar) {\n    id = id === undefined ? 'init' : id;\n    //console.log('metronome', id, this.song.bars, startBar, endBar);\n    if (this.part.numEvents > 0) {\n      this.part.removeEvents(this.part.events);\n    }\n    this.events = createEvents(this, startBar, endBar, id);\n    this.numEvents = this.events.length;\n    this.part.addEvents(this.events);\n    this.bars = this.song.bars;\n    parseMetronomeEvents(this.song, this.events);\n  };\n\n\n  Metronome.prototype.update = function (startBar, endBar) {\n    //console.time('metronome update')\n    if (startBar === 0) {\n      startBar = 1;\n    }\n    //console.log('metronome', this.song.bars, startBar, endBar);\n    // for now, just re-init the metronome\n    if (startBar !== undefined && endBar !== undefined) {\n      this.init('update', startBar, endBar);\n    } else {\n      this.init('update', 1, this.song.bars);\n    }\n    //console.timeEnd('metronome update')\n\n    //this.allNotesOff();\n    //this.song.scheduler.updateSong();\n\n    // var events = createEvents(this, startBar, endBar, 'update');\n    // this.events = this.events.concat(events);\n    // parseMetronomeEvents(this.song, this.events);\n  };\n\n\n  Metronome.prototype.updateConfig = function () {\n    this.init('configure', 1, this.bars);\n    this.allNotesOff();\n    this.song.scheduler.updateSong();\n  };\n\n\n  Metronome.prototype.configure = function (config) {\n    var me = this;\n\n    objectForEach(config, function (value, key) {\n      me[methodMap[key]](value);\n      //console.log(key, me[methodMap[key]]);\n    });\n    this.updateConfig();\n  };\n\n\n  Metronome.prototype.setInstrument = function (instrument) {\n    if (instrument.className !== 'Instrument') {\n      instrument = sequencer.createInstrument(instrument);\n    }\n    if (instrument !== false) {\n      this.track.setInstrument(instrument);\n    } else {\n      this.track.setInstrument('heartbeat/metronome');\n    }\n    this.updateConfig();\n  };\n\n\n  Metronome.prototype.setNoteLengthAccentedTick = function (value) {\n    if (isNaN(value)) {\n      if (sequencer.debug >= 2) {\n        console.warn('please provide a number');\n      }\n    }\n    this.noteLengthAccented = value;\n    this.updateConfig();\n  };\n\n\n  Metronome.prototype.setNoteLengthNonAccentedTick = function (value) {\n    if (isNaN(value)) {\n      if (sequencer.debug >= 2) {\n        console.warn('please provide a number');\n      }\n    }\n    this.noteLengthNonAccented = value;\n    this.updateConfig();\n  };\n\n\n  Metronome.prototype.setVelocityAccentedTick = function (value) {\n    value = checkNumber(value);\n    if (value !== false) {\n      this.velocityAccented = value;\n    } else if (sequencer.debug >= 2) {\n      console.warn('please provide a number');\n    }\n    this.updateConfig();\n  };\n\n\n  Metronome.prototype.setVelocityNonAccentedTick = function (value) {\n    value = checkNumber(value);\n    if (value !== false) {\n      this.velocityNonAccented = value;\n    } else if (sequencer.debug >= 2) {\n      console.warn('please provide a number');\n    }\n    this.updateConfig();\n  };\n\n\n  Metronome.prototype.setNoteNumberAccentedTick = function (value) {\n    value = checkNumber(value);\n    if (value !== false) {\n      this.noteNumberAccented = value;\n    } else if (sequencer.debug >= 2) {\n      console.warn('please provide a number');\n    }\n    this.updateConfig();\n  };\n\n\n  Metronome.prototype.setNoteNumberNonAccentedTick = function (value) {\n    value = checkNumber(value);\n    if (value !== false) {\n      this.noteNumberNonAccented = value;\n    } else if (sequencer.debug >= 2) {\n      console.warn('please provide a number');\n    }\n    this.updateConfig();\n  };\n\n\n  Metronome.prototype.reset = function () {\n    this.volume = 1;\n    this.track.setInstrument('heartbeat/metronome');\n\n    this.noteNumberAccented = 61;\n    this.noteNumberNonAccented = 60;\n\n    this.velocityAccented = 100;\n    this.velocityNonAccented = 100;\n\n    this.noteLengthAccented = this.song.ppq / 4;\n    this.noteLengthNonAccented = this.song.ppq / 4;\n  };\n\n\n  Metronome.prototype.allNotesOff = function () {\n    if (this.track.instrument) {\n      this.track.instrument.allNotesOff();\n    }\n  };\n\n\n  Metronome.prototype.createPrecountEvents = function (precount) {\n    if (precount <= 0) {\n      return;\n    }\n    var endPos = this.song.getPosition('barsbeats', this.song.bar + precount);\n\n    this.index = 0;\n    this.millis = 0;\n    this.startMillis = this.song.millis;\n    this.precountDurationInMillis = endPos.millis - this.startMillis;\n    this.precountEvents = createEvents(this, this.song.bar, endPos.bar - 1, 'precount');\n    parseEvents(this.song, this.precountEvents);\n    //console.log(this.song.bar, endPos.bar, precount, this.precountEvents.length);\n    //console.log(this.precountEvents, this.precountDurationInMillis, startTicks, endTicks);\n  };\n\n\n  // called by scheduler.js\n  Metronome.prototype.getPrecountEvents = function (maxtime) {\n    var events = this.precountEvents,\n      maxi = events.length, i, event,\n      result = [];\n\n    //console.log(maxtime, maxi, this.index, this.millis);\n\n    for (i = this.index; i < maxi; i++) {\n      event = events[i];\n      //console.log(event.millis, maxtime, this.millis);\n      if (event.millis < maxtime) {\n        event.time = this.startTime + event.millis;\n        result.push(event);\n        this.index++;\n      } else {\n        break;\n      }\n    }\n    return result;\n  };\n\n\n  Metronome.prototype.setVolume = function (value) {\n    this.track.setVolume(value);\n  };\n\n\n  sequencer.protectedScope.createMetronome = function (song) {\n    return new Metronome(song);\n  };\n\n  sequencer.protectedScope.addInitMethod(function initMetronome() {\n    context = sequencer.protectedScope.context;\n    findItem = sequencer.protectedScope.findItem;\n    getPosition = sequencer.protectedScope.getPosition;\n    createMidiNote = sequencer.createMidiNote;\n    objectForEach = sequencer.util.objectForEach;\n    parseEvents = sequencer.protectedScope.parseEvents;\n    parseMetronomeEvents = sequencer.protectedScope.parseMetronomeEvents;\n  });\n}function midiEvent() {\r\n\r\n    /*\r\n        @public\r\n        @class MidiEvent\r\n        @param time {int} the time that the event is scheduled\r\n        @param type {int} type of MidiEvent, e.g. NOTE_ON, NOTE_OFF or, 144, 128, etc.\r\n        @param data1 {int} if type is 144 or 128: note number\r\n        @param [data2] {int} if type is 144 or 128: velocity\r\n\r\n\r\n        @example\r\n        // plays the central c at velocity 100\r\n        var event = sequencer.createMidiEvent(120, sequencer.NOTE_ON, 60, 100);\r\n\r\n        // pass arguments as array\r\n        var event = sequencer.createMidiEvent([120, sequencer.NOTE_ON, 60, 100]);\r\n\r\n        // if you pass a MidiEvent instance a copy/clone will be returned\r\n        var copy = sequencer.createMidiEvent(event);\r\n    */\r\n\r\n\r\n    'use strict';\r\n\r\n    var\r\n        slice = Array.prototype.slice,\r\n\r\n        //import\r\n        createNote, // → defined in note.js\r\n        typeString, // → defined in utils.js\r\n\r\n        MidiEvent,\r\n        midiEventId = 0;\r\n\r\n\r\n    /*\r\n       arguments:\r\n       - [ticks, type, data1, data2]\r\n       - ticks, type, data1, data2\r\n\r\n       data1 and data2 are optional but must be numbers if provided\r\n    */\r\n    MidiEvent = function (args) {\r\n        var data, note;\r\n\r\n        this.className = 'MidiEvent';\r\n        this.id = 'M' + midiEventId + new Date().getTime();\r\n        this.eventNumber = midiEventId;\r\n        this.channel = 'any';\r\n        this.time = 0;\r\n        //this.offset = 0;\r\n        //console.log(midiEventId, this.type, this.id);\r\n        this.muted = false;\r\n        //console.log(midiEventId, this.type);\r\n        midiEventId++;\r\n\r\n        if (!args) {\r\n            // bypass for cloning\r\n            return;\r\n        }\r\n\r\n        //console.log('create', args);\r\n\r\n        if (typeString(args[0]) === 'midimessageevent') {\r\n            console.log('midimessageevent');\r\n            return;\r\n            //data = [0].concat(args[0].data);\r\n        } else if (typeString(args[0]) === 'array') {\r\n            data = args[0];\r\n        } else if (typeString(args[0]) === 'number' && typeString(args[1]) === 'number') {\r\n            data = [args[0], args[1]];\r\n            if (args.length >= 3 && typeString(args[2]) === 'number') {\r\n                data.push(args[2]);\r\n            }\r\n            if (args.length === 4 && typeString(args[3]) === 'number') {\r\n                data.push(args[3]);\r\n            }\r\n            if (args.length === 5 && typeString(args[4]) === 'number') {\r\n                data.push(args[4]);//channel\r\n            }\r\n        } else {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('wrong number of arguments, please consult documentation');\r\n            }\r\n            return false;\r\n        }\r\n        //console.log(data);\r\n\r\n        this.ticks = data[0];\r\n        this.status = data[1];\r\n        this.type = (this.status >> 4) * 16;\r\n        //console.log(this.type, this.status);\r\n        if (this.type >= 0x80) {\r\n            //the higher 4 bits of the status byte is the command\r\n            this.command = this.type;\r\n            //the lower 4 bits of the status byte is the channel number\r\n            this.channel = (this.status & 0xF) + 1; // from zero-based to 1-based\r\n        } else {\r\n            this.type = this.status;\r\n            this.channel = data[4] || 'any';\r\n        }\r\n\r\n        //this.sortIndex = parseInt(this.type, 10) + parseInt(this.ticks, 10); // note off events come before note on events\r\n        this.sortIndex = this.type + this.ticks; // note off events come before note on events\r\n        //console.log(this.sortIndex);\r\n\r\n        //console.log(this.status, this.type, this.channel);\r\n\r\n        switch (this.type) {\r\n            case 0x0:\r\n                break;\r\n            case 0x80:\r\n                this.data1 = data[2];\r\n                note = createNote(this.data1);\r\n                this.note = note;\r\n                this.noteName = note.fullName;\r\n                this.noteNumber = note.number;\r\n                this.octave = note.octave;\r\n                this.frequency = note.frequency;\r\n                this.data2 = 0;//data[3];\r\n                this.velocity = this.data2;\r\n                break;\r\n            case 0x90:\r\n                this.data1 = data[2];//note number\r\n                this.data2 = data[3];//velocity\r\n                if (this.data2 === 0) {\r\n                    //if velocity is 0, this is a NOTE OFF event\r\n                    this.type = 0x80;\r\n                }\r\n                note = createNote(this.data1);\r\n                this.note = note;\r\n                this.noteName = note.fullName;\r\n                this.noteNumber = note.number;\r\n                this.octave = note.octave;\r\n                this.frequency = note.frequency;\r\n                this.velocity = this.data2;\r\n                //console.log(data[2], this.note);\r\n                break;\r\n            case 0x51:\r\n                this.bpm = data[2];\r\n                break;\r\n            case 0x58:\r\n                this.nominator = data[2];\r\n                this.denominator = data[3];\r\n                break;\r\n            case 0xB0:// control change\r\n                this.data1 = data[2];\r\n                this.data2 = data[3];\r\n                this.controllerType = data[2];\r\n                this.controllerValue = data[3];\r\n                break;\r\n            case 0xC0:// program change\r\n                this.data1 = data[2];\r\n                this.programNumber = data[2];\r\n                break;\r\n            case 0xD0:// channel pressure\r\n                this.data1 = data[2];\r\n                this.data2 = data[3];\r\n                break;\r\n            case 0xE0:// pitch bend\r\n                this.data1 = data[2];\r\n                this.data2 = data[3];\r\n                //console.log('pitch bend');\r\n                break;\r\n            case 0x2F:\r\n                break;\r\n            default:\r\n                console.warn('not a recognized type of midi event!');\r\n        }\r\n    };\r\n\r\n    /**\r\n        Creates a copy of the MidiEvent\r\n        @memberof MidiEvent\r\n        @function clone\r\n        @instance\r\n    */\r\n    MidiEvent.prototype.clone = MidiEvent.prototype.copy = function () {\r\n        var event = new MidiEvent(),\r\n            property;\r\n\r\n        for (property in this) {\r\n            if (this.hasOwnProperty(property)) {\r\n                //console.log(property);\r\n                if (property !== 'id' && property !== 'eventNumber' && property !== 'midiNote') {\r\n                    event[property] = this[property];\r\n                }\r\n                event.song = undefined;\r\n                event.track = undefined;\r\n                event.trackId = undefined;\r\n                event.part = undefined;\r\n                event.partId = undefined;\r\n            }\r\n        }\r\n        return event;\r\n    };\r\n\r\n\r\n    /**\r\n    *  Transposes the MidiEvent by the provided number of semitones\r\n    *  @param {int} semi\r\n    */\r\n    MidiEvent.prototype.transpose = function (semi) {\r\n        if (this.type !== 0x80 && this.type !== 0x90) {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('you can only transpose note on and note off events');\r\n            }\r\n            return;\r\n        }\r\n\r\n        //console.log('transpose', semi);\r\n        if (typeString(semi) === 'array') {\r\n            var type = semi[0];\r\n            if (type === 'hertz') {\r\n                //convert hertz to semi\r\n            } else if (type === 'semi' || type === 'semitone') {\r\n                semi = semi[1];\r\n            }\r\n        } else if (isNaN(semi) === true) {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('please provide a number');\r\n            }\r\n            return;\r\n        }\r\n\r\n        var tmp = this.data1 + parseInt(semi, 10);\r\n        if (tmp < 0) {\r\n            tmp = 0;\r\n        } else if (tmp > 127) {\r\n            tmp = 127;\r\n        }\r\n        this.data1 = tmp;\r\n        var note = createNote(this.data1);\r\n        this.note = note;\r\n        this.noteName = note.fullName;\r\n        this.noteNumber = note.number;\r\n        this.octave = note.octave;\r\n        this.frequency = note.frequency;\r\n\r\n        if (this.midiNote !== undefined) {\r\n            this.midiNote.pitch = this.data1;\r\n        }\r\n\r\n        if (this.state !== 'new') {\r\n            this.state = 'changed';\r\n        }\r\n        if (this.part !== undefined) {\r\n            this.part.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    MidiEvent.prototype.setPitch = function (pitch) {\r\n        if (this.type !== 0x80 && this.type !== 0x90) {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('you can only set the pitch of note on and note off events');\r\n            }\r\n            return;\r\n        }\r\n        if (typeString(pitch) === 'array') {\r\n            var type = pitch[0];\r\n            if (type === 'hertz') {\r\n                //convert hertz to pitch\r\n            } else if (type === 'semi' || type === 'semitone') {\r\n                pitch = pitch[1];\r\n            }\r\n        } else if (isNaN(pitch) === true) {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('please provide a number');\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.data1 = parseInt(pitch, 10);\r\n        var note = createNote(this.data1);\r\n        this.note = note;\r\n        this.noteName = note.fullName;\r\n        this.noteNumber = note.number;\r\n        this.octave = note.octave;\r\n        this.frequency = note.frequency;\r\n\r\n        if (this.midiNote !== undefined) {\r\n            this.midiNote.pitch = this.data1;\r\n        }\r\n        if (this.state !== 'new') {\r\n            this.state = 'changed';\r\n        }\r\n        if (this.part !== undefined) {\r\n            this.part.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    MidiEvent.prototype.move = function (ticks) {\r\n        if (isNaN(ticks)) {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('please provide a number');\r\n            }\r\n            return;\r\n        }\r\n        this.ticks += parseInt(ticks, 10);\r\n        if (this.state !== 'new') {\r\n            this.state = 'changed';\r\n        }\r\n        if (this.part !== undefined) {\r\n            this.part.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    MidiEvent.prototype.moveTo = function () {\r\n        var position = slice.call(arguments);\r\n        //console.log(position);\r\n\r\n        if (position[0] === 'ticks' && isNaN(position[1]) === false) {\r\n            this.ticks = parseInt(position[1], 10);\r\n        } else if (this.song === undefined) {\r\n            if (sequencer.debug >= 1) {\r\n                console.error('The midi event has not been added to a song yet; you can only move to ticks values');\r\n            }\r\n        } else {\r\n            position = this.song.getPosition(position);\r\n            if (position === false) {\r\n                if (sequencer.debug >= 1) {\r\n                    console.error('wrong position data');\r\n                }\r\n            } else {\r\n                this.ticks = position.ticks;\r\n            }\r\n        }\r\n\r\n        if (this.state !== 'new') {\r\n            this.state = 'changed';\r\n        }\r\n        if (this.part !== undefined) {\r\n            this.part.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    MidiEvent.prototype.reset = function (fromPart, fromTrack, fromSong) {\r\n\r\n        fromPart = fromPart === undefined ? true : false;\r\n        fromTrack = fromTrack === undefined ? true : false;\r\n        fromSong = fromSong === undefined ? true : false;\r\n\r\n        if (fromPart) {\r\n            this.part = undefined;\r\n            this.partId = undefined;\r\n        }\r\n        if (fromTrack) {\r\n            this.track = undefined;\r\n            this.trackId = undefined;\r\n            this.channel = 0;\r\n        }\r\n        if (fromSong) {\r\n            this.song = undefined;\r\n        }\r\n    };\r\n\r\n\r\n    // implemented because of the common interface of midi and audio events\r\n    MidiEvent.prototype.update = function () {\r\n    };\r\n\r\n\r\n    /**@exports sequencer*/\r\n    sequencer.createMidiEvent = function () {\r\n        /**\r\n            @function createMidiEvent\r\n            @param time {int}\r\n            @param type {int}\r\n            @param data1 {int}\r\n            @param data2 {int}\r\n        */\r\n        var args = slice.call(arguments),\r\n            className = args[0].className;\r\n\r\n        if (className === 'MidiEvent') {\r\n            return args[0].copy();\r\n        }\r\n        return new MidiEvent(args);\r\n    };\r\n\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n        createNote = sequencer.createNote;\r\n        typeString = sequencer.protectedScope.typeString;\r\n    });\r\n\r\n}function midiEventNames() {\r\n\r\n    /**\r\n        @public\r\n    */\r\n    'use strict';\r\n\r\n    /**\r\n        @var\r\n    */\r\n    var\r\n        lowerCaseToNumber = {\r\n            'note off': 0x80,\r\n            'note on': 0x90,\r\n            'poly pressure': 0xA0,\r\n            'control change': 0xB0,\r\n            'program change': 0xC0,\r\n            'channel pressure': 0xD0,\r\n            'pitch bend': 0xE0,\r\n            'tempo': 0x51,\r\n            'time signature': 0x58,\r\n            'end of track': 0x2F\r\n        },\r\n\r\n        upperCaseToNumber = {\r\n            'NOTE_OFF': 0x80,\r\n            'NOTE_ON': 0x90,\r\n            'POLY_PRESSURE': 0xA0,\r\n            'CONTROL_CHANGE': 0xB0,\r\n            'PROGRAM_CHANGE': 0xC0,\r\n            'CHANNEL_PRESSURE': 0xD0,\r\n            'PITCH_BEND': 0xE0,\r\n            'TEMPO': 0x51,\r\n            'TIME_SIGNATURE': 0x58,\r\n            'END_OF_TRACK': 0x2F\r\n        },\r\n\r\n        numberToLowerCase = {\r\n            0x80: 'note off',\r\n            0x90: 'note on',\r\n            0xA0: 'poly pressure',\r\n            0xB0: 'control change',\r\n            0xC0: 'program change',\r\n            0xD0: 'channel pressure',\r\n            0xE0: 'pitch bend',\r\n            0x51: 'tempo',\r\n            0x58: 'time signature',\r\n            0x2F: 'end of track'\r\n        },\r\n\r\n        numberToUpperCase = {\r\n            0x80: 'NOTE_OFF',\r\n            0x90: 'NOTE_ON',\r\n            0xA0: 'POLY_PRESSURE',\r\n            0xB0: 'CONTROL_CHANGE',\r\n            0xC0: 'PROGRAM_CHANGE',\r\n            0xD0: 'CHANNEL_PRESSURE',\r\n            0xE0: 'PITCH_BEND',\r\n            0x51: 'TEMPO',\r\n            0x58: 'TIME_SIGNATURE',\r\n            0x2F: 'END_OF_TRACK'\r\n        };\r\n\r\n\r\n    function numberByName(name) {\r\n        var no = false\r\n\r\n        name = name.replace(/_/g, ' ');\r\n        no = lowerCaseToNumber[name] || false;\r\n\r\n        if (no !== false) {\r\n            return no;\r\n        }\r\n\r\n        // try upper\r\n        name = name.replace(/\\s/g, '_');\r\n        no = upperCaseToNumber[name] || false;\r\n\r\n        if (no === false && sequencer.debug === true) {\r\n            console.warn(name, 'is not a valid (or supported) midi event name, please consult documentation');\r\n        }\r\n        return no;\r\n    }\r\n\r\n\r\n    function nameByNumber(no, upperOrLower) {\r\n        var name = false;\r\n        upperOrLower = upperOrLower || 'upper'; // return uppercase names by default\r\n        //upperOrLower = upperOrLower || no.indexOf('_') !== -1 ? 'upper' : 'lower';\r\n\r\n        if (upperOrLower === 'lower') {\r\n            name = numberToLowerCase[no] || false;\r\n            if (name === false && sequencer.debug === true) {\r\n                console.warn(no, 'is not a valid (or supported) midi event number, please consult documentation');\r\n            }\r\n            return name;\r\n        }\r\n\r\n        name = numberToUpperCase[no] || false;\r\n        if (name === false && sequencer.debug === true) {\r\n            console.warn(no, 'is not a valid (or supported) midi event number, please consult documentation');\r\n        }\r\n        return name;\r\n    }\r\n\r\n\r\n    function checkEventType(type) {\r\n        if (isNaN(type)) {\r\n            return numberByName(type);\r\n        }\r\n        return nameByNumber(type);\r\n    }\r\n\r\n\r\n    //heartbeat\r\n    /**\r\n        @memberof sequencer\r\n        @instance\r\n    */\r\n    Object.defineProperty(sequencer, 'DUMMY_EVENT', { value: 0x0 }); //0\r\n    Object.defineProperty(sequencer, 'MIDI_NOTE', { value: 0x70 }); //112\r\n    //standard MIDI\r\n    Object.defineProperty(sequencer, 'NOTE_OFF', { value: 0x80 }); //128\r\n    Object.defineProperty(sequencer, 'NOTE_ON', { value: 0x90 }); //144\r\n    Object.defineProperty(sequencer, 'POLY_PRESSURE', { value: 0xA0 }); //160\r\n    Object.defineProperty(sequencer, 'CONTROL_CHANGE', { value: 0xB0 }); //176\r\n    Object.defineProperty(sequencer, 'PROGRAM_CHANGE', { value: 0xC0 }); //192\r\n    Object.defineProperty(sequencer, 'CHANNEL_PRESSURE', { value: 0xD0 }); //208\r\n    Object.defineProperty(sequencer, 'PITCH_BEND', { value: 0xE0 }); //224\r\n    Object.defineProperty(sequencer, 'SYSTEM_EXCLUSIVE', { value: 0xF0 }); //240\r\n    Object.defineProperty(sequencer, 'MIDI_TIMECODE', { value: 241 });\r\n    Object.defineProperty(sequencer, 'SONG_POSITION', { value: 242 });\r\n    Object.defineProperty(sequencer, 'SONG_SELECT', { value: 243 });\r\n    Object.defineProperty(sequencer, 'TUNE_REQUEST', { value: 246 });\r\n    Object.defineProperty(sequencer, 'EOX', { value: 247 });\r\n    Object.defineProperty(sequencer, 'TIMING_CLOCK', { value: 248 });\r\n    Object.defineProperty(sequencer, 'START', { value: 250 });\r\n    Object.defineProperty(sequencer, 'CONTINUE', { value: 251 });\r\n    Object.defineProperty(sequencer, 'STOP', { value: 252 });\r\n    Object.defineProperty(sequencer, 'ACTIVE_SENSING', { value: 254 });\r\n    Object.defineProperty(sequencer, 'SYSTEM_RESET', { value: 255 });\r\n\r\n    Object.defineProperty(sequencer, 'TEMPO', { value: 0x51 });\r\n    Object.defineProperty(sequencer, 'TIME_SIGNATURE', { value: 0x58 });\r\n    Object.defineProperty(sequencer, 'END_OF_TRACK', { value: 0x2F });\r\n\r\n    // public\r\n    /**\r\n        @memberof sequencer\r\n        @instance\r\n        @function checkEventType\r\n    */\r\n    sequencer.checkEventType = checkEventType;\r\n    sequencer.midiEventNameByNumber = nameByNumber;\r\n    sequencer.midiEventNumberByName = numberByName;\r\n\r\n}/*\n    parse method is based on: https://github.com/gasman/jasmid\n    adapted to work with heartbeatjs' type MidiEvent and Track\n*/\n\nfunction midiFile() {\n\n  'use strict';\n\n  var\n    // import\n    parseUrl, // defined in util.js\n    base64ToBinary, // defined in util.js\n    typeString, // defined in util.js\n    ajax, // defined in util.js\n    findItem, // defined in util.js\n    storeItem, // defined in util.js\n    deleteItem, // defined in util.js\n    parseMidiFile, // defined in midi_parse.js\n    createTrack, // defined in track.js\n    createPart, // defined in part.js\n    createMidiEvent, // defined in midi_event.js\n\n    index = 0,\n    MidiFile;\n\n\n  function cleanup(midifile, callback) {\n    midifile = undefined;\n    if (callback) {\n      callback(false);\n    }\n  }\n\n\n  function parse(midifile, buffer, callback) {\n    //console.time('parse midi');\n    var data, i, j, numEvents, part, track, numTracks,\n      events, event, ticks, tmpTicks, channel,\n      parsed, timeEvents, noteNumber, bpm,\n      lastNoteOn, lastNoteOff, ppqFactor,\n      type, lastType, lastData1, lastData2,\n      numNoteOn, numNoteOff, numOther, noteOns, noteOffs;\n\n    // buffer is ArrayBuffer, so convert it\n    buffer = new Uint8Array(buffer);\n    data = parseMidiFile(buffer);\n    //console.log(data);\n    //console.log(data.header.ticksPerBeat);\n\n    // save some memory\n    midifile.base64 = '';\n    midifile.numTracks = 0;\n\n    i = 0;\n    numTracks = data.tracks.length;\n    if (sequencer.overrulePPQ === true && isNaN(sequencer.defaultPPQ) === false && sequencer.defaultPPQ > 0) {\n      ppqFactor = sequencer.defaultPPQ / data.header.ticksPerBeat;\n      midifile.ppq = sequencer.defaultPPQ;\n    } else {\n      ppqFactor = 1;\n      midifile.ppq = data.header.ticksPerBeat;\n    }\n    timeEvents = [];\n    midifile.tracks = [];\n    //console.log(ppqFactor, midifile.ppq, sequencer.overrulePPQ, sequencer.defaultPPQ);\n\n    while (i < numTracks) {\n      events = data.tracks[i];\n      numEvents = events.length;\n      ticks = 0;\n      tmpTicks = 0;\n      channel = -1;\n      part = createPart();\n      track = createTrack();\n      parsed = [];\n      j = 0;\n      numNoteOn = 0;\n      numNoteOff = 0;\n      numOther = 0;\n      noteOns = {};\n      noteOffs = {};\n\n      for (j = 0; j < numEvents; j++) {\n\n        event = events[j];\n\n        tmpTicks += (event.deltaTime * ppqFactor);\n        //console.log(event.subtype, event.deltaTime, tmpTicks);\n\n        if (channel === -1 && event.channel !== undefined) {\n          channel = event.channel;\n          track.channel = channel;\n        }\n\n        type = event.subtype;\n\n        if (type === 'noteOn') {\n          numNoteOn++;\n        } else if (type === 'noteOff') {\n          numNoteOff++;\n        } else {\n          numOther++;\n        }\n\n        switch (event.subtype) {\n\n          case 'trackName':\n            track.name = event.text;\n            //console.log('name', track.name, numTracks);\n            break;\n\n          case 'instrumentName':\n            if (event.text) {\n              track.instrumentName = event.text;\n            }\n            break;\n\n          case 'noteOn':\n            //track.isUseful = true;\n            /*\n            noteNumber = event.noteNumber;\n            if(tmpTicks === ticks && lastType === type && noteNumber === lastNoteOn){\n                if(sequencer.debug >= 3){\n                    console.info('note on events on the same tick', j, tmpTicks, noteNumber, lastNoteOn, numTracks, parsed.length);\n                }\n                //parsed.pop();\n            }\n            lastNoteOn = noteNumber;\n            parsed.push(createMidiEvent(tmpTicks, 0x90, noteNumber, event.velocity));\n            */\n            /*\n            noteNumber = event.noteNumber;\n            if(noteOns[noteNumber] === undefined){\n                noteOns[noteNumber] = [];\n            }\n            noteOns[noteNumber].push(event);\n            */\n            parsed.push(createMidiEvent(tmpTicks, 0x90, event.noteNumber, event.velocity));\n            break;\n\n          case 'noteOff':\n            //track.isUseful = true;\n            /*\n            noteNumber = event.noteNumber;\n            if(tmpTicks === ticks && lastType === type && noteNumber === lastNoteOff){\n                if(sequencer.debug >= 3){\n                    console.info('note off events on the same tick', j, tmpTicks, noteNumber, lastNoteOff, numTracks, parsed.length);\n                }\n                //parsed.pop();\n            }\n            lastNoteOff = noteNumber;\n            parsed.push(createMidiEvent(tmpTicks, 0x80, noteNumber, event.velocity));\n            */\n            /*\n            noteNumber = event.noteNumber;\n            if(noteOffs[noteNumber] === undefined){\n                noteOffs[noteNumber] = [];\n            }\n            noteOns[noteNumber].push(event);\n            */\n            parsed.push(createMidiEvent(tmpTicks, 0x80, event.noteNumber, event.velocity));\n            break;\n\n          case 'endOfTrack':\n            //console.log(track.name, '0x2F', tmpTicks);\n            //parsed.push(createMidiEvent(tmpTicks,0x2F));\n            break;\n\n          case 'setTempo':\n            //sometimes 2 tempo events have the same position in ticks\n            //→ we use the last in these cases (same as Cubase)\n\n            bpm = 60000000 / event.microsecondsPerBeat;\n            //console.log('setTempo',bpm,event.microsecondsPerBeat);\n\n            if (tmpTicks === ticks && lastType === type) {\n              if (sequencer.debug >= 3) {\n                console.info('tempo events on the same tick', j, tmpTicks, bpm);\n              }\n              timeEvents.pop();\n            }\n\n            if (midifile.bpm === undefined) {\n              midifile.bpm = bpm;\n              // }else{\n              //     timeEvents.push(createMidiEvent(tmpTicks, 0x51, bpm));\n            }\n            timeEvents.push(createMidiEvent(tmpTicks, 0x51, bpm));\n            break;\n\n          case 'timeSignature':\n            //see comment above ↑\n            if (tmpTicks === ticks && lastType === type) {\n              if (sequencer.debug >= 3) {\n                console.info('time signature events on the same tick', j, tmpTicks, event.numerator, event.denominator);\n              }\n              timeEvents.pop();\n            }\n\n            if (midifile.nominator === undefined) {\n              midifile.nominator = event.numerator;\n              midifile.denominator = event.denominator;\n              // }else{\n              //     //console.log('timeSignature', event.numerator, event.denominator, event.metronome, event.thirtyseconds);\n              //     timeEvents.push(createMidiEvent(tmpTicks, 0x58, event.numerator, event.denominator));\n            }\n            timeEvents.push(createMidiEvent(tmpTicks, 0x58, event.numerator, event.denominator));\n            break;\n\n\n          case 'controller':\n            //track.isUseful = true;\n            /*\n            if(\n                tmpTicks === ticks &&\n                event.controllerType === lastData1 &&\n                event.value === lastData2 &&\n                lastData1 !== undefined &&\n                lastData2 !== undefined\n            ){\n                if(sequencer.debug >= 3){\n                    console.warn('double controller events on the same tick', j, tmpTicks, event.controllerType, event.value);\n                }\n            }else{\n                parsed.push(createMidiEvent(tmpTicks, 0xB0, event.controllerType, event.value));\n            }\n            lastData1 = event.controllerType;\n            lastData2 = event.value;\n            */\n            parsed.push(createMidiEvent(tmpTicks, 0xB0, event.controllerType, event.value));\n            //console.log('controller:', tmpTicks, event.type, event.controllerType, event.value);\n            break;\n\n          case 'programChange':\n            //track.isUseful = true;\n            parsed.push(createMidiEvent(tmpTicks, 0xC0, event.programNumber));\n            //console.log(event.type,event.controllerType);\n            break;\n\n          case 'channelAftertouch':\n            parsed.push(createMidiEvent(tmpTicks, 0xD0, event.amount));\n            break;\n\n          case 'pitchBend':\n            parsed.push(createMidiEvent(tmpTicks, 0xE0, event.value));\n            break;\n\n          default:\n          //console.log(track.name, event.type);\n        }\n        lastType = type;\n        ticks = tmpTicks;\n      }\n\n      //console.log('NOTE ON', numNoteOn, 'NOTE OFF', numNoteOff, 'OTHER', numOther);\n      // console.log('PARSED', parsed);\n      if (parsed.length > 0) {\n        track.addPart(part);\n        part.addEvents(parsed);\n        midifile.tracks.push(track);\n        midifile.numTracks++;\n      }\n      i++;\n    }\n\n    midifile.timeEvents = timeEvents;\n    midifile.autoSize = true;\n    //console.timeEnd('parse midi');\n    midifile.loaded = true;\n    callback(midifile);\n  }\n\n\n  function load(midifile, callback) {\n\n    if (midifile.base64 !== undefined) {\n      parse(midifile, base64ToBinary(midifile.base64), callback);\n      return;\n    } else if (midifile.arraybuffer !== undefined) {\n      parse(midifile, midifile.arraybuffer, callback);\n      return;\n    }\n\n    ajax({\n      url: midifile.url,\n      responseType: midifile.responseType,\n      onError: function () {\n        cleanup(midifile, callback);\n      },\n      onSuccess: function (data) {\n        if (midifile.responseType === 'json') {\n          // if the json data is corrupt (for instance because of a trailing comma) data will be null\n          if (data === null) {\n            callback(false);\n            return;\n          }\n\n          if (data.base64 === undefined) {\n            cleanup(midifile, callback);\n            if (sequencer.debug) {\n              console.warn('no base64 data');\n            }\n            return;\n          }\n\n          if (data.name !== undefined && midifile.name === undefined) {\n            midifile.name = data.name;\n          }\n\n          if (data.folder !== undefined && midifile.folder === undefined) {\n            midifile.folder = data.folder;\n          }\n\n          if (midifile.name === undefined) {\n            midifile.name = parseUrl(midifile.url).name;\n          }\n\n          midifile.localPath = midifile.folder !== undefined ? midifile.folder + '/' + midifile.name : midifile.name;\n          parse(midifile, base64ToBinary(data.base64), callback);\n        } else {\n          if (midifile.name === undefined) {\n            midifile.name = parseUrl(midifile.url).name;\n          }\n          midifile.localPath = midifile.folder !== undefined ? midifile.folder + '/' + midifile.name : midifile.name;\n          parse(midifile, data, callback);\n        }\n      }\n    });\n  }\n\n\n  function store(midifile) {\n    var occupied = findItem(midifile.localPath, sequencer.storage.midi, true),\n      action = midifile.action;\n\n    //console.log(occupied);\n    if (occupied && occupied.className === 'MidiFile' && action !== 'overwrite') {\n      if (sequencer.debug >= 2) {\n        console.warn('there is already a midifile at', midifile.localPath);\n        cleanup(midifile);\n      }\n    } else {\n      storeItem(midifile, midifile.localPath, sequencer.storage.midi);\n    }\n  }\n\n\n  MidiFile = function (config) {\n    this.id = 'MF' + index++ + new Date().getTime();\n    this.className = 'MidiFile';\n\n    this.url = config.url;\n    this.json = config.json;\n    this.base64 = config.base64;\n    this.arraybuffer = config.arraybuffer;\n\n    this.name = config.name;\n    this.folder = config.folder;\n\n    if (this.url !== undefined) {\n      this.responseType = this.url.indexOf('.json') === this.url.lastIndexOf('.') ? 'json' : 'arraybuffer';\n    } else {\n      if (this.name === undefined && this.folder === undefined) {\n        this.name = this.id;\n        this.localPath = this.id;\n      } else {\n        this.localPath = this.folder !== undefined ? this.folder + '/' + this.name : this.name;\n      }\n    }\n  };\n\n\n  sequencer.addMidiFile = function (config, callback) {\n    var type = typeString(config),\n      midifile, json, name, folder;\n\n    if (type !== 'object') {\n      if (sequencer.debug >= 2) {\n        console.warn('can\\'t create a MidiFile with this data', config);\n      }\n      return false;\n    }\n\n    if (config.json) {\n      json = config.json;\n      name = config.name;\n      folder = config.folder;\n      if (typeString(json) === 'string') {\n        try {\n          json = JSON.parse(json);\n        } catch (e) {\n          if (sequencer.debug >= 2) {\n            console.warn('can\\'t create a MidiFile with this data', config);\n          }\n          return false;\n        }\n      }\n      if (json.base64 === undefined) {\n        if (sequencer.debug >= 2) {\n          console.warn('can\\'t create a MidiFile with this data', config);\n        }\n        return false;\n      }\n      config = {\n        base64: json.base64,\n        name: name === undefined ? json.name : name,\n        folder: folder === undefined ? json.folder : folder\n      };\n      //console.log('config', name, folder, json.name, json.folder);\n    }\n\n    midifile = new MidiFile(config);\n\n    sequencer.addTask({\n      type: 'load midifile',\n      method: load,\n      params: midifile\n    }, function () {\n      //console.log(midifile);\n      store(midifile);\n      if (callback) {\n        callback(midifile);\n      }\n    });\n\n    sequencer.startTaskQueue();\n\n\n    /*\n            load(midifile, function(){\n                //console.log(midifile);\n                store(midifile);\n                if(callback){\n                    callback(midifile);\n                }\n            });\n    */\n  };\n\n\n  function MidiFile2(config) {\n    var reader = new FileReader();\n\n    function executor(resolve, reject) {\n\n      reader.addEventListener('loadend', function () {\n        // reader.result contains the contents of blob as a typed array\n        parse({}, reader.result, function (midifile) {\n          resolve(midifile);\n        });\n      });\n\n      reader.addEventListener('error', function (e) {\n        reject(e);\n      });\n\n      if (config.blob !== undefined) {\n        reader.readAsArrayBuffer(config.blob);\n      } else if (config.arraybuffer !== undefined) {\n        parse({}, config.arraybuffer, function (midifile) {\n          resolve(midifile);\n        });\n      } else if (config.base64 !== undefined) {\n        parse({}, base64ToBinary(config.base64), function (midifile) {\n          resolve(midifile);\n        });\n      }\n    }\n\n    this._promise = new Promise(executor);\n  }\n\n\n  sequencer.createMidiFile = function (config) {\n    var mf = new MidiFile2(config);\n    return mf._promise;\n  };\n\n\n  sequencer.protectedScope.addInitMethod(function () {\n    ajax = sequencer.protectedScope.ajax;\n    findItem = sequencer.protectedScope.findItem;\n    storeItem = sequencer.protectedScope.storeItem;\n    deleteItem = sequencer.protectedScope.deleteItem;\n    parseUrl = sequencer.protectedScope.parseUrl;\n    typeString = sequencer.protectedScope.typeString;\n    parseMidiFile = sequencer.protectedScope.parseMidiFile;\n    base64ToBinary = sequencer.protectedScope.base64ToBinary;\n    createPart = sequencer.createPart;\n    createTrack = sequencer.createTrack;\n    createMidiEvent = sequencer.createMidiEvent;\n  });\n}function midiNote() {\r\n\r\n    'use strict';\r\n\r\n    var\r\n        MidiNote,\r\n\r\n        //public\r\n        createMidiEvent,\r\n\r\n        //protected\r\n        typeString,\r\n\r\n        midiNoteId = 0;\r\n\r\n    /*\r\n        @params: noteOn event, noteOff event\r\n        @params: start ticks, end ticks, note number, velocity\r\n\r\n    */\r\n\r\n    MidiNote = function (args) {\r\n        var numArgs = args.length,\r\n            on, off, startTicks, endTicks, noteNumber, velocity;\r\n\r\n        //console.log(args);\r\n\r\n        if (numArgs === 1) {\r\n            on = args[0];\r\n            if (on === undefined) {\r\n                console.error('please provide at least a note on event');\r\n                return;\r\n            }\r\n            this.noteOn = on;\r\n        } else if (numArgs === 2) {\r\n            on = args[0];\r\n            off = args[1];\r\n            if (on === undefined) {\r\n                console.error('please provide at least a note on event');\r\n                return;\r\n            }\r\n            if (on.className === 'MidiEvent' && off & off.className === 'MidiEvent') {\r\n                if (on.ticks >= off.ticks) {\r\n                    console.error('MidiNote has wrong duration');\r\n                    return;\r\n                }\r\n                this.noteOn = on;\r\n                this.noteOff = off;\r\n            }\r\n        } else if (numArgs === 4) {\r\n            startTicks = args[0];\r\n            endTicks = args[1];\r\n            noteNumber = args[2];\r\n            velocity = args[3];\r\n            if (startTicks && endTicks && startTicks >= endTicks) {\r\n                console.error('MidiNote has wrong duration');\r\n                return;\r\n            }\r\n            if (noteNumber < 0 || noteNumber > 127) {\r\n                console.error('MidiNote has wrong note number');\r\n                return;\r\n            }\r\n            if (velocity < 0 || velocity > 127) {\r\n                console.error('MidiNote has wrong velocity');\r\n                return;\r\n            }\r\n            on = createMidiEvent(startTicks, sequencer.NOTE_ON, noteNumber, velocity);\r\n            if (off) {\r\n                off = createMidiEvent(endTicks, sequencer.NOTE_OFF, noteNumber, 0);\r\n            }\r\n        } else {\r\n            console.error('wrong number of arguments, please consult documentation');\r\n            return;\r\n        }\r\n\r\n        on.midiNote = this;\r\n        this.noteOn = on;\r\n\r\n        if (off === undefined) {\r\n            this.endless = true;\r\n        } else {\r\n            off.midiNote = this;\r\n            this.endless = false;\r\n            this.noteOff = off;\r\n            this.durationTicks = off.ticks - on.ticks;\r\n            this.durationMillis = off.millis - on.millis;\r\n        }\r\n\r\n\r\n        this.note = on.note;\r\n        this.number = on.noteNumber;\r\n        this.ticks = on.ticks;\r\n        this.pitch = on.data1;\r\n        this.velocity = on.velocity;\r\n        this.id = 'N' + midiNoteId + new Date().getTime();\r\n        this.name = on.noteName;\r\n        this.className = 'MidiNote';\r\n        this.type = sequencer.MIDI_NOTE;\r\n        midiNoteId++;\r\n    };\r\n\r\n\r\n    MidiNote.prototype.addNoteOff = function (off) {\r\n        if (this.noteOff !== undefined) {\r\n            console.log(off.ticks, off.noteNumber, this.id, 'override note off event');\r\n            this.noteOff.midiNote = undefined;\r\n        }\r\n        var on = this.noteOn;\r\n        off.midiNote = this;\r\n        this.endless = false;\r\n        this.noteOff = off;\r\n        this.durationTicks = off.ticks - on.ticks;\r\n        this.durationMillis = off.millis - on.millis;\r\n        this.endless = false;\r\n    };\r\n\r\n    /*\r\n        MidiNote.prototype.setDuration = function(duration_in_ticks){\r\n            if(duration_in_ticks <= 0){\r\n                console.error('duration of a MidiNote has to be greater then 0');\r\n                return;\r\n            }\r\n            this.noteOff.ticks = this.noteOn.ticks + duration_in_ticks;\r\n            this.durationTicks = this.noteOff.ticks - this.noteOn.ticks;\r\n            //this.durationMillis = this.noteOff.millis - this.noteOn.millis;\r\n            if(this.part){\r\n                this.part.needsUpdate = true;\r\n            }\r\n        };\r\n    */\r\n    /*\r\n        MidiNote.prototype.setEnd = function(ticks){\r\n            this.noteOff.ticks = ticks;\r\n            if(this.part){\r\n                this.part.needsUpdate = true;\r\n            }\r\n        };\r\n    \r\n    \r\n        MidiNote.prototype.setStart = function(ticks){\r\n            this.noteOn.ticks = ticks;\r\n            if(this.part){\r\n                this.part.needsUpdate = true;\r\n            }\r\n        };\r\n    \r\n    \r\n        MidiNote.prototype.setVelocity = function(velocity){\r\n            if(velocity < 0 || velocity > 127){\r\n                return;\r\n            }\r\n            this.velocity = this.noteOn.data1 = this.noteOn.velocity = velocity;\r\n        };\r\n    \r\n    */\r\n    MidiNote.prototype.setPitch = function (pitch) {\r\n        if (pitch < 0 || pitch > 127) {\r\n            return;\r\n        }\r\n        this.noteOn.setPitch(pitch);\r\n        if (this.endless === false) {\r\n            this.noteOff.setPitch(pitch);\r\n        }\r\n        this.number = this.noteOn.noteNumber;\r\n        this.name = this.noteOn.noteName;\r\n        this.pitch = pitch;\r\n    };\r\n\r\n\r\n    MidiNote.prototype.mute = function (flag) {\r\n        if (flag !== undefined) {\r\n            this.mute = flag;\r\n        } else {\r\n            this.mute = !this.mute;\r\n        }\r\n    };\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n        createMidiEvent = sequencer.createMidiEvent;\r\n        typeString = sequencer.protectedScope.typeString;\r\n    });\r\n\r\n\r\n    sequencer.createMidiNote = function () {\r\n        return new MidiNote(Array.prototype.slice.call(arguments));\r\n    };\r\n\r\n}/*\n    based on: https://github.com/gasman/jasmid\n    adapted to work with heartbeatjs' type MidiEvent and Track\n*/\n\nfunction midiParse() {\n\n    'use strict';\n\n    var\n        lastEventTypeByte,\n        trackName,\n        instrumentName,\n\n        //import\n        createStream; // defined in midi_stream.js\n\n\n    function readChunk(stream) {\n        var id = stream.read(4, true);\n        var length = stream.readInt32();\n        //console.log(length);\n        return {\n            'id': id,\n            'length': length,\n            'data': stream.read(length, false)\n        };\n    }\n\n\n    function readEvent(stream) {\n        var event = {};\n        //var lastEventTypeByte; // for running status\n        event.deltaTime = stream.readVarInt();\n        var eventTypeByte = stream.readInt8();\n        var length;\n        //console.log(eventTypeByte, eventTypeByte & 0x80, 146 & 0x0f);\n        if ((eventTypeByte & 0xf0) == 0xf0) {\n            /* system / meta event */\n            if (eventTypeByte == 0xff) {\n                /* meta event */\n                event.type = 'meta';\n                var subtypeByte = stream.readInt8();\n                length = stream.readVarInt();\n                switch (subtypeByte) {\n                    case 0x00:\n                        event.subtype = 'sequenceNumber';\n                        if (length !== 2) throw 'Expected length for sequenceNumber event is 2, got ' + length;\n                        event.number = stream.readInt16();\n                        return event;\n                    case 0x01:\n                        event.subtype = 'text';\n                        event.text = stream.read(length);\n                        return event;\n                    case 0x02:\n                        event.subtype = 'copyrightNotice';\n                        event.text = stream.read(length);\n                        return event;\n                    case 0x03:\n                        event.subtype = 'trackName';\n                        event.text = stream.read(length);\n                        trackName = event.text;\n                        return event;\n                    case 0x04:\n                        event.subtype = 'instrumentName';\n                        event.text = stream.read(length);\n                        instrumentName = event.text;\n                        return event;\n                    case 0x05:\n                        event.subtype = 'lyrics';\n                        event.text = stream.read(length);\n                        return event;\n                    case 0x06:\n                        event.subtype = 'marker';\n                        event.text = stream.read(length);\n                        return event;\n                    case 0x07:\n                        event.subtype = 'cuePoint';\n                        event.text = stream.read(length);\n                        return event;\n                    case 0x20:\n                        event.subtype = 'midiChannelPrefix';\n                        if (length !== 1) throw 'Expected length for midiChannelPrefix event is 1, got ' + length;\n                        event.channel = stream.readInt8();\n                        return event;\n                    case 0x2f:\n                        event.subtype = 'endOfTrack';\n                        if (length !== 0) throw 'Expected length for endOfTrack event is 0, got ' + length;\n                        return event;\n                    case 0x51:\n                        event.subtype = 'setTempo';\n                        if (length !== 3) throw 'Expected length for setTempo event is 3, got ' + length;\n                        event.microsecondsPerBeat = (\n                            (stream.readInt8() << 16) +\n                            (stream.readInt8() << 8) +\n                            stream.readInt8()\n                        );\n                        return event;\n                    case 0x54:\n                        event.subtype = 'smpteOffset';\n                        if (length !== 5) throw 'Expected length for smpteOffset event is 5, got ' + length;\n                        var hourByte = stream.readInt8();\n                        event.frameRate = {\n                            0x00: 24, 0x20: 25, 0x40: 29, 0x60: 30\n                        }[hourByte & 0x60];\n                        event.hour = hourByte & 0x1f;\n                        event.min = stream.readInt8();\n                        event.sec = stream.readInt8();\n                        event.frame = stream.readInt8();\n                        event.subframe = stream.readInt8();\n                        return event;\n                    case 0x58:\n                        event.subtype = 'timeSignature';\n                        if (length !== 4) throw 'Expected length for timeSignature event is 4, got ' + length;\n                        event.numerator = stream.readInt8();\n                        event.denominator = Math.pow(2, stream.readInt8());\n                        event.metronome = stream.readInt8();\n                        event.thirtyseconds = stream.readInt8();\n                        return event;\n                    case 0x59:\n                        event.subtype = 'keySignature';\n                        if (length !== 2) throw 'Expected length for keySignature event is 2, got ' + length;\n                        event.key = stream.readInt8(true);\n                        event.scale = stream.readInt8();\n                        return event;\n                    case 0x7f:\n                        event.subtype = 'sequencerSpecific';\n                        event.data = stream.read(length);\n                        return event;\n                    default:\n                        //if(sequencer.debug >= 2){\n                        //    console.warn('Unrecognised meta event subtype: ' + subtypeByte);\n                        //}\n                        event.subtype = 'unknown';\n                        event.data = stream.read(length);\n                        return event;\n                }\n                event.data = stream.read(length);\n                return event;\n            } else if (eventTypeByte == 0xf0) {\n                event.type = 'sysEx';\n                length = stream.readVarInt();\n                event.data = stream.read(length);\n                return event;\n            } else if (eventTypeByte == 0xf7) {\n                event.type = 'dividedSysEx';\n                length = stream.readVarInt();\n                event.data = stream.read(length);\n                return event;\n            } else {\n                throw 'Unrecognised MIDI event type byte: ' + eventTypeByte;\n            }\n        } else {\n            /* channel event */\n            var param1;\n            if ((eventTypeByte & 0x80) === 0) {\n                /* running status - reuse lastEventTypeByte as the event type.\n                    eventTypeByte is actually the first parameter\n                */\n                //console.log('running status');\n                param1 = eventTypeByte;\n                eventTypeByte = lastEventTypeByte;\n            } else {\n                param1 = stream.readInt8();\n                //console.log('last', eventTypeByte);\n                lastEventTypeByte = eventTypeByte;\n            }\n            var eventType = eventTypeByte >> 4;\n            event.channel = eventTypeByte & 0x0f;\n            event.type = 'channel';\n            switch (eventType) {\n                case 0x08:\n                    event.subtype = 'noteOff';\n                    event.noteNumber = param1;\n                    event.velocity = stream.readInt8();\n                    return event;\n                case 0x09:\n                    event.noteNumber = param1;\n                    event.velocity = stream.readInt8();\n                    if (event.velocity === 0) {\n                        event.subtype = 'noteOff';\n                    } else {\n                        event.subtype = 'noteOn';\n                        //console.log('noteOn');\n                    }\n                    return event;\n                case 0x0a:\n                    event.subtype = 'noteAftertouch';\n                    event.noteNumber = param1;\n                    event.amount = stream.readInt8();\n                    return event;\n                case 0x0b:\n                    event.subtype = 'controller';\n                    event.controllerType = param1;\n                    event.value = stream.readInt8();\n                    return event;\n                case 0x0c:\n                    event.subtype = 'programChange';\n                    event.programNumber = param1;\n                    return event;\n                case 0x0d:\n                    event.subtype = 'channelAftertouch';\n                    event.amount = param1;\n                    //if(trackName === 'SH-S1-44-C09 L=SML IN=3'){\n                    //    console.log('channel pressure', trackName, param1);\n                    //}\n                    return event;\n                case 0x0e:\n                    event.subtype = 'pitchBend';\n                    event.value = param1 + (stream.readInt8() << 7);\n                    return event;\n                default:\n                    /*\n                    throw 'Unrecognised MIDI event type: ' + eventType;\n                    console.log('Unrecognised MIDI event type: ' + eventType);\n                    */\n\n\n\n                    event.value = stream.readInt8();\n                    event.subtype = 'unknown';\n                    //console.log(event);\n                    /*\n                                        event.noteNumber = param1;\n                                        event.velocity = stream.readInt8();\n                                        event.subtype = 'noteOn';\n                                        console.log('weirdo', trackName, param1, event.velocity);\n                    */\n\n                    return event;\n            }\n        }\n    }\n\n\n    function parseStream(stream) {\n        var formatType, trackCount, timeDivision, ticksPerBeat,\n            tracks = [], i,\n            trackNames = [],\n            trackChunk, trackStream,\n            headerChunk, headerStream;\n\n        headerChunk = readChunk(stream);\n        if (headerChunk.id !== 'MThd' || headerChunk.length !== 6) {\n            throw 'Bad .mid file - header not found';\n        }\n        //console.log(headerChunk);\n\n        headerStream = createStream(headerChunk.data);\n        formatType = headerStream.readInt16();\n        trackCount = headerStream.readInt16();\n        timeDivision = headerStream.readInt16();\n\n        if (timeDivision & 0x8000) {\n            throw 'Expressing time division in SMTPE frames is not supported yet';\n        } else {\n            ticksPerBeat = timeDivision;\n        }\n\n        var header = {\n            'formatType': formatType,\n            'trackCount': trackCount,\n            'ticksPerBeat': ticksPerBeat\n        };\n\n        for (i = 0; i < trackCount; i++) {\n            tracks[i] = [];\n            trackNames[i] = trackName;\n            trackChunk = readChunk(stream);\n            if (trackChunk.id !== 'MTrk') {\n                throw 'Unexpected chunk - expected MTrk, got ' + trackChunk.id;\n            }\n            trackStream = createStream(trackChunk.data);\n            while (!trackStream.eof()) {\n                var event = readEvent(trackStream);\n                tracks[i].push(event);\n            }\n        }\n\n        return {\n            'header': header,\n            'tracks': tracks,\n            'trackNames': trackNames\n        };\n    }\n\n\n    /* read a MIDI-style variable-length integer\n        (big-endian value in groups of 7 bits,\n        with top bit set to signify that another byte follows)\n    function readVarInt() {\n        var result = 0;\n        while (true) {\n            var b = readInt8();\n            if (b & 0x80) {\n                result += (b & 0x7f);\n                result <<= 7;\n            } else {\n                // b is the last byte\n                return result + b;\n            }\n        }\n    }\n    */\n\n\n    sequencer.protectedScope.parseMidiFile = function (buffer) {\n        return parseStream(createStream(buffer));\n        //var dv = new DataView(buffer);\n        //return parseStream(dv);\n    };\n\n\n    sequencer.protectedScope.addInitMethod(function () {\n        createStream = sequencer.protectedScope.createStream;\n    });\n}\n\n/* \n\tWrapper for accessing strings through sequential reads \n\t\n\tbased on: https://github.com/gasman/jasmid\n\tadapted to work with ArrayBuffer -> Uint8Array\n*/\n\nfunction midiStream() {\n\n\t'use strict';\n\n\tvar fcc = String.fromCharCode;\n\n\t// buffer is Uint8Array\n\tfunction createStream(buffer) {\n\t\tvar position = 0;\n\n\t\t/* read string or any number of bytes */\n\t\tfunction read(length, toString) {\n\t\t\tvar result, i;\n\t\t\ttoString = toString === undefined ? true : toString;\n\n\t\t\tif (toString) {\n\t\t\t\tresult = '';\n\t\t\t\tfor (i = 0; i < length; i++ , position++) {\n\t\t\t\t\tresult += fcc(buffer[position]);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\tresult = [];\n\t\t\t\tfor (i = 0; i < length; i++ , position++) {\n\t\t\t\t\tresult.push(buffer[position]);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\t/* read a big-endian 32-bit integer */\n\t\tfunction readInt32() {\n\t\t\tvar result = (\n\t\t\t\t(buffer[position] << 24) +\n\t\t\t\t(buffer[position + 1] << 16) +\n\t\t\t\t(buffer[position + 2] << 8) +\n\t\t\t\tbuffer[position + 3]\n\t\t\t);\n\t\t\tposition += 4;\n\t\t\treturn result;\n\t\t}\n\n\t\t/* read a big-endian 16-bit integer */\n\t\tfunction readInt16() {\n\t\t\tvar result = (\n\t\t\t\t(buffer[position] << 8) +\n\t\t\t\tbuffer[position + 1]\n\t\t\t);\n\t\t\tposition += 2;\n\t\t\treturn result;\n\t\t}\n\n\t\t/* read an 8-bit integer */\n\t\tfunction readInt8(signed) {\n\t\t\tvar result = buffer[position];\n\t\t\tif (signed && result > 127) result -= 256;\n\t\t\tposition += 1;\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction eof() {\n\t\t\treturn position >= buffer.length;\n\t\t}\n\n\t\t/* read a MIDI-style variable-length integer\n\t\t\t(big-endian value in groups of 7 bits,\n\t\t\twith top bit set to signify that another byte follows)\n\t\t*/\n\t\tfunction readVarInt() {\n\t\t\tvar result = 0;\n\t\t\twhile (true) {\n\t\t\t\tvar b = readInt8();\n\t\t\t\tif (b & 0x80) {\n\t\t\t\t\tresult += (b & 0x7f);\n\t\t\t\t\tresult <<= 7;\n\t\t\t\t} else {\n\t\t\t\t\t/* b is the last byte */\n\t\t\t\t\treturn result + b;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t'eof': eof,\n\t\t\t'read': read,\n\t\t\t'readInt32': readInt32,\n\t\t\t'readInt16': readInt16,\n\t\t\t'readInt8': readInt8,\n\t\t\t'readVarInt': readVarInt\n\t\t};\n\t}\n\n\tsequencer.protectedScope.createStream = createStream;\n\n}\n\nfunction midiSystem() {\n\n  'use strict';\n\n  var\n    context, // defined in open_module.js\n    typeString, // defined in util.js\n    objectForEach, // defined in util.js\n    createMidiNote, // defined in midi_note.js\n    createMidiEvent, // defined in midi_event.js\n\n    slice = Array.prototype.slice,\n\n    songMidiEventListener,\n\n    midiAccess,\n    midiInputsOrder,\n    midiOutputsOrder,\n    midiInitialized = false,\n    midiEventListenerId = 0;\n\n\n  function initMidi(cb) {\n\n    // console.log(midiInitialized, navigator.requestMIDIAccess);\n\n    if (midiInitialized === true) {\n      cb();\n      return;\n    }\n\n    midiInitialized = true;\n\n    if (navigator.requestMIDIAccess !== undefined) {\n      navigator.requestMIDIAccess().then(\n        // on success\n        function midiAccessOnSuccess(midi) {\n          if (midi._jazzInstances !== undefined) {\n            sequencer.jazz = midi._jazzInstances[0]._Jazz.version;\n            sequencer.midi = true;\n          } else {\n            sequencer.webmidi = true;\n            sequencer.midi = true;\n          }\n          midiAccess = midi;\n          midiAccess.onstatechange = getDevices;\n          if (!midiAccess.inputs || !midiAccess.outputs) {\n            // Firefox WebMIDI API support is still in progress\n            cb();\n          } else {\n            getDevices();\n            //console.log(midi, sequencer.midi, sequencer.webmidi, sequencer.jazz);    \n            cb();\n          }\n        },\n        // on error\n        function midiAccessOnError(e) {\n          console.log('MIDI could not be initialized:', e);\n          cb();\n        }\n      );\n      // browsers without WebMIDI API\n    } else {\n      if (sequencer.browser === 'chrome') {\n        console.log('Web MIDI API not enabled');\n      } else {\n        console.log('Web MIDI API not supported');\n      }\n      cb();\n    }\n  }\n\n\n  function getDevices(e) {\n    //console.log('getDevices', e);\n    var inputs, outputs;\n    midiInputsOrder = [];\n    midiOutputsOrder = [];\n\n    inputs = midiAccess.inputs;\n\n    inputs.forEach(function (input) {\n      midiInputsOrder.push({ name: input.name, id: input.id });\n      sequencer.midiInputs[input.id] = input;\n    });\n\n    midiInputsOrder.sort(function (a, b) {\n      var nameA = a.name.toLowerCase(),\n        nameB = b.name.toLowerCase();\n      if (nameA < nameB) { //sort string ascending\n        return -1;\n      } else if (nameA > nameB) {\n        return 1;\n      }\n      return 0; //default return value (no sorting)\n    });\n\n    sequencer.numMidiInputs = midiInputsOrder.length;\n\n\n    outputs = midiAccess.outputs;\n\n    outputs.forEach(function (output) {\n      midiOutputsOrder.push({ name: output.name, id: output.id });\n      sequencer.midiOutputs[output.id] = output;\n    });\n\n\n    midiOutputsOrder.sort(function (a, b) {\n      var nameA = a.name.toLowerCase(),\n        nameB = b.name.toLowerCase();\n      if (nameA < nameB) { //sort string ascending\n        return -1;\n      } else if (nameA > nameB) {\n        return 1;\n      }\n      return 0; //default return value (no sorting)\n    });\n\n    sequencer.numMidiOutputs = midiOutputsOrder.length;\n  }\n\n\n  function initMidiSong(song) {\n    songMidiEventListener = function (e) {\n      //console.log(e);\n      handleMidiMessageSong(e, song, this);\n    };\n\n    // by default a song listens to all available midi-in ports\n    objectForEach(sequencer.midiInputs, function (port) {\n      //port.addEventListener('midimessage', songMidiEventListener, false);\n      port.onmidimessage = songMidiEventListener;\n      song.midiInputs[port.id] = port;\n      //console.log(port);\n    });\n    //console.log(sequencer.midiInputs);\n\n    objectForEach(sequencer.midiOutputs, function (port) {\n      song.midiOutputs[port.id] = port;\n    });\n\n    song.numMidiInputs = sequencer.numMidiInputs;\n    song.numMidiOutputs = sequencer.numMidiOutputs;\n  }\n\n\n  function setMidiInputSong(id, flag, song) {\n    var input = sequencer.midiInputs[id],\n      tracks = song.tracks,\n      maxi = song.numTracks - 1,\n      i, track;\n\n    flag = flag === undefined ? true : flag;\n\n    if (input === undefined) {\n      if (sequencer.debug === true) {\n        console.log('no midi input with id', id, 'found');\n      }\n      return;\n    }\n\n    if (flag === false) {\n      delete song.midiInputs[id];\n      //input.removeEventListener('midimessage', songMidiEventListener, false);\n      input.onmidimessage = null;\n      song.numMidiInputs--;\n    } else if (input !== undefined) {\n      song.midiInputs[id] = input;\n      //input.addEventListener('midimessage', songMidiEventListener, false);\n      input.onmidimessage = songMidiEventListener;\n      song.numMidiInputs++;\n    }\n\n    for (i = maxi; i >= 0; i--) {\n      track = tracks[i];\n      track.setMidiInput(id, flag);\n      // if(flag === false){\n      //     delete track.midiInputs[id];\n      // }\n    }\n  }\n\n  function setMidiOutputSong(id, flag, song) {\n    var output = sequencer.midiOutputs[id],\n      tracks = song.tracks,\n      maxi = song.numTracks - 1,\n      i, track, time;\n\n    flag = flag === undefined ? true : flag;\n\n    if (output === undefined) {\n      if (sequencer.debug === true) {\n        console.log('no midi output with id', id, 'found');\n      }\n      return;\n    }\n\n    if (flag === false) {\n      delete song.midiOutputs[id];\n      song.numMidiOutputs--;\n      time = song.scheduler.lastEventTime + 100;\n      output.send([0xB0, 0x7B, 0x00], time); // stop all notes\n      output.send([0xB0, 0x79, 0x00], time); // reset all controllers\n    } else if (output !== undefined) {\n      song.midiOutputs[id] = output;\n      song.numMidiOutputs++;\n    }\n\n    for (i = maxi; i >= 0; i--) {\n      track = tracks[i];\n      track.setMidiOutput(id, flag);\n      // if(flag === false){\n      //     delete track.midiOutputs[id];\n      // }\n    }\n  }\n\n  function handleMidiMessageSong(midiMessageEvent, song, input) {\n    var data = midiMessageEvent.data,\n      i, track,\n      tracks = song.tracks,\n      numTracks = song.numTracks,\n      midiEvent,\n      listeners;\n\n    //console.log(midiMessageEvent.data);\n    midiEvent = createMidiEvent(song.ticks, data[0], data[1], data[2]);\n\n    for (i = 0; i < numTracks; i++) {\n      track = tracks[i];\n      //console.log(track.midiInputs, input);\n      /*\n      if(midiEvent.channel === track.channel || track.channel === 0 || track.channel === 'any'){\n          handleMidiMessageTrack(midiEvent, track);\n      }\n      */\n      // like in Cubase, midi events from all devices, sent on any midi channel are forwarded to all tracks\n      // set track.monitor to false if you don't want to receive midi events on a certain track\n      // note that track.monitor is by default set to false and that track.monitor is automatically set to true\n      // if you are recording on that track\n      // console.log(track.monitor, track.id, input.id);\n      if (track.monitor === true && track.midiInputs[input.id] !== undefined) {\n        handleMidiMessageTrack(midiEvent, track, input);\n      }\n    }\n\n    listeners = song.midiEventListeners[midiEvent.type];\n    if (listeners === undefined) {\n      return;\n    }\n\n    objectForEach(listeners, function (listener) {\n      listener(midiEvent, input);\n    });\n  }\n\n\n  //function handleMidiMessageTrack(midiMessageEvent, track, input){\n  function handleMidiMessageTrack(midiEvent, track, input) {\n    var song = track.song,\n      note, listeners, channel;\n    //data = midiMessageEvent.data,\n    //midiEvent = createMidiEvent(song.ticks, data[0], data[1], data[2]);\n\n    //midiEvent.source = midiMessageEvent.srcElement.name;\n    //console.log(midiMessageEvent)\n    //console.log('---->', midiEvent.type);\n\n    // add the exact time of this event so we can calculate its ticks position\n    midiEvent.recordMillis = context.currentTime * 1000; // millis\n    midiEvent.state = 'recorded';\n\n    if (midiEvent.type === 144) {\n      note = createMidiNote(midiEvent);\n      track.recordingNotes[midiEvent.data1] = note;\n      //track.song.recordingNotes[note.id] = note;\n    } else if (midiEvent.type === 128) {\n      note = track.recordingNotes[midiEvent.data1];\n      // check if the note exists: if the user plays notes on her keyboard before the midi system has\n      // been fully initialized, it can happen that the first incoming midi event is a NOTE OFF event\n      if (note === undefined) {\n        return;\n      }\n      note.addNoteOff(midiEvent);\n      delete track.recordingNotes[midiEvent.data1];\n      //delete track.song.recordingNotes[note.id];\n    }\n\n    //console.log(song.preroll, song.recording, track.recordEnabled);\n\n    if ((song.prerolling || song.recording) && track.recordEnabled === 'midi') {\n      if (midiEvent.type === 144) {\n        track.song.recordedNotes.push(note);\n      }\n      track.recordPart.addEvent(midiEvent);\n      // song.recordedEvents is used in the key editor\n      track.song.recordedEvents.push(midiEvent);\n    } else if (track.enableRetrospectiveRecording) {\n      track.retrospectiveRecording.push(midiEvent);\n    }\n\n    // call all midi event listeners\n    listeners = track.midiEventListeners[midiEvent.type];\n    if (listeners !== undefined) {\n      objectForEach(listeners, function (listener) {\n        listener(midiEvent, input);\n      });\n    }\n\n    channel = track.channel;\n    if (channel === 'any' || channel === undefined || isNaN(channel) === true) {\n      channel = 0;\n    }\n\n    objectForEach(track.midiOutputs, function (output) {\n      //console.log('midi out', output, midiEvent.type);\n      if (midiEvent.type === 128 || midiEvent.type === 144 || midiEvent.type === 176) {\n        //console.log(midiEvent.type, midiEvent.data1, midiEvent.data2);\n        output.send([midiEvent.type, midiEvent.data1, midiEvent.data2]);\n        // }else if(midiEvent.type === 192){\n        //     output.send([midiEvent.type + channel, midiEvent.data1]);\n      }\n      //output.send([midiEvent.status + channel, midiEvent.data1, midiEvent.data2]);\n    });\n\n    // @TODO: maybe a track should be able to send its event to both a midi-out port and an internal heartbeat song?\n    //console.log(track.routeToMidiOut);\n    if (track.routeToMidiOut === false) {\n      midiEvent.track = track;\n      track.instrument.processEvent(midiEvent);\n    }\n  }\n\n\n  function addMidiEventListener(args, obj) { // obj can be a track or a song\n    args = slice.call(args);\n\n    var id = midiEventListenerId++,\n      types = {},\n      ids = [],\n      listener,\n      loop;\n\n\n    // should I inline this?\n    loop = function (args, i, maxi) {\n      for (i = 0; i < maxi; i++) {\n        var arg = args[i],\n          type = typeString(arg);\n        //console.log(type);\n        if (type === 'array') {\n          loop(arg, 0, arg.length);\n        } else if (type === 'function') {\n          listener = arg;\n        } else if (isNaN(arg) === false) {\n          arg = parseInt(arg, 10);\n          if (sequencer.checkEventType(arg) !== false) {\n            types[arg] = arg;\n          }\n        } else if (type === 'string') {\n          if (sequencer.checkEventType(arg) !== false) {\n            arg = sequencer.midiEventNumberByName(arg);\n            types[arg] = arg;\n          }\n        }\n      }\n    };\n\n    loop(args, 0, args.length);\n    //console.log('types', types, 'listener', listener);\n\n    objectForEach(types, function (type) {\n      //console.log(type);\n      if (obj.midiEventListeners[type] === undefined) {\n        obj.midiEventListeners[type] = {};\n      }\n      obj.midiEventListeners[type][id] = listener;\n      ids.push(type + '_' + id);\n    });\n\n    //console.log(obj.midiEventListeners);\n    return ids.length === 1 ? ids[0] : ids;\n  }\n\n\n  function removeMidiEventListener(id, obj) {\n    var type;\n    id = id.split('_');\n    type = id[0];\n    id = id[1];\n    delete obj.midiEventListeners[type][id];\n  }\n\n\n  function removeMidiEventListeners() {\n\n  }\n\n\n  function getMidiPortsAsDropdown(config, obj) {\n    var select = document.createElement('select'),\n      option, ports,\n      type = config.type,\n      id = config.id || type,\n      div = config.div,\n      firstOption = config.firstOption;\n\n    if (type !== 'input' && type !== 'output') {\n      console.log('please set type to \"input\" or \"output\"');\n      return;\n    }\n\n    if (firstOption === undefined) {\n      firstOption = type === 'input' ? 'choose MIDI in' : 'choose MIDI out';\n    }\n\n    select.id = id;\n    ports = type === 'input' ? obj.midiInputs : obj.midiOutputs;\n\n    if (firstOption !== false) {\n      option = document.createElement('option');\n      option.value = -1;\n      option.innerHTML = firstOption;\n      select.appendChild(option);\n    }\n\n    objectForEach(ports, function (port) {\n      option = document.createElement('option');\n      option.value = port.id;\n      option.innerHTML = port.name;\n      select.appendChild(option);\n    });\n\n    if (div) {\n      div.appendChild(select);\n    }\n    return select;\n  }\n\n\n  sequencer.getMidiPortsAsDropdown = function () {\n    getMidiPortsAsDropdown(sequencer);\n  };\n\n\n  sequencer.getMidiInputsAsDropdown = function (config) {\n    config = config || {\n      type: 'input'\n    };\n    return getMidiPortsAsDropdown(config, sequencer);\n  };\n\n\n  sequencer.getMidiOutputsAsDropdown = function (config) {\n    config = config || {\n      type: 'output'\n    };\n    return getMidiPortsAsDropdown(config, sequencer);\n  };\n\n\n  function getMidiInputs(cb, obj) {\n    var i, maxi;\n    if (obj === sequencer) {\n      for (i = 0, maxi = midiInputsOrder.length; i < maxi; i++) {\n        cb(obj.midiInputs[midiInputsOrder[i].id], i);\n      }\n    } else {\n      objectForEach(obj.midiInputs, function (port) {\n        cb(port, i);\n      });\n    }\n  }\n\n\n  function getMidiOutputs(cb, obj) {\n    var i, maxi;\n    if (obj === sequencer) {\n      for (i = 0, maxi = midiOutputsOrder.length; i < maxi; i++) {\n        cb(obj.midiOutputs[midiOutputsOrder[i].id], i);\n      }\n    } else {\n      objectForEach(obj.midiOutputs, function (port, i) {\n        cb(port, i);\n      });\n    }\n  }\n\n\n  sequencer.getMidiInputs = function (cb) {\n    getMidiInputs(cb, sequencer);\n  };\n\n\n  sequencer.getMidiOutputs = function (cb) {\n    getMidiOutputs(cb, sequencer);\n  };\n\n\n  sequencer.protectedScope.addInitMethod(function () {\n    context = sequencer.protectedScope.context;\n    createMidiNote = sequencer.createMidiNote;\n    createMidiEvent = sequencer.createMidiEvent;\n    typeString = sequencer.protectedScope.typeString;\n    objectForEach = sequencer.protectedScope.objectForEach;\n  });\n\n\n  // close_module.js\n  sequencer.protectedScope.initMidi = initMidi;\n\n  // song.js\n  sequencer.protectedScope.initMidiSong = initMidiSong;\n  sequencer.protectedScope.getMidiInputs = getMidiInputs;\n  sequencer.protectedScope.getMidiOutputs = getMidiOutputs;\n  sequencer.protectedScope.setMidiInputSong = setMidiInputSong;\n  sequencer.protectedScope.setMidiOutputSong = setMidiOutputSong;\n  sequencer.protectedScope.addMidiEventListener = addMidiEventListener;\n  sequencer.protectedScope.getMidiPortsAsDropdown = getMidiPortsAsDropdown;\n  sequencer.protectedScope.removeMidiEventListener = removeMidiEventListener;\n  sequencer.protectedScope.removeMidiEventListeners = removeMidiEventListeners;\n  sequencer.protectedScope.handleMidiMessageTrack = handleMidiMessageTrack;\n\n}\n\n\n\n\n/*\n    function handleMidiMessageTrack(e, track){\n        var data = e.data,\n            midiEvent,\n            song = track.song,\n            note, listeners;\n\n        //console.log(track.recordPart);\n        if(song){\n            midiEvent = sequencer.createMidiEvent(song.ticks, data[0], data[1], data[2]);\n            //console.log(midiEvent);\n            if(midiEvent.type === 144){\n                note = createMidiNote(midiEvent);\n                track.recordingNotes[midiEvent.data1] = note;\n                //track.song.recordingNotes[note.id] = note;\n            }else if(midiEvent.type === 128){\n                note = track.recordingNotes[midiEvent.data1];\n                note.addNoteOff(midiEvent);\n                delete track.recordingNotes[midiEvent.data1];\n                //delete track.song.recordingNotes[note.id];\n            }\n            if(song.recording && song.playing && track.recordEnabled){\n                if(midiEvent.type === 144){\n                    track.song.recordedNotes.push(note);\n                }\n                track.recordPart.addEvent(midiEvent);\n                track.song.recordedEvents.push(midiEvent);\n            }else if(track.enableRetrospectiveRecording){\n                track.retrospectiveRecording.push(midiEvent);\n            }\n\n            // call all midi event listeners\n            listeners = track.midiEventListeners[midiEvent.type];\n            if(listeners !== undefined){\n                objectForEach(listeners, function(listener, id){\n                    listener(midiEvent);\n                });\n            }\n        }else{\n            console.error('unexpected situation!');\n            // does this ever happen?\n            midiEvent = sequencer.createMidiEvent(0, data[0], data[1], data[2]);\n            midiEvent.millis = song.recordTimestamp - sequencer.getTime();\n            if(track.enableRetrospectiveRecording){\n                track.retrospectiveRecording.push(midiEvent);\n            }\n            //@TODO: add parser for retrospective recording: convert millis to ticks\n        }\n\n        if(track.midiOutput !== undefined){\n            track.midiOutput.send([data[0], data[1], data[2]]);\n        }else{\n            midiEvent.track = track;\n            track.instrument.processEvent(midiEvent);\n        }\n    }\n*///http://www.deluge.co/?q=midi-tempo-bpm\n// This code is based on https://github.com/sergi/jsmidi\n\nfunction midiWrite() {\n\n    'use strict';\n\n    var\n        AP = Array.prototype,\n        PPQ = sequencer.defaultPPQ,\n        HDR_CHUNKID = [\n            'M'.charCodeAt(0),\n            'T'.charCodeAt(0),\n            'h'.charCodeAt(0),\n            'd'.charCodeAt(0)\n        ],\n        HDR_CHUNK_SIZE = [0x0, 0x0, 0x0, 0x6], // Header size for SMF\n        // HDR_TYPE0 = [0x0, 0x0], // Midi Type 0 id\n        HDR_TYPE1 = [0x0, 0x1], // Midi Type 1 id\n        //HDR_PPQ = [0x01, 0xE0], // Defaults to 480 ticks per beat\n        //HDR_PPQ = [0x00, 0x80], // Defaults to 128 ticks per beat\n        HDR_PPQ = str2Bytes(PPQ.toString(16), 2),\n\n        TRK_CHUNKID = [\n            'M'.charCodeAt(0),\n            'T'.charCodeAt(0),\n            'r'.charCodeAt(0),\n            'k'.charCodeAt(0)\n        ],\n\n        // Meta event codes\n        META_SEQUENCE = 0x00,\n        META_TEXT = 0x01,\n        META_COPYRIGHT = 0x02,\n        META_TRACK_NAME = 0x03,\n        META_INSTRUMENT = 0x04,\n        META_LYRIC = 0x05,\n        META_MARKER = 0x06,\n        META_CUE_POINT = 0x07,\n        META_CHANNEL_PREFIX = 0x20,\n        META_END_OF_TRACK = 0x2f,\n        META_TEMPO = 0x51,\n        META_SMPTE = 0x54,\n        META_TIME_SIG = 0x58,\n        META_KEY_SIG = 0x59,\n        META_SEQ_EVENT = 0x7f;\n\n\n    function write(song) {\n        var byteArray = [].concat(HDR_CHUNKID, HDR_CHUNK_SIZE, HDR_TYPE1),\n            tracks = song.tracks,\n            numTracks = song.tracks.length + 1,\n            i, maxi, track, midiFile, destination, b64,\n            arrayBuffer, dataView, uintArray;\n\n\n        byteArray = byteArray.concat(str2Bytes(numTracks.toString(16), 2), HDR_PPQ);\n        //console.log(byteArray);\n        byteArray = byteArray.concat(trackToBytes(song.timeEvents, song.durationTicks, 'tempo'));\n        //console.log(song.durationMillis);\n\n        for (i = 0, maxi = tracks.length; i < maxi; i++) {\n            track = tracks[i];\n            byteArray = byteArray.concat(trackToBytes(track.events, song.durationTicks, track.name, track.instrumentId));\n        }\n\n        //b64 = btoa(codes2Str(byteArray));\n        //window.location.assign(\"data:audio/midi;base64,\" + b64);\n        //console.log(b64);// send to server\n\n        maxi = byteArray.length;\n        arrayBuffer = new ArrayBuffer(maxi);\n        uintArray = new Uint8Array(arrayBuffer);\n        for (i = 0; i < maxi; i++) {\n            uintArray[i] = byteArray[i];\n        }\n        midiFile = new Blob([uintArray], { type: 'application/x-midi', endings: 'transparent' });\n        saveAs(midiFile, song.name);\n        //window.location.assign(window.URL.createObjectURL(midiFile));\n    }\n\n\n    function trackToBytes(events, lastEventTicks, trackName, instrumentName) {\n        var lengthBytes,\n            i, maxi, event, status,\n            trackLength, // number of bytes in track chunk\n            ticks = 0,\n            delta = 0,\n            trackBytes = [];\n\n        if (trackName) {\n            trackBytes.push(0x00);\n            trackBytes.push(0xFF);\n            trackBytes.push(0x03);\n            trackBytes = trackBytes.concat(convertToVLQ(trackName.length));\n            trackBytes = trackBytes.concat(stringToNumArray(trackName));\n        }\n\n        if (instrumentName) {\n            trackBytes.push(0x00);\n            trackBytes.push(0xFF);\n            trackBytes.push(0x04);\n            trackBytes = trackBytes.concat(convertToVLQ(instrumentName.length));\n            trackBytes = trackBytes.concat(stringToNumArray(instrumentName));\n        }\n\n        for (i = 0, maxi = events.length; i < maxi; i++) {\n            event = events[i];\n            delta = event.ticks - ticks;\n            delta = convertToVLQ(delta);\n            //console.log(delta);\n            trackBytes = trackBytes.concat(delta);\n            //trackBytes.push.apply(trackBytes, delta);\n            if (event.type === 0x80 || event.type === 0x90) { // note off, note on\n                //status = parseInt(event.type.toString(16) + event.channel.toString(16), 16);\n                status = event.type + event.channel;\n                trackBytes.push(status);\n                trackBytes.push(event.noteNumber);\n                trackBytes.push(event.velocity);\n            } else if (event.type === 0x51) { // tempo\n                trackBytes.push(0xFF);\n                trackBytes.push(0x51);\n                trackBytes.push(0x03);// length\n                //trackBytes = trackBytes.concat(convertToVLQ(3));// length\n                var microSeconds = Math.round(60000000 / event.bpm);\n                trackBytes = trackBytes.concat(str2Bytes(microSeconds.toString(16), 3));\n            } else if (event.type === 0x58) { // time signature\n                var denom = event.denominator;\n                if (denom === 2) {\n                    denom = 0x01;\n                } else if (denom === 4) {\n                    denom = 0x02;\n                } else if (denom === 8) {\n                    denom = 0x03;\n                } else if (denom === 16) {\n                    denom = 0x04;\n                } else if (denom === 32) {\n                    denom = 0x05;\n                }\n                trackBytes.push(0xFF);\n                trackBytes.push(0x58);\n                trackBytes.push(0x04);// length\n                //trackBytes = trackBytes.concat(convertToVLQ(4));// length\n                trackBytes.push(event.nominator);\n                trackBytes.push(denom);\n                trackBytes.push(PPQ / event.nominator);\n                trackBytes.push(0x08); // 32nd notes per crotchet\n                //console.log(trackName, event.nominator, event.denominator, denom, PPQ/event.nominator);\n            }\n            // set the new ticks reference\n            //console.log(status, event.ticks, ticks);\n            ticks = event.ticks;\n        }\n        delta = lastEventTicks - ticks;\n        //console.log('d', delta, 't', ticks, 'l', lastEventTicks);\n        delta = convertToVLQ(delta);\n        //console.log(trackName, ticks, delta);\n        trackBytes = trackBytes.concat(delta);\n        trackBytes.push(0xFF);\n        trackBytes.push(0x2F);\n        trackBytes.push(0x00);\n        //console.log(trackName, trackBytes);\n        trackLength = trackBytes.length;\n        lengthBytes = str2Bytes(trackLength.toString(16), 4);\n        return [].concat(TRK_CHUNKID, lengthBytes, trackBytes);\n    }\n\n\n    // Helper functions\n\n    /*\n     * Converts an array of bytes to a string of hexadecimal characters. Prepares\n     * it to be converted into a base64 string.\n     *\n     * @param byteArray {Array} array of bytes that will be converted to a string\n     * @returns hexadecimal string\n     */\n\n    function codes2Str(byteArray) {\n        return String.fromCharCode.apply(null, byteArray);\n    }\n\n    /*\n     * Converts a String of hexadecimal values to an array of bytes. It can also\n     * add remaining '0' nibbles in order to have enough bytes in the array as the\n     * |finalBytes| parameter.\n     *\n     * @param str {String} string of hexadecimal values e.g. '097B8A'\n     * @param finalBytes {Integer} Optional. The desired number of bytes that the returned array should contain\n     * @returns array of nibbles.\n     */\n\n    function str2Bytes(str, finalBytes) {\n        if (finalBytes) {\n            while ((str.length / 2) < finalBytes) {\n                str = '0' + str;\n            }\n        }\n\n        var bytes = [];\n        for (var i = str.length - 1; i >= 0; i = i - 2) {\n            var chars = i === 0 ? str[i] : str[i - 1] + str[i];\n            bytes.unshift(parseInt(chars, 16));\n        }\n\n        return bytes;\n    }\n\n\n    /**\n     * Translates number of ticks to MIDI timestamp format, returning an array of\n     * bytes with the time values. Midi has a very particular time to express time,\n     * take a good look at the spec before ever touching this function.\n     *\n     * @param ticks {Integer} Number of ticks to be translated\n     * @returns Array of bytes that form the MIDI time value\n     */\n    function convertToVLQ(ticks) {\n        var buffer = ticks & 0x7F;\n\n        while (ticks = ticks >> 7) {\n            buffer <<= 8;\n            buffer |= ((ticks & 0x7F) | 0x80);\n        }\n\n        var bList = [];\n        while (true) {\n            bList.push(buffer & 0xff);\n\n            if (buffer & 0x80) {\n                buffer >>= 8;\n            } else {\n                break;\n            }\n        }\n\n        //console.log(ticks, bList);\n        return bList;\n    }\n\n\n    /*\n     * Converts a string into an array of ASCII char codes for every character of\n     * the string.\n     *\n     * @param str {String} String to be converted\n     * @returns array with the charcode values of the string\n     */\n    function stringToNumArray(str) {\n        return AP.map.call(str, function (char) {\n            return char.charCodeAt(0);\n        });\n    }\n\n\n    sequencer.protectedScope.saveToMidiFile = write;\n    sequencer.saveSongAsMidiFile = write;\n\n}\nfunction musicXMLParser() {\n\n  'use strict';\n\n  var\n    //import\n    ajax, // → defined in util.js\n    typeString, // → defined in util.js\n    getNoteNumber, // → defined in note.js\n\n    nsResolver;\n\n\n  function load(url, cb, returnAsXML) {\n    if (url === undefined || cb === undefined) {\n      if (sequencer.debug >= sequencer.WARN) {\n        console.warn('please provide an url and a callback method');\n      }\n    }\n\n    ajax({\n      url: url + '?' + new Date().getTime(),\n      method: 'GET',\n      onError: function () {\n        cb(false);\n      },\n      onSuccess: function (response) {\n        if (returnAsXML === true) {\n          cb(response);\n        } else {\n          cb(parse(response));\n        }\n      },\n      responseType: 'xml'\n    });\n  }\n\n\n  function parse(xml) {\n    var parser = new DOMParser(),\n      xmlDoc = parser.parseFromString(xml, 'application/xml'),\n      type = xmlDoc.firstChild.nextSibling.nodeName;\n\n    //console.log('type', type);\n\n    nsResolver = xmlDoc.createNSResolver(xmlDoc.ownerDocument === null ? xmlDoc.documentElement : xmlDoc.ownerDocument.documentElement);\n\n    if (type === 'score-partwise') {\n      return parsePartWise(xmlDoc);\n    } else if (type === 'score-timewise') {\n      return parseTimeWise(xmlDoc);\n    } else {\n      console.log('unknown type', type);\n      return false;\n    }\n  }\n\n\n  function parsePartWise(xmlDoc) {\n    var partIterator = xmlDoc.evaluate('//score-part', xmlDoc, nsResolver, XPathResult.ANY_TYPE, null),\n      partNode,\n      measureIterator,\n      measureNode,\n      noteIterator,\n      noteNode,\n      measureNumber,\n      tracks = [],\n      timeEvents = [],\n      tiedNotes = {},\n      tieStart,\n      tieStop,\n      tieIterator, tieNode,\n      events,\n      song, track, part, noteOn, noteOff,\n      name, id, tmp1, tmp2,\n      step, alter, octave, voice, noteType, noteDuration, noteName, noteNumber, velocity,\n      rest, chord,\n      divisions, numerator, denominator,\n      ppq = sequencer.defaultPPQ,\n      ticks;\n\n    while ((partNode = partIterator.iterateNext()) !== null) {\n      // get id and name of the part\n      id = xmlDoc.evaluate('@id', partNode, nsResolver, XPathResult.STRING_TYPE, null).stringValue;\n      name = xmlDoc.evaluate('part-name', partNode, nsResolver, XPathResult.STRING_TYPE, null).stringValue;\n      velocity = xmlDoc.evaluate('midi-instrument/volume', partNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n      velocity = parseInt((velocity / 100) * 127);\n\n      ticks = 0;\n      track = sequencer.createTrack(name);\n      part = sequencer.createPart();\n      track.addPart(part);\n      tracks.push(track);\n      events = [];\n\n      //console.log(id, name, velocity);\n\n      // get all measures\n      measureIterator = xmlDoc.evaluate('//part[@id=\"' + id + '\"]/measure', partNode, nsResolver, XPathResult.ANY_TYPE, null);\n      while ((measureNode = measureIterator.iterateNext()) !== null) {\n\n        measureNumber = xmlDoc.evaluate('@number', measureNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n\n        tmp1 = xmlDoc.evaluate('attributes/divisions', measureNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n        if (!isNaN(tmp1)) {\n          divisions = tmp1;\n        }\n\n        tmp1 = xmlDoc.evaluate('attributes/time/beats', measureNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n        tmp2 = xmlDoc.evaluate('attributes/time/beat-type', measureNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n        if (!isNaN(tmp1)) {\n          numerator = tmp1;\n          denominator = tmp2;\n          timeEvents.push(sequencer.createMidiEvent(ticks, sequencer.TIME_SIGNATURE, numerator, denominator));\n        }\n        //console.log(divisions, numerator, denominator);\n\n        // get all notes and backups\n        //noteIterator = xmlDoc.evaluate('note', measureNode, nsResolver, XPathResult.ANY_TYPE, null);\n        noteIterator = xmlDoc.evaluate('*[self::note or self::backup or self::forward]', measureNode, nsResolver, XPathResult.ANY_TYPE, null);\n        while ((noteNode = noteIterator.iterateNext()) !== null) {\n          //console.log(noteNode);\n\n          tieStart = false;\n          tieStop = false;\n          tieIterator = xmlDoc.evaluate('tie', noteNode, nsResolver, XPathResult.ANY_TYPE, null);\n          while ((tieNode = tieIterator.iterateNext()) !== null) {\n            tmp1 = xmlDoc.evaluate('@type', tieNode, nsResolver, XPathResult.STRING_TYPE, null).stringValue;\n            //console.log(tmp1);\n            if (tmp1 === 'start') {\n              tieStart = true;\n            } else if (tmp1 === 'stop') {\n              tieStop = true;\n            }\n            //tieStart = xmlDoc.evaluate('@type=\"start\"', tieNode, nsResolver, XPathResult.BOOLEAN_TYPE, null).booleanValue;\n            //tieStop = xmlDoc.evaluate('@type=\"stop\"', tieNode, nsResolver, XPathResult.BOOLEAN_TYPE, null).booleanValue;\n            //console.log(tieStart, tieStop);\n          }\n\n          rest = xmlDoc.evaluate('rest', noteNode, nsResolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n          chord = xmlDoc.evaluate('chord', noteNode, nsResolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n\n          if (rest !== null) {\n            //console.log(rest);\n            noteDuration = xmlDoc.evaluate('duration', noteNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n            ticks += (noteDuration / divisions) * ppq;\n\n          } else if (noteNode.nodeName === 'note') {\n\n            step = xmlDoc.evaluate('pitch/step', noteNode, nsResolver, XPathResult.STRING_TYPE, null).stringValue;\n            alter = xmlDoc.evaluate('pitch/alter', noteNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n            voice = xmlDoc.evaluate('voice', noteNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n            octave = xmlDoc.evaluate('pitch/octave', noteNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n            noteDuration = xmlDoc.evaluate('duration', noteNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n            noteType = xmlDoc.evaluate('type', noteNode, nsResolver, XPathResult.STRING_TYPE, null).stringValue;\n            noteName = step;\n\n            if (step !== '') {\n              if (!isNaN(alter)) {\n                switch (alter) {\n                  case -2:\n                    noteName += 'bb';\n                    break;\n                  case -1:\n                    noteName += 'b';\n                    break;\n                  case 1:\n                    noteName += '#';\n                    break;\n                  case 2:\n                    noteName += '##';\n                    break;\n                }\n              }\n              noteNumber = getNoteNumber(noteName, octave);\n              noteOn = sequencer.createMidiEvent(ticks, sequencer.NOTE_ON, noteNumber, velocity);\n              ticks += (noteDuration / divisions) * ppq;\n              noteOff = sequencer.createMidiEvent(ticks, sequencer.NOTE_OFF, noteNumber, 0);\n              if (chord !== null) {\n                ticks -= (noteDuration / divisions) * ppq;\n              }\n\n              //console.log('tie', tieStart, tieStop);\n\n              if (tieStart === false && tieStop === false) {\n                // no ties\n                events.push(noteOn, noteOff);\n                //console.log('no ties', measureNumber, voice, noteNumber, tiedNotes);\n              } else if (tieStart === true && tieStop === false) {\n                // start of tie\n                tiedNotes[voice + '-' + noteNumber] = noteOff;\n                events.push(noteOn, noteOff);\n                //console.log('start', measureNumber, voice, noteNumber, tiedNotes);\n              } else if (tieStart === true && tieStop === true) {\n                // tied to yet another note\n                tiedNotes[voice + '-' + noteNumber].ticks += (noteDuration / divisions) * ppq;\n                //console.log('thru', measureNumber, voice, noteNumber, tiedNotes);\n              } else if (tieStart === false && tieStop === true) {\n                // end of tie\n                tiedNotes[voice + '-' + noteNumber].ticks += (noteDuration / divisions) * ppq;\n                delete tiedNotes[voice + '-' + noteNumber];\n                //console.log('end', measureNumber, voice, noteNumber, tiedNotes);\n              }\n              //console.log(noteNumber, ticks);\n            }\n\n          } else if (noteNode.nodeName === 'backup') {\n            noteDuration = xmlDoc.evaluate('duration', noteNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n            ticks -= (noteDuration / divisions) * ppq;\n            //console.log(noteDuration, divisions);\n          } else if (noteNode.nodeName === 'forward') {\n            noteDuration = xmlDoc.evaluate('duration', noteNode, nsResolver, XPathResult.NUMBER_TYPE, null).numberValue;\n            ticks += (noteDuration / divisions) * ppq;\n            //console.log(noteDuration, divisions);\n          }\n          //console.log(ticks);\n        }\n      }\n      part.addEvents(events);\n      //console.log(tiedNotes);\n    }\n\n    song = sequencer.createSong({\n      bpm: 110,\n      tracks: tracks[0],\n      timeEvents: timeEvents,\n      useMetronome: false\n    });\n\n    return song;\n  }\n\n\n  function parseTimeWise(xmlDoc) {\n    return xmlDoc;\n  }\n\n  sequencer.loadMusicXML = load;\n  sequencer.parseMusicXML = parse;\n\n  sequencer.protectedScope.addInitMethod(function () {\n    ajax = sequencer.protectedScope.ajax;\n    typeString = sequencer.protectedScope.typeString;\n    getNoteNumber = sequencer.getNoteNumber;\n  });\n\n}\nfunction note() {\r\n\r\n    'use strict';\r\n\r\n    var\r\n        //import\r\n        typeString, // → defined in util.js\r\n\r\n        //local\r\n        noteNames,\r\n        getNoteNumber,\r\n        getNoteName,\r\n        checkNoteName,\r\n        getFrequency,\r\n        createNote,\r\n        isNoteMode,\r\n        isBlackKey,\r\n        pow = Math.pow;\r\n\r\n    noteNames = {\r\n        'sharp': ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'],\r\n        'flat': ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'],\r\n        'enharmonic-sharp': ['B#', 'C#', 'C##', 'D#', 'D##', 'E#', 'F#', 'F##', 'G#', 'G##', 'A#', 'A##'],\r\n        'enharmonic-flat': ['Dbb', 'Db', 'Ebb', 'Eb', 'Fb', 'Gbb', 'Gb', 'Abb', 'Ab', 'Bbb', 'Bb', 'Cb']\r\n    };\r\n\r\n\r\n    /*\r\n        arguments\r\n        - noteNumber: 60\r\n        - noteName: 'C#4'\r\n        - name and octave: 'C#', 4\r\n\r\n\r\n        note {\r\n            name: 'C',\r\n            octave: 1,\r\n            fullName: 'C1',\r\n            frequency: 234.16,\r\n            number: 60\r\n        }\r\n    */\r\n    createNote = function () {\r\n        var args = Array.prototype.slice.call(arguments),\r\n            numArgs = args.length,\r\n            data,\r\n            warn = false,\r\n            error = false,\r\n            octave,\r\n            noteName,\r\n            noteNumber,\r\n            noteNameMode,\r\n            frequency,\r\n            arg0 = args[0],\r\n            arg1 = args[1],\r\n            arg2 = args[2];\r\n\r\n\r\n        // arg: note number\r\n        if (numArgs === 1 && !isNaN(arg0)) {\r\n            if (arg0 < 0 || arg0 > 127) {\r\n                error = 'please provide a note number >= 0 and <= 127', arg0;\r\n            } else {\r\n                noteNumber = arg0;\r\n                data = getNoteName(noteNumber);\r\n                noteName = data[0];\r\n                octave = data[1];\r\n            }\r\n\r\n            // arguments: full note name\r\n        } else if (numArgs === 1 && typeString(arg0) === 'string') {\r\n            data = checkNoteName(arg0);\r\n            if (!data) {\r\n                error = arg0 + ' is not a valid note name, please use letters A - G and if necessary an accidental like #, ##, b or bb, followed by a number for the octave';\r\n            } else {\r\n                noteName = data[0];\r\n                octave = data[1];\r\n                noteNumber = getNoteNumber(noteName, octave);\r\n                if (!noteNumber) {\r\n                    error = arg0 + ' is not a valid note name, please use letters A - G and if necessary an accidental like #, ##, b or bb, followed by a number for the octave';\r\n                } else if (noteNumber < 0 || noteNumber > 127) {\r\n                    error = 'please provide a note between C0 and G10';\r\n                }\r\n            }\r\n\r\n            // arguments: note name, octave\r\n        } else if (numArgs === 2 && typeString(arg0) === 'string' && !isNaN(arg1)) {\r\n            data = checkNoteName(arg0, arg1);\r\n            if (!data) {\r\n                error = arg0 + ' is not a valid note name, please use letters A - G and if necessary an accidental like #, ##, b or bb';\r\n            } else {\r\n                noteName = data[0];\r\n                octave = data[1];\r\n                noteNumber = getNoteNumber(noteName, octave);\r\n                if (!noteNumber) {\r\n                    error = noteName + ' is not a valid note name, please use letters A - G and if necessary an accidental like #, ##, b or bb';\r\n                } else if (noteNumber < 0 || noteNumber > 127) {\r\n                    error = 'please provide a note between C0 and G10';\r\n                }\r\n            }\r\n\r\n            // arguments: full note name, note name mode\r\n        } else if (numArgs === 2 && typeString(arg0) === 'string' && typeString(arg1) === 'string') {\r\n            data = checkNoteName(arg0);\r\n            if (!data) {\r\n                error = arg0 + ' is not a valid note name, please use letters A - G and if necessary an accidental like #, ##, b or bb, followed by a number for the octave';\r\n            } else {\r\n                noteNameMode = isNoteMode(arg1);\r\n                if (!noteNameMode) {\r\n                    noteNameMode = sequencer.noteNameMode;\r\n                    warn = arg1 + ' is not a valid note name mode, using ' + noteNameMode;\r\n                }\r\n                noteName = data[0];\r\n                octave = data[1];\r\n                noteNumber = getNoteNumber(noteName, octave);\r\n                if (!noteNumber) {\r\n                    error = noteName + ' is not a valid note name, please use letters A - G and if necessary an accidental like #, ##, b or bb, followed by a number for the octave';\r\n                } else if (noteNumber < 0 || noteNumber > 127) {\r\n                    error = 'please provide a note between C0 and G10';\r\n                }\r\n                noteName = getNoteName(noteNumber, noteNameMode)[0];\r\n            }\r\n\r\n\r\n            // arguments: note number, note name mode\r\n        } else if (numArgs === 2 && typeString(arg0) === 'number' && typeString(arg1) === 'string') {\r\n            if (arg0 < 0 || arg0 > 127) {\r\n                error = 'please provide a note number >= 0 and <= 127', arg0;\r\n            } else {\r\n                noteNameMode = isNoteMode(arg1);\r\n                if (!noteNameMode) {\r\n                    noteNameMode = sequencer.noteNameMode;\r\n                    warn = arg1 + ' is not a valid note name mode, using ' + noteNameMode;\r\n                }\r\n                noteNumber = arg0;\r\n                data = getNoteName(noteNumber, noteNameMode);\r\n                noteName = data[0];\r\n                octave = data[1];\r\n                noteName = getNoteName(noteNumber, noteNameMode)[0];\r\n            }\r\n\r\n\r\n            // arguments: note name, octave, note name mode\r\n        } else if (numArgs === 3 && typeString(arg0) === 'string' && !isNaN(arg1) && typeString(arg2) === 'string') {\r\n            data = checkNoteName(arg0, arg1);\r\n            if (!data) {\r\n                error = arg0 + ' is not a valid note name, please use letters A - G and if necessary an accidental like #, ##, b or bb, followed by a number for the octave';\r\n            } else {\r\n                noteNameMode = isNoteMode(arg2);\r\n                if (!noteNameMode) {\r\n                    noteNameMode = sequencer.noteNameMode;\r\n                    warn = arg2 + ' is not a valid note name mode, using ' + noteNameMode;\r\n                }\r\n                noteName = data[0];\r\n                octave = data[1];\r\n                noteNumber = getNoteNumber(noteName, octave);\r\n                if (!noteNumber) {\r\n                    error = noteName + ' is not a valid note name, please use letters A - G and if necessary an accidental like #, ##, b or bb, followed by a number for the octave';\r\n                } else if (noteNumber < 0 || noteNumber > 127) {\r\n                    error = 'please provide a note between C0 and G10';\r\n                }\r\n                noteName = getNoteName(noteNumber, noteNameMode)[0];\r\n            }\r\n        } else {\r\n            error = 'wrong arguments, please consult documentation';\r\n        }\r\n\r\n        if (error) {\r\n            console.error(error);\r\n            return false;\r\n        }\r\n\r\n        if (warn) {\r\n            console.warn(warn);\r\n        }\r\n\r\n        frequency = getFrequency(noteNumber);\r\n        //console.log(noteName,octave,noteNumber,frequency);\r\n\r\n        return {\r\n            name: noteName,\r\n            octave: octave,\r\n            fullName: noteName + octave,\r\n            number: noteNumber,\r\n            frequency: frequency,\r\n            blackKey: isBlackKey(noteNumber)\r\n        };\r\n\r\n    };\r\n\r\n\r\n    getNoteName = function (number, mode) {\r\n        mode = mode || sequencer.noteNameMode;\r\n        //console.log(mode);\r\n        //var octave = Math.floor((number / 12) - 2), // → in Cubase central C = C3 instead of C4\r\n        var octave = Math.floor((number / 12) - 1),\r\n            noteName = noteNames[mode][number % 12];\r\n        return [noteName, octave];\r\n    };\r\n\r\n\r\n    getNoteNumber = function (name, octave, mode) {\r\n        var key, index, i, maxi, number;\r\n        //mode = mode || sequencer.noteNameMode;\r\n\r\n        //if(mode){}\r\n\r\n        for (key in noteNames) {\r\n            if (noteNames.hasOwnProperty(key)) {\r\n                mode = noteNames[key];\r\n                //console.log(key);\r\n                for (i = 0, maxi = mode.length; i < maxi; i = i + 1) {\r\n                    //console.log(mode[i],name,i);\r\n                    if (mode[i] === name) {\r\n                        index = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (index === -1) {\r\n            return false;\r\n        }\r\n\r\n        //number = (index + 12) + (octave * 12) + 12; // → in Cubase central C = C3 instead of C4\r\n        number = (index + 12) + (octave * 12);// → midi standard + scientific naming, see: http://en.wikipedia.org/wiki/Middle_C and http://en.wikipedia.org/wiki/Scientific_pitch_notation\r\n        return number;\r\n    };\r\n\r\n\r\n    getFrequency = function (number) {\r\n        return sequencer.pitch * pow(2, (number - 69) / 12); // midi standard, see: http://en.wikipedia.org/wiki/MIDI_Tuning_Standard\r\n    };\r\n\r\n\r\n    function getPitch(hertz) {\r\n        //fm  =  2(m−69)/12(440 Hz).\r\n    }\r\n\r\n\r\n    checkNoteName = function () {\r\n        var\r\n            args = Array.prototype.slice.call(arguments),\r\n            numArgs = args.length,\r\n            arg0 = args[0],\r\n            arg1 = args[1],\r\n            length, i, char,\r\n            name,\r\n            octave;\r\n\r\n\r\n        if (numArgs === 1 && typeString(arg0) === 'string') {\r\n\r\n            length = arg0.length;\r\n            name = '';\r\n            octave = '';\r\n\r\n            for (i = 0; i < length; i++) {\r\n                char = arg0[i];\r\n                if (isNaN(char) && char !== '-') {\r\n                    name += char;\r\n                } else {\r\n                    octave += char;\r\n                }\r\n            }\r\n\r\n            if (octave === '') {\r\n                octave = 0;\r\n            }\r\n\r\n        } else if (numArgs === 2 && typeString(arg0) === 'string' && !isNaN(arg1)) {\r\n\r\n            name = arg0;\r\n            octave = arg1;\r\n\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n        octave = parseInt(octave, 10);\r\n        name = name.substring(0, 1).toUpperCase() + name.substring(1);\r\n\r\n        //console.log(name,'|',octave);\r\n        return [name, octave];\r\n    };\r\n\r\n\r\n    isNoteMode = function (mode) {\r\n        var result = false;\r\n        switch (mode) {\r\n            case 'sharp':\r\n            case 'flat':\r\n            case 'enharmonic-sharp':\r\n            case 'enharmonic-flat':\r\n                result = mode;\r\n                break;\r\n        }\r\n        return result;\r\n    };\r\n\r\n\r\n    isBlackKey = function (noteNumber) {\r\n        var black;\r\n\r\n        switch (true) {\r\n            case noteNumber % 12 === 1://C#\r\n            case noteNumber % 12 === 3://D#\r\n            case noteNumber % 12 === 6://F#\r\n            case noteNumber % 12 === 8://G#\r\n            case noteNumber % 12 === 10://A#\r\n                black = true;\r\n                break;\r\n            default:\r\n                black = false;\r\n        }\r\n\r\n        return black;\r\n    };\r\n\r\n    ///*\r\n    sequencer.getNoteNumber = function () {\r\n        var note = createNote.apply(this, arguments);\r\n        if (note) {\r\n            return note.number;\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    sequencer.getNoteName = function () {\r\n        var note = createNote.apply(this, arguments);\r\n        if (note) {\r\n            return note.name;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    sequencer.getNoteNameFromNoteNumber = function (number, mode) {\r\n        return getNoteName(number, mode);\r\n    };\r\n\r\n\r\n    sequencer.getNoteOctave = function () {\r\n        var note = createNote.apply(this, arguments);\r\n        if (note) {\r\n            return note.octave;\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    sequencer.getFullNoteName = function () {\r\n        var note = createNote.apply(this, arguments);\r\n        if (note) {\r\n            return note.fullName;\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    sequencer.getFrequency = function () {\r\n        var note = createNote.apply(this, arguments);\r\n        if (note) {\r\n            return note.frequency;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    //*/\r\n    sequencer.isBlackKey = function () {\r\n        var note = createNote.apply(this, arguments);\r\n        if (note) {\r\n            return note.blackKey;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    /*\r\n        sequencer.SHARP = 'sharp';\r\n        sequencer.FLAT = 'flat';\r\n        sequencer.ENHARMONIC_SHARP = 'enharmonic-sharp';\r\n        sequencer.ENHARMONIC_FLAT = 'enharmonic-flat';\r\n    */\r\n\r\n    Object.defineProperty(sequencer, 'SHARP', { value: 'sharp' });\r\n    Object.defineProperty(sequencer, 'FLAT', { value: 'flat' });\r\n    Object.defineProperty(sequencer, 'ENHARMONIC_SHARP', { value: 'enharmonic-sharp' });\r\n    Object.defineProperty(sequencer, 'ENHARMONIC_FLAT', { value: 'enharmonic-flat' });\r\n\r\n    sequencer.createNote = createNote;\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n        typeString = sequencer.protectedScope.typeString;\r\n    });\r\n\r\n}function parseEvents() {\r\n\r\n    'use strict';\r\n\r\n    var\r\n        round = Math.round,\r\n\r\n        precision = Math.pow(10, sequencer.precision),\r\n\r\n        //local\r\n        factor,\r\n        nominator,\r\n        denominator,\r\n\r\n        bar,\r\n        beat,\r\n        sixteenth,\r\n        tick,\r\n\r\n        ticksPerBar,\r\n        ticksPerBeat,\r\n        ticksPerSixteenth,\r\n        numSixteenth,\r\n        millisPerTick,\r\n        secondsPerTick,\r\n\r\n        millis,\r\n\r\n        bpm;\r\n\r\n    // public\r\n    function parse(song, events) {\r\n\r\n        var event,\r\n            numEvents,\r\n            startEvent = 0,\r\n            lastEventTick = 0,\r\n            diffTicks,\r\n            i;\r\n\r\n        numEvents = events.length;\r\n        //console.log('parseEvents', numEvents);\r\n        events.sort(function (a, b) {\r\n            return a.sortIndex - b.sortIndex;\r\n        });\r\n\r\n        getDataFromEvent(song.timeEvents[0]);\r\n\r\n        for (i = startEvent; i < numEvents; i++) {\r\n\r\n            event = events[i];\r\n            //console.log(i, event);\r\n            diffTicks = event.ticks - lastEventTick;\r\n            tick += diffTicks;\r\n\r\n            while (tick >= ticksPerSixteenth) {\r\n                sixteenth++;\r\n                tick -= ticksPerSixteenth;\r\n                while (sixteenth > numSixteenth) {\r\n                    sixteenth -= numSixteenth;\r\n                    beat++;\r\n                    while (beat > nominator) {\r\n                        beat -= nominator;\r\n                        bar++;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            switch (event.type) {\r\n\r\n                case 0x51:\r\n                    bpm = event.bpm;\r\n                    millis = event.millis;\r\n                    millisPerTick = event.millisPerTick;\r\n                    secondsPerTick = event.secondsPerTick;\r\n                    //console.log(millisPerTick,event.millisPerTick);\r\n                    //console.log(event);\r\n                    break;\r\n\r\n                case 0x58:\r\n                    factor = event.factor;\r\n                    nominator = event.nominator;\r\n                    denominator = event.denominator;\r\n                    numSixteenth = event.numSixteenth;\r\n                    ticksPerBar = event.ticksPerBar;\r\n                    ticksPerBeat = event.ticksPerBeat;\r\n                    ticksPerSixteenth = event.ticksPerSixteenth;\r\n                    millis = event.millis;\r\n                    //console.log(nominator,numSixteenth,ticksPerSixteenth);\r\n                    //console.log(event);\r\n                    break;\r\n\r\n                default:\r\n                    millis = millis + (diffTicks * millisPerTick);\r\n                    updateEvent(event);\r\n            }\r\n\r\n            lastEventTick = event.ticks;\r\n        }\r\n        song.lastEventTmp = event;\r\n    }\r\n\r\n\r\n    function getDataFromEvent(event) {\r\n\r\n        bpm = event.bpm;\r\n        factor = event.factor;\r\n        nominator = event.nominator;\r\n        denominator = event.denominator;\r\n\r\n        ticksPerBar = event.ticksPerBar;\r\n        ticksPerBeat = event.ticksPerBeat;\r\n        ticksPerSixteenth = event.ticksPerSixteenth;\r\n\r\n        numSixteenth = event.numSixteenth;\r\n\r\n        millisPerTick = event.millisPerTick;\r\n        secondsPerTick = event.secondsPerTick;\r\n\r\n        millis = event.millis;\r\n\r\n        bar = event.bar;\r\n        beat = event.beat;\r\n        sixteenth = event.sixteenth;\r\n        tick = event.tick;\r\n    }\r\n\r\n\r\n    function updateEvent(event) {\r\n        var timeData, tickAsString;\r\n\r\n        timeData = sequencer.getNiceTime(millis);\r\n\r\n        event.bpm = bpm;\r\n        event.factor = factor;\r\n        event.nominator = nominator;\r\n        event.denominator = denominator;\r\n\r\n        event.ticksPerBar = ticksPerBar;\r\n        event.ticksPerBeat = ticksPerBeat;\r\n        event.ticksPerSixteenth = ticksPerSixteenth;\r\n\r\n        event.numSixteenth = numSixteenth;\r\n\r\n        event.millisPerTick = millisPerTick;\r\n        event.secondsPerTick = secondsPerTick;\r\n\r\n        event.millis = round(millis * precision) / precision;\r\n        //event.millis = millis;\r\n        //event.seconds = millis/1000;\r\n\r\n        event.hour = timeData.hour;\r\n        event.minute = timeData.minute;\r\n        event.second = timeData.second;\r\n        event.millisecond = timeData.millisecond;\r\n        event.timeAsString = timeData.timeAsString;\r\n        event.timeAsArray = timeData.timeAsArray;\r\n\r\n        event.bar = bar;\r\n        event.beat = beat;\r\n        event.sixteenth = sixteenth;\r\n        event.tick = tick;\r\n        tickAsString = tick === 0 ? '000' : tick < 10 ? '00' + tick : tick < 100 ? '0' + tick : tick;\r\n        event.barsAsString = bar + ':' + beat + ':' + sixteenth + ':' + tickAsString;\r\n        event.barsAsArray = [bar, beat, sixteenth, tick];\r\n\r\n        event.state = 'clean';\r\n        event.update();\r\n\r\n        //console.log(event.nominator, event.ticks);\r\n    }\r\n\r\n\r\n\r\n    sequencer.protectedScope.parseEvents = parse;\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n    });\r\n\r\n}\r\nfunction parseTimeEvents() {\r\n\r\n    'use strict';\r\n\r\n    var\r\n        //import\r\n        createMidiEvent, // → defined in midi_event.js\r\n\r\n        //local\r\n        ppq,\r\n        bpm,\r\n        factor,\r\n        nominator,\r\n        denominator,\r\n        playbackSpeed,\r\n\r\n        bar,\r\n        beat,\r\n        sixteenth,\r\n        tick,\r\n        ticks,\r\n        millis,\r\n\r\n        millisPerTick,\r\n        secondsPerTick,\r\n\r\n        ticksPerBeat,\r\n        ticksPerBar,\r\n        ticksPerSixteenth,\r\n        numSixteenth,\r\n\r\n        timeEvents,\r\n        numTimeEvents,\r\n        index;\r\n\r\n\r\n    function setTickDuration() {\r\n        secondsPerTick = (1 / playbackSpeed * 60) / bpm / ppq;\r\n        millisPerTick = secondsPerTick * 1000;\r\n        //console.log(millisPerTick, bpm, ppq, playbackSpeed, (ppq * millisPerTick));\r\n        //console.log(ppq);\r\n    }\r\n\r\n\r\n    function setTicksPerBeat() {\r\n        factor = (4 / denominator);\r\n        numSixteenth = factor * 4;\r\n        ticksPerBeat = ppq * factor;\r\n        ticksPerBar = ticksPerBeat * nominator;\r\n        ticksPerSixteenth = ppq / 4;\r\n        //console.log(denominator, factor, numSixteenth, ticksPerBeat, ticksPerBar, ticksPerSixteenth);\r\n    }\r\n\r\n\r\n    function parse(song) {\r\n        //console.time('parse time events ' + song.name);\r\n        var diffTicks,\r\n            event,\r\n            type,\r\n            i = 0;\r\n\r\n        if (song === undefined) {\r\n            timeEvents = [];\r\n            console.log('reset', timeEvents);\r\n            return;\r\n        }\r\n\r\n        reset(song);\r\n\r\n        //console.log('parse time events', numTimeEvents);\r\n        setTickDuration();\r\n        setTicksPerBeat();\r\n\r\n        timeEvents.sort(function (a, b) {\r\n            return a.ticks - b.ticks;\r\n        });\r\n\r\n        for (i = 0; i < numTimeEvents; i++) {\r\n\r\n            event = timeEvents[i];\r\n            event.song = song;\r\n            diffTicks = event.ticks - ticks;\r\n            tick += diffTicks;\r\n            ticks = event.ticks;\r\n            type = event.type;\r\n            //console.log(diffTicks, millisPerTick);\r\n            millis += diffTicks * millisPerTick;\r\n\r\n            while (tick >= ticksPerSixteenth) {\r\n                sixteenth++;\r\n                tick -= ticksPerSixteenth;\r\n                while (sixteenth > numSixteenth) {\r\n                    sixteenth -= numSixteenth;\r\n                    beat++;\r\n                    while (beat > nominator) {\r\n                        beat -= nominator;\r\n                        bar++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            switch (type) {\r\n\r\n                case 0x51:\r\n                    bpm = event.bpm;\r\n                    setTickDuration();\r\n                    break;\r\n\r\n                case 0x58:\r\n                    nominator = event.nominator;\r\n                    denominator = event.denominator;\r\n                    setTicksPerBeat();\r\n                    break;\r\n\r\n                default:\r\n                    continue;\r\n            }\r\n\r\n            //time data of time event is valid from (and included) the position of the time event\r\n            updateEvent(event);\r\n            //console.log(event.barsAsString);\r\n        }\r\n\r\n        song.lastEventTmp = event;\r\n        //console.log(event);\r\n        //console.log(timeEvents);\r\n    }\r\n\r\n\r\n    function reset(song) {\r\n        playbackSpeed = song.playbackSpeed;\r\n        timeEvents = song.timeEvents;\r\n        numTimeEvents = timeEvents.length;\r\n        ppq = song.ppq;\r\n        bpm = song.bpm;\r\n        nominator = song.nominator;\r\n        denominator = song.denominator;\r\n\r\n        //console.log('reset', timeEvents, numTimeEvents, bpm, ppq, nominator, denominator);\r\n        //console.log('reset', numTimeEvents, bpm, ppq, nominator, denominator);\r\n\r\n        index = 0;\r\n\r\n        bar = 1;//0\r\n        beat = 1;//0\r\n        sixteenth = 1;//0\r\n        tick = 0;\r\n        ticks = 0;\r\n        millis = 0;\r\n    }\r\n\r\n\r\n    function updateEvent(event) {\r\n\r\n        //console.log(event, bpm, millisPerTick, ticks, millis);\r\n\r\n        event.bpm = bpm;\r\n        event.nominator = nominator;\r\n        event.denominator = denominator;\r\n\r\n        event.ticksPerBar = ticksPerBar;\r\n        event.ticksPerBeat = ticksPerBeat;\r\n        event.ticksPerSixteenth = ticksPerSixteenth;\r\n\r\n        event.factor = factor;\r\n        event.numSixteenth = numSixteenth;\r\n        event.secondsPerTick = secondsPerTick;\r\n        event.millisPerTick = millisPerTick;\r\n\r\n\r\n        event.ticks = ticks;\r\n\r\n        event.millis = millis;\r\n        event.seconds = millis / 1000;\r\n\r\n\r\n        event.bar = bar;\r\n        event.beat = beat;\r\n        event.sixteenth = sixteenth;\r\n        event.tick = tick;\r\n        //event.barsAsString = (bar + 1) + ':' + (beat + 1) + ':' + (sixteenth + 1) + ':' + tick;\r\n        var tickAsString = tick === 0 ? '000' : tick < 10 ? '00' + tick : tick < 100 ? '0' + tick : tick;\r\n        event.barsAsString = bar + ':' + beat + ':' + sixteenth + ':' + tickAsString;\r\n        event.barsAsArray = [bar, beat, sixteenth, tick];\r\n\r\n\r\n        var timeData = sequencer.getNiceTime(millis);\r\n\r\n        event.hour = timeData.hour;\r\n        event.minute = timeData.minute;\r\n        event.second = timeData.second;\r\n        event.millisecond = timeData.millisecond;\r\n        event.timeAsString = timeData.timeAsString;\r\n        event.timeAsArray = timeData.timeAsArray;\r\n    }\r\n\r\n\r\n    sequencer.protectedScope.parseTimeEvents = parse;\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n        createMidiEvent = sequencer.createMidiEvent;\r\n    });\r\n\r\n}\r\n\r\n\r\n/*\r\n    scaffoldingTicks = function(song){\r\n        var end = song.ticks,\r\n            interval = 480,\r\n            range = 0,\r\n            event,\r\n            events,\r\n            numEvents,\r\n            diffTicks,\r\n            diffMillis;\r\n\r\n        song.eventRanges.ticks = {};\r\n        reset();\r\n\r\n        while(range <= end){\r\n            events = getNextTimeEvents('ticks',range);\r\n            numEvents = events.length;\r\n\r\n            if(numEvents === 0){\r\n                //add at least one event in this range\r\n                event = createMidiEvent(0,sequencer.DUMMY_EVENT);\r\n                //calculate position\r\n                diffTicks = range - ticks;\r\n                tick += diffTicks;\r\n                diffMillis = diffTicks * millisPerTick;\r\n                millis += diffMillis;\r\n\r\n                while(tick >= ticksPerSixteenth){\r\n                    sixteenth++;\r\n                    tick -= ticksPerSixteenth;\r\n                    while(sixteenth >= numSixteenth){\r\n                        sixteenth -= numSixteenth;\r\n                        beat++;\r\n                        while(beat >= nominator){\r\n                            beat -= nominator;\r\n                            bar++;\r\n                        }\r\n                    }\r\n                }\r\n                ticks = range;\r\n                updateEvent(event);\r\n                events.push(event);\r\n            }else{\r\n                getDataFromEvent(events[numEvents - 1]);\r\n            }\r\n            song.eventRanges.ticks[range] = events;\r\n            //console.log(bar+1,beat+1,sixteenth+1,tick+1);\r\n            range += interval;\r\n        }\r\n    };\r\n\r\n\r\n    scaffoldingMillis = function(song){\r\n        var end = song.durationMillis,\r\n            interval = 500,\r\n            events,\r\n            numEvents,\r\n            event,\r\n            range = 0,\r\n            diffTicks;\r\n\r\n        song.eventRanges.millis = {};\r\n        reset();\r\n\r\n        while(range <= end){\r\n            events = getNextTimeEvents('millis',range);\r\n            numEvents = events.length;\r\n            if(numEvents === 0){\r\n                //add at least one event in this range\r\n                event = createMidiEvent(range,sequencer.DUMMY_EVENT);\r\n                //calculate position data\r\n                diffTicks = (range - millis)/millisPerTick;\r\n                tick += diffTicks;\r\n                ticks += diffTicks;\r\n\r\n                while(tick >= ticksPerSixteenth){\r\n                    sixteenth++;\r\n                    tick -= ticksPerSixteenth;\r\n                    tick = tick;\r\n                    while(sixteenth >= numSixteenth){\r\n                        sixteenth -= numSixteenth;\r\n                        beat++;\r\n                        while(beat >= nominator){\r\n                            beat -= nominator;\r\n                            bar++;\r\n                        }\r\n                    }\r\n                }\r\n                millis = range;\r\n                updateEvent(event);\r\n                events.push(event);\r\n            }else{\r\n                getDataFromEvent(events[numEvents - 1]);\r\n            }\r\n            song.eventRanges.millis[range] = events;\r\n            //console.log(bar+1,beat+1,sixteenth+1,tick+1);\r\n            range += interval;\r\n        }\r\n    };\r\n\r\n\r\n    scaffoldingBars = function(){\r\n        var song = sequencer.song,\r\n            end = song.durationTicks,\r\n            range = 0,\r\n            bars = [],\r\n            event,\r\n            events,\r\n            numEvents,\r\n            diffTicks,\r\n            diffMillis;\r\n\r\n        index = 0;\r\n        getDataFromEvent(song.timeEvents[0]);\r\n\r\n        while(range <= end){\r\n            events = getNextTimeEvents('ticks',ticksPerBar);\r\n            numEvents = events.length;\r\n            if(numEvents > 0){\r\n                getDataFromEvent(events[numEvents - 1]);\r\n            }\r\n            event = createMidiEvent(0,sequencer.DUMMY_EVENT);\r\n\r\n            //calculate position of newly created event\r\n            diffTicks = range - ticks;\r\n            tick += diffTicks;\r\n            diffMillis = diffTicks * millisPerTick;\r\n            millis += diffMillis;\r\n\r\n            while(tick >= ticksPerSixteenth){\r\n                sixteenth++;\r\n                tick -= ticksPerSixteenth;\r\n                while(sixteenth >= numSixteenth){\r\n                    sixteenth -= numSixteenth;\r\n                    beat++;\r\n                    while(beat >= nominator){\r\n                        beat -= nominator;\r\n                        bar++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            ticks = range;\r\n            updateEvent(event);\r\n            bars.push(event);\r\n            range += ticksPerBar;\r\n        }\r\n        return bars;\r\n    };\r\n\r\n\r\n\r\n    sequencer.protectedScope.createScaffolding = function(song){\r\n        reset(song);\r\n        scaffoldingTicks(song);\r\n        scaffoldingMillis(song);\r\n        console.log(song.eventRanges);\r\n    };\r\n\r\n    sequencer.protectedScope.getScaffoldingBars = scaffoldingBars;\r\n\r\n\r\n*/\r\nfunction part() {\r\n\r\n    'use strict';\r\n\r\n    var\r\n        //import\r\n        createMidiNote, // → defined in midi_note.js\r\n        createMidiEvent, // → defined in midi_event.js\r\n        copyName, // → defined in utils.js\r\n        typeString, // → defined in utils.js\r\n\r\n        findEvent, // → defined in find_event.js\r\n        findNote, // → defined in find_event.js\r\n        getStats, // → defined in event_statistics.js\r\n\r\n        //private\r\n        getEvent,\r\n        addEvents,\r\n        moveEvents,\r\n        removeEvents,\r\n        transposeEvents,\r\n        getEventsAndConfig,\r\n\r\n        reverseByPitch,\r\n        reverseByTicks,\r\n\r\n        partId = 0,\r\n\r\n        //public/protected\r\n        Part;\r\n\r\n\r\n    Part = function (name) {\r\n        this.className = 'Part';\r\n        this.id = 'P' + partId++ + '' + new Date().getTime();\r\n        this.partIndex = partId;\r\n        this.name = name || this.id;\r\n\r\n        this.events = [];\r\n        this.eventsById = {};\r\n        this.numEvents = 0;\r\n\r\n        this.notes = [];\r\n        this.notesById = {};\r\n        this.numNotes = 0;\r\n\r\n        this.dirtyEvents = {};\r\n        this.dirtyNotes = {};\r\n\r\n        this.song = undefined;\r\n        this.autoSize = 'right'; // 'right' or 'both'\r\n\r\n        this.ticks = 0;\r\n        this.millis = 0;\r\n        this.start = {\r\n            ticks: this.ticks,\r\n            millis: this.millis\r\n        };\r\n        this.end = {\r\n            ticks: 0,\r\n            millis: 0\r\n        };\r\n        this.duration = {\r\n            ticks: 0,\r\n            millis: 0\r\n        };\r\n        this.startPosition = undefined;\r\n        this.endPosition = undefined;\r\n\r\n        //this.fixedPitch = false;\r\n        this.needsUpdate = false;\r\n        this.state = 'clean';\r\n        this.mute = false;\r\n        this.solo = false;\r\n        this.keepWhenEmpty = true; // if set to false, the parts gets deleted automatically if it contains no events\r\n    };\r\n\r\n    getEventsAndConfig = function (args, part) {\r\n\r\n        args = Array.prototype.slice.call(args);\r\n\r\n        var\r\n            j = 0,\r\n            i = 0,\r\n            maxi,\r\n            e,\r\n            arg,\r\n            arg0 = args[0],\r\n            events = [],\r\n            config = [];\r\n\r\n        //console.log(args, arg0);\r\n\r\n        if (typeString(arg0) === 'array') {\r\n\r\n            for (i = arg0.length - 1; i >= 0; i--) {\r\n                arg = arg0[i];\r\n                e = getEvent(arg, part);\r\n                if (e) {\r\n                    events.push(e);\r\n                }\r\n            }\r\n            j = events.length === 0 ? 0 : 1;\r\n        }\r\n\r\n        maxi = args.length;\r\n        for (i = j; i < maxi; i++) {\r\n            arg = args[i];\r\n            e = getEvent(arg, part);\r\n            if (e) {\r\n                events.push(e);\r\n            } else {\r\n                config.push(arg);\r\n            }\r\n        }\r\n\r\n        if (events.length === 0) {\r\n            //console.error('Please provide one or more events, event ids, event indices, or an array of events, events ids, event indices');\r\n            if (sequencer.debug) {\r\n                console.warn('no events added', part.name);\r\n            }\r\n            return false;\r\n        }\r\n\r\n        if (config.length === 1 && typeString(config[0]) === 'array') {\r\n            config = config[0];\r\n        }\r\n\r\n        //console.log(events, config);\r\n\r\n        return {\r\n            events: events,\r\n            config: config\r\n        };\r\n    };\r\n\r\n\r\n\r\n    getEvent = function (data, part) {\r\n        var event = false;\r\n        if (!data) {\r\n            event = false;\r\n        } else if (data.className === 'MidiEvent' || data.className === 'AudioEvent') {\r\n            // new event\r\n            event = data;\r\n        } else if (typeString(data) === 'array' && data.length === 4) {\r\n            // new event as array\r\n            event = createMidiEvent(data);\r\n        } else if (typeString(data) === 'string') {\r\n            // get by id\r\n            event = part.eventsById[data];\r\n        } else if (isNaN(data) === false) {\r\n            // get by index\r\n            event = part.events[data];\r\n        }\r\n        return event;\r\n    };\r\n\r\n\r\n\r\n    addEvents = function (args, part, relative) {\r\n        if (args === false) {\r\n            return;\r\n        }\r\n        var i, e,\r\n            newEvents = args.events,\r\n            ticks = part.ticks,\r\n            maxi = newEvents.length,\r\n            track = part.track,\r\n            eventsById = part.eventsById;\r\n\r\n        //console.log(newEvents);\r\n\r\n        //for(i = newEvents.length - 1; i >=0; i--){\r\n        for (i = 0; i < maxi; i++) {\r\n\r\n            e = newEvents[i];\r\n\r\n            if (e.type === sequencer.END_OF_TRACK || (e.className !== 'MidiEvent' && e.className !== 'AudioEvent')) {\r\n                continue;\r\n            }\r\n            if (e.className === 'AudioEvent' && part.hasAudioEvents !== true) {\r\n                part.hasAudioEvents = true;\r\n            }\r\n\r\n            if (e.part !== undefined) {\r\n                //console.warn('this event has already been added to part', e.part.id, ', adding a copy to', part.id);\r\n                e = e.clone();\r\n            }\r\n\r\n            e.part = part;\r\n            e.partId = part.id;\r\n\r\n            if (relative) {\r\n                ticks += e.ticks;\r\n                e.ticks = ticks;\r\n            }\r\n\r\n            e.track = track;\r\n            e.trackId = track ? track.id : undefined;\r\n\r\n            e.song = undefined;\r\n            if (track !== undefined) {\r\n                e.song = track.song;\r\n            }\r\n\r\n            if (e.state !== 'recorded') {\r\n                e.state = 'new';\r\n            }\r\n            eventsById[e.id] = e;\r\n        }\r\n\r\n        if (part.state !== 'new') {\r\n            part.state = 'changed';\r\n        }\r\n        part.needsUpdate = true;\r\n    };\r\n\r\n\r\n    transposeEvents = function (args, part) {\r\n        //if(args === false || part.fixedPitch === true){\r\n        if (args === false) {\r\n            return;\r\n        }\r\n        var i, e,\r\n            events = args.events,\r\n            semi = args.config[0];\r\n\r\n        //console.log(semi, args);\r\n\r\n        for (i = events.length - 1; i >= 0; i--) {\r\n            e = events[i];\r\n            e.transpose(semi);\r\n            /*\r\n                // moved to midi_event.js\r\n                if(e.state !== 'new'){\r\n                    e.state = 'changed';\r\n                }\r\n            */\r\n            //console.log(e.state);\r\n        }\r\n        //part.needsUpdate = true; -> moved to midi_event.js\r\n        if (part.state !== 'new' && part.track !== undefined) {\r\n            part.state = 'changed';\r\n            part.track.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    moveEvents = function (args, part) {\r\n        if (args === false) {\r\n            return;\r\n        }\r\n        var i, e, newTicks,\r\n            events = args.events,\r\n            ticks = args.config[0];\r\n        //console.log('moveEvents', events, ticks, events.length);\r\n        if (isNaN(ticks)) {\r\n            console.warn('Part.moveEvent(s) -> please provide a number');\r\n            return;\r\n        }\r\n\r\n        for (i = events.length - 1; i >= 0; i--) {\r\n            e = events[i];\r\n            newTicks = e.ticks + ticks;\r\n\r\n            if (newTicks < 0) {\r\n                newTicks = 0;\r\n            }\r\n            e.ticks = newTicks;\r\n\r\n            if (e.state !== 'new') {\r\n                e.state = 'changed';\r\n            }\r\n        }\r\n        part.needsUpdate = true;\r\n        if (part.state !== 'new' && part.track) {\r\n            part.state = 'changed';\r\n            part.track.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    removeEvents = function (tobeRemoved, part) {\r\n        var i, event,\r\n            removed = [];\r\n\r\n        //console.log('removeEvents', tobeRemoved);\r\n\r\n        for (i = tobeRemoved.length - 1; i >= 0; i--) {\r\n            event = getEvent(tobeRemoved[i], part);\r\n            if (event === false) {\r\n                continue;\r\n            }\r\n            // console.log('removing event', e);\r\n            if (event.part !== part && event.part !== null) {\r\n                console.warn('can\\'t remove: this event belongs to part', event.part.id);\r\n                continue;\r\n            }\r\n            event.state = 'removed';\r\n            event.reset();\r\n            removed.push(event);\r\n        }\r\n        if (part.track !== undefined) {\r\n            part.track.needsUpdate = true;\r\n        }\r\n        part.needsUpdate = true;\r\n        return removed;\r\n    };\r\n\r\n\r\n    reverseByPitch = function (part) {\r\n        var notes = part.notes,\r\n            min = part.lowestNote,\r\n            max = part.highestNote,\r\n            on, off,\r\n            i, note;\r\n\r\n        for (i = notes.length - 1; i >= 0; i--) {\r\n            note = notes[i];\r\n            note.setPitch(min + (max - note.number));\r\n            on = note.noteOn;\r\n            off = note.noteOff;\r\n            on.state = 'changed';\r\n            off.state = 'changed';\r\n            note.state = 'changed';\r\n        }\r\n        part.needsUpdate = true;\r\n        if (part.state !== 'new' && part.track) {\r\n            part.state = 'changed';\r\n            part.track.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    reverseByTicks = function (part, durationTicks) {\r\n        var notes = part.notes,\r\n            note, on, off, onTicks, offTicks, i;\r\n\r\n        durationTicks = durationTicks || part.duration.ticks;\r\n\r\n        for (i = notes.length - 1; i >= 0; i--) {\r\n            note = notes[i];\r\n            on = note.noteOn;\r\n            off = note.noteOff;\r\n\r\n            onTicks = durationTicks - off.ticks;\r\n            offTicks = durationTicks - on.ticks;\r\n\r\n            on.ticks = onTicks;\r\n            off.ticks = offTicks;\r\n            note.ticks = onTicks;\r\n            //console.log('on', onTicks, 'off', offTicks, note.noteOn.ticks, note.noteOff.ticks);\r\n            on.state = 'changed';\r\n            off.state = 'changed';\r\n            note.state = 'changed';\r\n        }\r\n        part.needsUpdate = true;\r\n        if (part.state !== 'new' && part.track) {\r\n            part.state = 'changed';\r\n            part.track.needsUpdate = true;\r\n        }\r\n    };\r\n\r\n\r\n    Part.prototype.addEvent = Part.prototype.addEvents = function () {//events\r\n        //console.log(arguments);\r\n        var args = getEventsAndConfig(arguments, this);\r\n        //console.log(args.events, args.config);\r\n        addEvents(args, this, false);\r\n    };\r\n\r\n\r\n    Part.prototype.addEventsRelative = function () {//events\r\n        var args = getEventsAndConfig(arguments, this);\r\n        addEvents(args, this, true);\r\n    };\r\n\r\n\r\n    Part.prototype.removeEvent = Part.prototype.removeEvents = function () {//events\r\n        var args = getEventsAndConfig(arguments, this);\r\n        if (args === false) {\r\n            return false;\r\n        }\r\n        return removeEvents(args.events, this);\r\n    };\r\n\r\n\r\n    Part.prototype.moveEvent = Part.prototype.moveEvents = function () {//events, ticks\r\n        var args = getEventsAndConfig(arguments, this);\r\n        //console.log(args)\r\n        moveEvents(args, this);\r\n    };\r\n\r\n    Part.prototype.moveAllEvents = function (ticks) {//events, ticks\r\n        //console.log(args)\r\n        moveEvents({ events: this.events, config: [ticks] }, this);\r\n    };\r\n\r\n\r\n    Part.prototype.moveNote = function (note, ticks) {\r\n        moveEvents({ events: [note.noteOn, note.noteOff], config: [ticks] }, this);\r\n    };\r\n\r\n\r\n    Part.prototype.transposeEvents = function () {//events, semi\r\n        var args = getEventsAndConfig(arguments, this);\r\n        transposeEvents(args, this);\r\n    };\r\n\r\n\r\n    Part.prototype.transposeAllEvents = function (semi) {\r\n        //console.log('transposeAllEvents', semi);\r\n        transposeEvents({ events: this.events, config: [semi] }, this);\r\n    };\r\n\r\n\r\n    Part.prototype.transposeNote = function (note, semi) {\r\n        //console.log('transposeNote', semi);\r\n        transposeEvents({ events: [note.noteOn, note.noteOff], config: [semi] }, this);\r\n    };\r\n    /*\r\n        Part.prototype.setNotePitch = function(note, pitch){\r\n            note.setPitch(pitch);\r\n        };\r\n    */\r\n\r\n    Part.prototype.reverseByTicks = function (duration) {\r\n        if (this.needsUpdate) {\r\n            this.update();\r\n        }\r\n        reverseByTicks(this, duration);\r\n    };\r\n\r\n\r\n    Part.prototype.reverseByPitch = function () {\r\n        if (this.needsUpdate) {\r\n            this.update();\r\n        }\r\n        reverseByPitch(this);\r\n    };\r\n\r\n\r\n    Part.prototype.findEvents = function (pattern) {\r\n        return findEvent(this, pattern);\r\n    };\r\n\r\n\r\n    Part.prototype.findNotes = function (pattern) {\r\n        return findNote(this, pattern);\r\n    };\r\n\r\n\r\n    Part.prototype.getStats = function (pattern) {\r\n        return getStats(this, pattern);\r\n    };\r\n\r\n\r\n    Part.prototype.getIndex = function () {\r\n        var parts, part, i;\r\n\r\n        if (this.track) {\r\n            parts = this.track.parts;\r\n\r\n            for (i = this.track.numParts - 1; i >= 0; i--) {\r\n                part = parts[i];\r\n                if (part.id === this.id) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n    };\r\n\r\n\r\n    Part.prototype.copy = function () {\r\n        var part = new Part(copyName(this.name)),\r\n            partTicks = this.ticks,\r\n            eventsById = this.eventsById,\r\n            copies = [],\r\n            copy, id, event;\r\n        //console.log('Part.copy', events);\r\n\r\n        part.song = undefined;\r\n        part.track = undefined;\r\n        part.trackId = undefined;\r\n\r\n        for (id in eventsById) {\r\n            if (eventsById.hasOwnProperty(id)) {\r\n                event = eventsById[id];\r\n                copy = event.copy();\r\n                //console.log(copy.ticks, partTicks);\r\n                copy.ticks = copy.ticks - partTicks;\r\n                copies.push(copy);\r\n            }\r\n        }\r\n        part.addEvents(copies);\r\n        return part;\r\n    };\r\n\r\n    Part.prototype.setSolo = function (flag) {\r\n        if (flag === undefined) {\r\n            flag = !this.solo;\r\n        }\r\n        this.mute = false;\r\n        this.solo = flag;\r\n        // stop all sounds here\r\n        this.allNotesOff();\r\n        if (this.track) {\r\n            this.track.setPartSolo(this, flag);\r\n        }\r\n        //console.log(this.solo, this.mute);\r\n    };\r\n\r\n\r\n    Part.prototype.allNotesOff = function () {\r\n        if (this.track === undefined) {\r\n            return;\r\n        }\r\n        this.track.instrument.allNotesOffPart(this.id);\r\n    };\r\n\r\n\r\n    // called by Track if a part gets removed from a track\r\n    Part.prototype.reset = function (fromTrack, fromSong) {\r\n        var eventsById = this.eventsById,\r\n            id, event;\r\n\r\n        if (fromSong) {\r\n            this.song = undefined;\r\n        }\r\n        if (fromTrack) {\r\n            this.track = undefined;\r\n        }\r\n        this.trackId = undefined;\r\n        this.start.millis = undefined;\r\n        this.end.millis = undefined;\r\n\r\n        for (id in eventsById) {\r\n            if (eventsById.hasOwnProperty(id)) {\r\n                event = eventsById[id];\r\n                event.ticks -= this.ticks;\r\n                event.reset(false, fromTrack, fromSong);\r\n                //event.state = 'removed';\r\n            }\r\n        }\r\n        this.ticks = 0;\r\n        this.needsUpdate = true;\r\n    };\r\n\r\n\r\n    Part.prototype.update = function () {\r\n        //console.log('part update');\r\n\r\n        var i, maxi, j, maxj, id, event, noteNumber, note, onEvents, onEvent,\r\n            firstEvent, lastEvent, stats,\r\n            noteOnEvents = [],\r\n            notes = [],\r\n            numNotes = 0,\r\n            part = this,\r\n            partId = this.id,\r\n            track = this.track,\r\n            trackId = this.track ? this.track.id : undefined;\r\n\r\n        // if(!trackId){\r\n        //     console.log(this, 'does not belong to a track anymore');\r\n        // }\r\n\r\n        //console.log('Part.update()', this.state, this.eventsById);\r\n\r\n        this.events = [];\r\n\r\n        for (id in this.eventsById) {\r\n            if (this.eventsById.hasOwnProperty(id)) {\r\n                event = this.eventsById[id];\r\n                //console.log(event);\r\n                if (event.state !== 'clean') {\r\n                    //console.log(event.state);\r\n                    this.dirtyEvents[event.id] = event;\r\n                }\r\n\r\n                if (event.state !== 'removed') {\r\n                    this.events.push(event);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.events.sort(function (a, b) {\r\n            return a.sortIndex - b.sortIndex;\r\n        });\r\n\r\n\r\n        for (i = 0, maxi = this.notes.length; i < maxi; i++) {\r\n            note = this.notes[i];\r\n            //console.log(note.noteOn.state);\r\n            if (note.noteOn.state === 'removed' || (note.noteOff !== undefined && note.noteOff.state === 'removed')) {\r\n                note.state = 'removed';\r\n                this.dirtyNotes[note.id] = note;\r\n                delete this.notesById[note.id];\r\n            } else if (note.noteOn.state === 'changed' || (note.noteOff !== undefined && note.noteOff.state === 'changed')) {\r\n                note.state = 'changed';\r\n                this.dirtyNotes[note.id] = note;\r\n            }\r\n        }\r\n\r\n        //console.log('part', this.events.length);\r\n\r\n        for (i = 0, maxi = this.events.length; i < maxi; i++) {\r\n            event = this.events[i];\r\n            noteNumber = event.noteNumber;\r\n\r\n            if (event.type === sequencer.NOTE_ON) {\r\n                if (event.midiNote === undefined) {\r\n\r\n                    /*\r\n                    if(noteOnEvents[noteNumber] === undefined){\r\n                        noteOnEvents[noteNumber] = [];\r\n                    }\r\n                    noteOnEvents[noteNumber].push(event);\r\n                    */\r\n\r\n\r\n                    //console.log(i, 'NOTE_ON', event.eventNumber, noteNumber, noteOnEvents[noteNumber]);\r\n                    note = createMidiNote(event);\r\n                    note.part = part;\r\n                    note.partId = partId;\r\n                    note.track = track;\r\n                    note.trackId = trackId;\r\n                    note.state = 'new';\r\n                    this.notesById[note.id] = note;\r\n                    this.dirtyNotes[note.id] = note;\r\n                    if (notes[noteNumber] === undefined) {\r\n                        notes[noteNumber] = [];\r\n                    }\r\n                    notes[noteNumber].push(note);\r\n                    //console.log('create note:', note.id, 'for:', noteNumber, 'ticks:', event.ticks);\r\n                }\r\n            } else if (event.type === sequencer.NOTE_OFF) {\r\n                //console.log(event.midiNote);\r\n                if (event.midiNote === undefined) {\r\n                    if (notes[noteNumber] === undefined) {\r\n                        //console.log('no note!', noteNumber);\r\n                        continue;\r\n                    }\r\n\r\n                    var l = notes[noteNumber].length - 1;\r\n                    note = notes[noteNumber][l];\r\n                    if (note.noteOff !== undefined && note.durationTicks > 0) {\r\n                        //console.log('has already a note off event!', noteNumber, note.durationTicks, note.noteOff.ticks, event.ticks);\r\n                        continue;\r\n                    }\r\n                    /*\r\n                                        // get the lastly added note\r\n                                        var l = notes[noteNumber].length - 1;\r\n                                        var t = 0;\r\n                                        note = null;\r\n                    \r\n                                        while(t <= l){\r\n                                            note = notes[noteNumber][t];\r\n                                            if(note.noteOff === undefined){\r\n                                                break;\r\n                                            }\r\n                                            t++\r\n                                        }\r\n                    */\r\n                    if (note === null) {\r\n                        continue;\r\n                    }\r\n\r\n                    //console.log('add note off to note:', note.id, 'for:', noteNumber, 'ticks:', event.ticks, 'num note on:', l, 'index:', t);\r\n                    if (note.noteOn === undefined) {\r\n                        //console.log('no NOTE ON');\r\n                        continue;\r\n                    }\r\n                    if (note.state !== 'new') {\r\n                        note.state = 'changed';\r\n                    }\r\n                    this.dirtyNotes[note.id] = note;\r\n                    note.addNoteOff(event);\r\n\r\n\r\n                    /*\r\n                    onEvents = noteOnEvents[noteNumber];\r\n                    if(onEvents){\r\n                        onEvent = onEvents.shift();\r\n                        //console.log(note.midiNote);\r\n                        if(onEvent && onEvent.midiNote){\r\n                            note = onEvent.midiNote;\r\n                            if(note.state !== 'new'){\r\n                                note.state = 'changed';\r\n                            }\r\n                            this.dirtyNotes[note.id] = note;\r\n                            if(event.ticks - note.noteOn.ticks === 0){\r\n                                console.log(note.noteOn.ticks, event.ticks);\r\n                                note.adjusted = true;\r\n                                //event.ticks += 120;\r\n                            }\r\n                            note.addNoteOff(event);\r\n                            //console.log(i, 'NOTE_OFF', event.midiNote);\r\n                        }\r\n                    }else{\r\n                        maxj = this.notes.length;\r\n                        for(j = maxj - 1; j >= 0; j--){\r\n                            note = this.notes[j];\r\n                            if(note.number === event.noteNumber){\r\n                                note.state = 'changed';\r\n                                note.addNoteOff(event);\r\n                                this.dirtyNotes[note.id] = note;\r\n                                //console.log(note.id);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    */\r\n\r\n                } else if (this.notesById[event.midiNote.id] === undefined) {\r\n                    //console.log('not here');\r\n                    // note is recorded and has already a duration\r\n                    note = event.midiNote;\r\n                    //console.log('recorded notes', note.id);\r\n                    //note.state = 'new';\r\n                    note.part = part;\r\n                    note.partId = partId;\r\n                    note.track = track;\r\n                    note.trackId = trackId;\r\n                    //this.dirtyNotes[note.id] = note;\r\n                    this.notesById[note.id] = note;\r\n                } else {\r\n                    //console.log('certainly not here');\r\n                }\r\n            }\r\n        }\r\n\r\n        this.notes = [];\r\n        notes = null;\r\n        for (id in this.notesById) {\r\n            if (this.notesById.hasOwnProperty(id)) {\r\n                note = this.notesById[id];\r\n                this.notes.push(note);\r\n            }\r\n        }\r\n\r\n        this.notes.sort(function (a, b) {\r\n            return a.ticks - b.ticks;\r\n        });\r\n\r\n        this.numEvents = this.events.length;\r\n        this.numNotes = this.notes.length;\r\n\r\n        //console.log(this.numEvents, this.numNotes);\r\n\r\n        firstEvent = this.events[0];\r\n        lastEvent = this.events[this.numEvents - 1];\r\n\r\n        //console.log(firstEvent.ticks, lastEvent.ticks);\r\n\r\n        if (firstEvent) {\r\n            if (firstEvent.ticks < this.ticks) {\r\n                this.autoSize = 'both';\r\n            }\r\n\r\n            switch (this.autoSize) {\r\n                case 'right':\r\n                    this.start.ticks = this.ticks;\r\n                    this.end.ticks = lastEvent.ticks;\r\n                    this.duration.ticks = lastEvent.ticks - this.start.ticks;\r\n                    break;\r\n                case 'both':\r\n                    this.start.ticks = firstEvent.ticks;\r\n                    this.end.ticks = lastEvent.ticks;\r\n                    this.duration.ticks = lastEvent.ticks - firstEvent.ticks;\r\n                    break;\r\n            }\r\n        } else {\r\n            // fixing issue #6\r\n            this.start.ticks = this.ticks;\r\n            this.end.ticks = this.ticks + 100; // give the part a minimal duration of 100 ticks\r\n            this.duration.ticks = 100;\r\n        }\r\n\r\n        stats = this.getStats('noteNumber all');\r\n        this.lowestNote = stats.min;\r\n        this.highestNote = stats.max;\r\n\r\n        this.ticks = this.start.ticks;\r\n\r\n        if (this.state === 'clean') {\r\n            //@TODO: check if this is the preferred way of doing it after all, add: part.track.needsUpdate = true;\r\n            //console.log('part sets its own status in update() -> this shouldn\\'t happen');\r\n            this.state = 'changed';\r\n        }\r\n\r\n        this.needsUpdate = false;\r\n    };\r\n\r\n    sequencer.createPart = function () {\r\n        return new Part();\r\n    };\r\n\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n\r\n        createMidiNote = sequencer.createMidiNote;\r\n        createMidiEvent = sequencer.createMidiEvent;\r\n\r\n        copyName = sequencer.protectedScope.copyName;\r\n        typeString = sequencer.protectedScope.typeString;\r\n\r\n        findEvent = sequencer.findEvent;\r\n        findNote = sequencer.findNote;\r\n        getStats = sequencer.getStats;\r\n    });\r\n\r\n}function playhead() {\n\n    'use strict';\n    var\n        instanceId = 0,\n        range = 10,\n\n        debug,\n\n        Playhead,\n\n        //import\n        getPosition2, // → defined in position.js\n        objectForEach; // → defined in util.js\n\n\n    Playhead = function (song, type, name, data) {\n        this.id = 'POS' + instanceId++ + '' + new Date().getTime();\n        //console.log(name);\n        this.song = song;\n        this.type = type || '';\n        this.name = name || this.id;\n        this.data = data || {};\n        this.lastEvent = undefined;\n\n        this.activeParts = [];\n        this.activeNotes = [];\n        this.activeEvents = [];\n    };\n\n\n    Playhead.prototype.set = function (u, v) {\n        //console.log(this.name, 'set', u, v);\n        this.unit = u;\n        this.currentValue = v;\n        this.eventIndex = 0;\n        this.noteIndex = 0;\n        this.partIndex = 0;\n        this.calculate();\n        return this.data;\n    };\n\n\n    Playhead.prototype.get = function () {\n        return this.data;\n    };\n\n\n    Playhead.prototype.update = function (u, diff) {\n        //console.log(this.name, 'update', u, diff);\n        if (diff === 0) {\n            return this.data;\n        }\n        this.unit = u;\n        this.currentValue += diff;\n        this.calculate();\n        return this.data;\n    };\n\n\n    Playhead.prototype.updateSong = function () {\n        this.events = this.song.eventsMidiTime;\n        this.numEvents = this.events.length;\n        this.notes = this.song.notes;\n        this.numNotes = this.song.numNotes;\n        this.parts = this.song.parts;\n        this.numParts = this.song.numParts;\n\n        this.set('millis', this.song.millis || 0);\n    };\n\n\n    Playhead.prototype.setType = function (t) {\n        this.type = t;\n        this.set(this.unit, this.currentValue);\n        //console.log(type,activeParts);\n    };\n\n\n    Playhead.prototype.addType = function (t) {\n        this.type += ' ' + t;\n        this.set(this.unit, this.currentValue);\n        //console.log(type,activeParts);\n    };\n\n\n    Playhead.prototype.removeType = function (t) {\n        var arr = this.type.split(' ');\n        this.type = '';\n        arr.forEach(function (type) {\n            if (type !== t) {\n                this.type += t + ' ';\n            }\n        });\n        this.type.trim();\n        this.set(this.currentValue);\n        //console.log(type,activeParts);\n    };\n\n\n    Playhead.prototype.calculate = function () {\n        var\n            i,\n            event,\n            note,\n            part,\n            position,\n            newParts = [],\n            stillActiveNotes = [],\n            stillActiveEvents = [],\n            collectedParts = [],\n            collectedNotes = [],\n            collectedEvents = [];\n\n        for (i = this.eventIndex; i < this.numEvents; i++) {\n            event = this.events[i];\n            //console.log(event);\n            //event.mute = event.mute || event.part.mute || event.track.mute;\n            if (event[this.unit] <= this.currentValue) {\n                //console.log(event[this.unit], this.currentValue, event.type)\n                //if(event.mute === false && event.type !== sequencer.MIDI_NOTE && event.type !== sequencer.DUMMY_EVENT){\n                if (event.type !== sequencer.MIDI_NOTE && event.type !== sequencer.DUMMY_EVENT) {\n                    //console.log(event.mute, event.part.mute, event.track.mute);\n                    collectedEvents.push(event);\n                }\n                this.lastEvent = event;\n                this.eventIndex++;\n            } else {\n                break;\n            }\n        }\n\n        // if a song has no events yet, use the first time event as reference\n        if (this.lastEvent === undefined) {\n            this.lastEvent = this.song.timeEvents[0];\n        }\n\n        position = getPosition2(this.song, this.unit, this.currentValue, 'all', this.lastEvent);\n        this.data.eventIndex = this.eventIndex;\n        this.data.millis = position.millis;\n        this.data.ticks = position.ticks;\n\n        //console.log('millis:', position.millis, 'ticks:', position.ticks, this.unit, ':', this.currentValue);\n        // if(this.name === 'iterators'){\n        //     console.log('nominator:', position.nominator, 'ticks:', position.ticks, this.unit, ':', this.currentValue);\n        // }\n\n        if (this.type.indexOf('all') !== -1) {\n            var data = this.data;\n            objectForEach(position, function (value, key) {\n                data[key] = value;\n            });\n        } else if (this.type.indexOf('barsbeats') !== -1) {\n            this.data.bar = position.bar;\n            this.data.beat = position.beat;\n            this.data.sixteenth = position.sixteenth;\n            this.data.tick = position.tick;\n            this.data.barsAsString = position.barsAsString;\n\n            this.data.ticksPerBar = position.ticksPerBar;\n            this.data.ticksPerBeat = position.ticksPerBeat;\n            this.data.ticksPerSixteenth = position.ticksPerSixteenth;\n            this.data.numSixteenth = position.numSixteenth;\n        } else if (this.type.indexOf('time') !== -1) {\n            this.data.hour = position.hour;\n            this.data.minute = position.minute;\n            this.data.second = position.second;\n            this.data.millisecond = position.millisecond;\n            this.data.timeAsString = position.timeAsString;\n        } else if (this.type.indexOf('percentage') !== -1) {\n            this.data.percentage = position.percentage;\n        }\n\n        if (this.type.indexOf('events') !== -1 || this.type.indexOf('all') !== -1) {\n\n            this.collectedEvents = collectedEvents;\n\n            for (i = this.activeEvents.length - 1; i >= 0; i--) {\n                event = this.activeEvents[i];\n\n                // skip the tempo and time signature events\n                if (event.type === 0x51 || event.type === 0x58) {\n                    continue;\n                }\n                //event.mute = event.mute || event.part.mute || event.track.mute;\n                /*\n                if(event.mute === true){\n                    //console.log('skipping muted event', event.id);\n                    continue;\n                }\n                */\n                if (event.state.indexOf('removed') === 0 || this.song.eventsById[event.id] === undefined) {\n                    //console.log('skipping removed event', event.id);\n                    continue;\n                }\n\n                if (event[this.unit] <= this.currentValue && event[this.unit] > this.currentValue - range) {\n                    stillActiveEvents.push(event);\n                }\n            }\n\n            this.activeEvents = [].concat(stillActiveEvents);\n\n            // find and add new active events\n            for (i = collectedEvents.length - 1; i >= 0; i--) {\n                event = collectedEvents[i];\n                //console.log(event.mute);\n                if (event[this.unit] > this.currentValue - range) {\n                    this.activeEvents.push(event);\n                }\n            }\n\n            this.song.activeEvents = {};\n\n            for (i = this.activeEvents.length - 1; i >= 0; i--) {\n                event = this.activeEvents[i];\n                //console.log('active', event);\n                this.song.activeEvents[event.id] = event;\n            }\n        }\n\n\n        if (this.type.indexOf('notes') !== -1 || this.type.indexOf('all') !== -1) {\n\n            // get all events between the noteIndex and the current playhead position\n            for (i = this.noteIndex; i < this.numNotes; i++) {\n                note = this.notes[i];\n                if (note.noteOn[this.unit] <= this.currentValue) {\n                    //note.mute = note.noteOn.mute || note.noteOff.mute;\n                    //if(note.mute === false){\n                    collectedNotes.push(note);\n                    //}\n                    this.noteIndex++;\n                } else {\n                    break;\n                }\n            }\n\n\n            // filter notes that are no longer active\n            for (i = this.activeNotes.length - 1; i >= 0; i--) {\n                note = this.activeNotes[i];\n                //note.mute = note.noteOn.mute || note.noteOff.mute;\n                //if(note.mute){\n                //    continue;\n                //}\n                if (note.noteOn.state.indexOf('removed') === 0 || this.song.notesById[note.id] === undefined) {\n                    //console.log('skipping removed note', note.id);\n                    continue;\n                }\n\n                if (note.noteOff === undefined) {\n                    if (sequencer.debug) {\n                        console.warn('note with id', note.id, 'has no noteOff event', note.noteOn.track.name);\n                    }\n                    continue;\n                }\n\n                if (note.noteOn[this.unit] <= this.currentValue && note.noteOff[this.unit] > this.currentValue) {\n                    //note.active = true;\n                    stillActiveNotes.push(note);\n                } else {\n                    //note.active = false;\n\n                    //@TODO: do something here to unschedule notes\n                }\n            }\n\n\n            // add the still active notes back to the active notes array\n            this.activeNotes = [].concat(stillActiveNotes);\n\n\n            // find and add new active notes\n            for (i = collectedNotes.length - 1; i >= 0; i--) {\n                note = collectedNotes[i];\n\n                if (note.noteOff === undefined) {\n                    if (sequencer.debug) {\n                        console.warn('note with id', note.id, 'has no noteOff event', note.noteOn.track.name);\n                    }\n                    continue;\n                }\n\n                if (note.noteOff[this.unit] > this.currentValue) {\n                    this.activeNotes.push(note);\n                    //note.active = true;\n                } else {\n                    //note.active = false;\n                }\n            }\n\n            this.song.activeNotes = {};\n\n            for (i = this.activeNotes.length - 1; i >= 0; i--) {\n                note = this.activeNotes[i];\n                //console.log('active', note);\n                this.song.activeNotes[note.id] = note;\n            }\n        }\n\n\n\n        // get active parts\n        if (this.type.indexOf('parts') !== -1 || this.type.indexOf('all') !== -1) {\n\n\n            for (i = this.partIndex; i < this.numParts; i++) {\n                part = this.parts[i];\n                //console.log(part, this.unit, this.currentValue);\n                if (part.start[this.unit] <= this.currentValue) {// && part.end[this.unit] > this.currentValue){\n                    //part.mute = part.mute || part.track.mute;\n                    //if(part.mute === false){\n                    collectedParts.push(part);\n                    //}\n                    this.partIndex++;\n                } else {\n                    break;\n                }\n            }\n\n            // filter existing active parts\n            for (i = this.activeParts.length - 1; i >= 0; i--) {\n                part = this.activeParts[i];\n                //part.mute = part.mute || part.track.mute;\n                //if(part.mute){\n                //    continue;\n                //}\n                if (part.start[this.unit] <= this.currentValue && part.end[this.unit] > this.currentValue) {\n                    newParts.push(part);\n                }\n            }\n\n            this.activeParts = [].concat(newParts);\n\n            for (i = collectedParts.length - 1; i >= 0; i--) {\n                part = collectedParts[i];\n                if (part.end[this.unit] > this.currentValue) {\n                    this.activeParts.push(part);\n                }\n            }\n\n            this.song.activeParts = {};\n            for (i = this.activeParts.length - 1; i >= 0; i--) {\n                part = this.activeParts[i];\n                //console.log('active part', part);\n                this.song.activeParts[part.id] = part;\n            }\n        }\n\n        if (this.busy === true) {\n            this.busy = false;\n        }\n    };\n\n\n    sequencer.protectedScope.createPlayhead = function (song, type, name, data) {\n        return new Playhead(song, type, name, data);\n    };\n\n\n    sequencer.protectedScope.addInitMethod(function () {\n        getPosition2 = sequencer.protectedScope.getPosition2;\n        objectForEach = sequencer.protectedScope.objectForEach;\n        debug = sequencer.debug;\n    });\n\n}function position() {\r\n\r\n    'use strict';\r\n\r\n    var\r\n        //import\r\n        round, // → defined in util.js\r\n        floor, // → defined in util.js\r\n        typeString, // → defined in util.js\r\n\r\n        supportedTypes = 'barsandbeats barsbeats time millis ticks perc percentage',\r\n        supportedReturnTypes = 'barsandbeats barsbeats time millis ticks all',\r\n\r\n        //local\r\n        bpm,\r\n        nominator,\r\n        denominator,\r\n\r\n        ticksPerBeat,\r\n        ticksPerBar,\r\n        ticksPerSixteenth,\r\n\r\n        millisPerTick,\r\n        secondsPerTick,\r\n        numSixteenth,\r\n\r\n        ticks,\r\n        millis,\r\n        diffTicks,\r\n        diffMillis,\r\n\r\n        bar,\r\n        beat,\r\n        sixteenth,\r\n        tick,\r\n\r\n        type,\r\n        index,\r\n        returnType = 'all',\r\n        beyondEndOfSong = true,\r\n\r\n        //public (song)\r\n        millisToTicks,\r\n        ticksToMillis,\r\n        barsToMillis,\r\n        barsToTicks,\r\n        ticksToBars,\r\n        millisToBars,\r\n\r\n        //private\r\n        checkBarsAndBeats,\r\n        getDataFromEvent,\r\n        getPositionData,\r\n        calculateBarsAndBeats,\r\n\r\n        //protected\r\n        getPosition,\r\n        checkPosition,\r\n        fromMillis,\r\n        fromTicks,\r\n        fromBars;\r\n\r\n\r\n    function getTimeEvent(song, unit, target) {\r\n        // finds the time event that comes the closest before the target position\r\n        var timeEvents = song.timeEvents,\r\n            i, event;\r\n\r\n        for (i = timeEvents.length - 1; i >= 0; i--) {\r\n            event = timeEvents[i];\r\n            if (event[unit] <= target) {\r\n                index = i;\r\n                return event;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    millisToTicks = function (song, targetMillis, beos) {\r\n        beyondEndOfSong = beos === undefined ? true : false;\r\n        fromMillis(song, targetMillis);\r\n        //return round(ticks);\r\n        return ticks;\r\n    };\r\n\r\n\r\n    ticksToMillis = function (song, targetTicks, beos) {\r\n        beyondEndOfSong = beos === undefined ? true : false;\r\n        fromTicks(song, targetTicks);\r\n        return millis;\r\n    };\r\n\r\n\r\n    barsToMillis = function (song, position, beos) { // beos = beyondEndOfSong\r\n        position = ['barsbeats'].concat(position);\r\n        getPosition(song, position, 'millis', beos);\r\n        return millis;\r\n    };\r\n\r\n\r\n    barsToTicks = function (song, position, beos) { // beos = beyondEndOfSong\r\n        position = ['barsbeats'].concat(position);\r\n        getPosition(song, position, 'ticks', beos);\r\n        //return round(ticks);\r\n        return ticks;\r\n    };\r\n\r\n\r\n    ticksToBars = function (song, ticks, beos) {\r\n        beyondEndOfSong = beos === undefined ? true : false;\r\n        fromTicks(song, ticks);\r\n        calculateBarsAndBeats();\r\n        returnType = 'barsandbeats';\r\n        return getPositionData();\r\n    };\r\n\r\n\r\n    millisToBars = function (song, millis, beos) {\r\n        beyondEndOfSong = beos === undefined ? true : false;\r\n        fromMillis(song, millis);\r\n        calculateBarsAndBeats();\r\n        returnType = 'barsandbeats';\r\n        return getPositionData();\r\n    };\r\n\r\n\r\n    fromMillis = function (song, targetMillis, event) {\r\n        var lastEvent = song.lastEvent;\r\n\r\n        if (beyondEndOfSong === false) {\r\n            if (targetMillis > lastEvent.millis) {\r\n                targetMillis = lastEvent.millis;\r\n            }\r\n        }\r\n\r\n        if (event === undefined) {\r\n            event = getTimeEvent(song, 'millis', targetMillis);\r\n        }\r\n        getDataFromEvent(event);\r\n\r\n        // if the event is not exactly at target millis, calculate the diff\r\n        if (event.millis === targetMillis) {\r\n            diffMillis = 0;\r\n            diffTicks = 0;\r\n        } else {\r\n            diffMillis = targetMillis - event.millis;\r\n            diffTicks = diffMillis / millisPerTick;\r\n        }\r\n\r\n        millis += diffMillis;\r\n        ticks += diffTicks;\r\n\r\n        return ticks;\r\n    };\r\n\r\n\r\n    fromTicks = function (song, targetTicks, event) {\r\n        var lastEvent = song.lastEvent;\r\n\r\n        if (beyondEndOfSong === false) {\r\n            if (targetTicks > lastEvent.ticks) {\r\n                targetTicks = lastEvent.ticks;\r\n            }\r\n        }\r\n\r\n        if (event === undefined) {\r\n            event = getTimeEvent(song, 'ticks', targetTicks);\r\n        }\r\n        getDataFromEvent(event);\r\n\r\n        // if the event is not exactly at target ticks, calculate the diff\r\n        if (event.ticks === targetTicks) {\r\n            diffTicks = 0;\r\n            diffMillis = 0;\r\n        } else {\r\n            diffTicks = targetTicks - ticks;\r\n            diffMillis = diffTicks * millisPerTick;\r\n        }\r\n\r\n        ticks += diffTicks;\r\n        millis += diffMillis;\r\n\r\n        return millis;\r\n    };\r\n\r\n\r\n    fromBars = function (song, targetBar, targetBeat, targetSixteenth, targetTick, event) {\r\n        //console.time('fromBars');\r\n        var i = 0,\r\n            diffBars,\r\n            diffBeats,\r\n            diffSixteenth,\r\n            diffTick,\r\n            lastEvent = song.lastEvent;\r\n\r\n        if (beyondEndOfSong === false) {\r\n            if (targetBar > lastEvent.bar) {\r\n                targetBar = lastEvent.bar;\r\n            }\r\n        }\r\n\r\n        targetBar = checkBarsAndBeats(targetBar);\r\n        targetBeat = checkBarsAndBeats(targetBeat);\r\n        targetSixteenth = checkBarsAndBeats(targetSixteenth);\r\n        targetTick = checkBarsAndBeats(targetTick, true);\r\n\r\n        if (event === undefined) {\r\n            event = getTimeEvent(song, 'bar', targetBar);\r\n        }\r\n        getDataFromEvent(event);\r\n\r\n        //correct wrong position data, for instance: '3,3,2,788' becomes '3,4,4,068' in a 4/4 measure at PPQ 480\r\n        while (targetTick >= ticksPerSixteenth) {\r\n            targetSixteenth++;\r\n            targetTick -= ticksPerSixteenth;\r\n        }\r\n\r\n        while (targetSixteenth > numSixteenth) {\r\n            targetBeat++;\r\n            targetSixteenth -= numSixteenth;\r\n        }\r\n\r\n        while (targetBeat > nominator) {\r\n            targetBar++;\r\n            targetBeat -= nominator;\r\n        }\r\n\r\n        event = getTimeEvent(song, 'bar', targetBar, index);\r\n        for (i = index; i >= 0; i--) {\r\n            event = song.timeEvents[i];\r\n            if (event.bar <= targetBar) {\r\n                getDataFromEvent(event);\r\n                break;\r\n            }\r\n        }\r\n\r\n        // get the differences\r\n        diffTick = targetTick - tick;\r\n        diffSixteenth = targetSixteenth - sixteenth;\r\n        diffBeats = targetBeat - beat;\r\n        diffBars = targetBar - bar; //bar is always less then or equal to targetBar, so diffBars is always >= 0\r\n\r\n        //console.log('diff',diffBars,diffBeats,diffSixteenth,diffTick);\r\n        //console.log('millis',millis,ticksPerBar,ticksPerBeat,ticksPerSixteenth,millisPerTick);\r\n\r\n        // convert differences to milliseconds and ticks\r\n        diffMillis = (diffBars * ticksPerBar) * millisPerTick;\r\n        diffMillis += (diffBeats * ticksPerBeat) * millisPerTick;\r\n        diffMillis += (diffSixteenth * ticksPerSixteenth) * millisPerTick;\r\n        diffMillis += diffTick * millisPerTick;\r\n        diffTicks = diffMillis / millisPerTick;\r\n        //console.log(diffBars, ticksPerBar, millisPerTick, diffMillis, diffTicks);\r\n\r\n        // set all current position data\r\n        bar = targetBar;\r\n        beat = targetBeat;\r\n        sixteenth = targetSixteenth;\r\n        tick = targetTick;\r\n        //console.log(tick, targetTick)\r\n\r\n        millis += diffMillis;\r\n        //console.log(targetBar, targetBeat, targetSixteenth, targetTick, ' -> ', millis);\r\n        ticks += diffTicks;\r\n\r\n        //console.timeEnd('fromBars');\r\n    };\r\n\r\n\r\n    calculateBarsAndBeats = function () {\r\n        // spread the difference in tick over bars, beats and sixteenth\r\n        var tmp = round(diffTicks);\r\n        while (tmp >= ticksPerSixteenth) {\r\n            sixteenth++;\r\n            tmp -= ticksPerSixteenth;\r\n            while (sixteenth > numSixteenth) {\r\n                sixteenth -= numSixteenth;\r\n                beat++;\r\n                while (beat > nominator) {\r\n                    beat -= nominator;\r\n                    bar++;\r\n                }\r\n            }\r\n        }\r\n        tick = round(tmp);\r\n    };\r\n\r\n\r\n    getDataFromEvent = function (event) {\r\n\r\n        bpm = event.bpm;\r\n        nominator = event.nominator;\r\n        denominator = event.denominator;\r\n\r\n        ticksPerBar = event.ticksPerBar;\r\n        ticksPerBeat = event.ticksPerBeat;\r\n        ticksPerSixteenth = event.ticksPerSixteenth;\r\n        numSixteenth = event.numSixteenth;\r\n        millisPerTick = event.millisPerTick;\r\n        secondsPerTick = event.secondsPerTick;\r\n\r\n        bar = event.bar;\r\n        beat = event.beat;\r\n        sixteenth = event.sixteenth;\r\n        tick = event.tick;\r\n\r\n        ticks = event.ticks;\r\n        millis = event.millis;\r\n\r\n        //console.log(bpm, event.type);\r\n        //console.log('ticks', ticks, 'millis', millis, 'bar', bar);\r\n    };\r\n\r\n\r\n    getPositionData = function (song) {\r\n        var timeData,\r\n            tickAsString,\r\n            positionData = {};\r\n\r\n        switch (returnType) {\r\n\r\n            case 'millis':\r\n                //positionData.millis = millis;\r\n                positionData.millis = round(millis * 1000) / 1000;\r\n                positionData.millisRounded = round(millis);\r\n                break;\r\n\r\n            case 'ticks':\r\n                //positionData.ticks = ticks;\r\n                positionData.ticks = round(ticks);\r\n                //positionData.ticksUnrounded = ticks;\r\n                break;\r\n\r\n            case 'barsbeats':\r\n            case 'barsandbeats':\r\n                positionData.bar = bar;\r\n                positionData.beat = beat;\r\n                positionData.sixteenth = sixteenth;\r\n                positionData.tick = tick;\r\n                tickAsString = tick === 0 ? '000' : tick < 10 ? '00' + tick : tick < 100 ? '0' + tick : tick;\r\n                //positionData.barsAsString = (bar + 1) + ':' + (beat + 1) + ':' + (sixteenth + 1) + ':' + tickAsString;\r\n                positionData.barsAsString = bar + ':' + beat + ':' + sixteenth + ':' + tickAsString;\r\n                break;\r\n\r\n            case 'time':\r\n                timeData = sequencer.getNiceTime(millis);\r\n                positionData.hour = timeData.hour;\r\n                positionData.minute = timeData.minute;\r\n                positionData.second = timeData.second;\r\n                positionData.millisecond = timeData.millisecond;\r\n                positionData.timeAsString = timeData.timeAsString;\r\n                break;\r\n\r\n            case 'all':\r\n                // millis\r\n                //positionData.millis = millis;\r\n                positionData.millis = round(millis * 1000) / 1000;\r\n                positionData.millisRounded = round(millis);\r\n\r\n                // ticks\r\n                //positionData.ticks = ticks;\r\n                positionData.ticks = round(ticks);\r\n                //positionData.ticksUnrounded = ticks;\r\n\r\n                // barsbeats\r\n                positionData.bar = bar;\r\n                positionData.beat = beat;\r\n                positionData.sixteenth = sixteenth;\r\n                positionData.tick = tick;\r\n                tickAsString = tick === 0 ? '000' : tick < 10 ? '00' + tick : tick < 100 ? '0' + tick : tick;\r\n                //positionData.barsAsString = (bar + 1) + ':' + (beat + 1) + ':' + (sixteenth + 1) + ':' + tickAsString;\r\n                positionData.barsAsString = bar + ':' + beat + ':' + sixteenth + ':' + tickAsString;\r\n\r\n                // time\r\n                timeData = sequencer.getNiceTime(millis);\r\n                positionData.hour = timeData.hour;\r\n                positionData.minute = timeData.minute;\r\n                positionData.second = timeData.second;\r\n                positionData.millisecond = timeData.millisecond;\r\n                positionData.timeAsString = timeData.timeAsString;\r\n\r\n                // extra data\r\n                positionData.bpm = round(bpm * song.playbackSpeed, 3);\r\n                positionData.nominator = nominator;\r\n                positionData.denominator = denominator;\r\n\r\n                positionData.ticksPerBar = ticksPerBar;\r\n                positionData.ticksPerBeat = ticksPerBeat;\r\n                positionData.ticksPerSixteenth = ticksPerSixteenth;\r\n\r\n                positionData.numSixteenth = numSixteenth;\r\n                positionData.millisPerTick = millisPerTick;\r\n                positionData.secondsPerTick = secondsPerTick;\r\n\r\n                // use ticks to make tempo changes visible by a faster moving playhead\r\n                positionData.percentage = ticks / song.durationTicks;\r\n                //positionData.percentage = millis / song.durationMillis;\r\n                break;\r\n        }\r\n\r\n        return positionData;\r\n    };\r\n\r\n\r\n    checkBarsAndBeats = function (value, isTick) {\r\n        value = isNaN(value) ? isTick ? 0 : 1 : value;\r\n        value = round(value);\r\n        //value = value > maxValue ? maxValue : value;\r\n        if (isTick) {\r\n            value = value < 0 ? 0 : value;\r\n        } else {\r\n            value = value < 1 ? 1 : value;\r\n        }\r\n        return value;\r\n    };\r\n\r\n\r\n    //@param: 'millis', 1000, [true]\r\n    //@param: 'ticks', 1000, [true]\r\n    //@param: 'barsandbeats', 1, ['all', true]\r\n    //@param: 'barsandbeats', 60, 4, 3, 120, ['all', true]\r\n    //@param: 'barsandbeats', 60, 4, 3, 120, [true, 'all']\r\n\r\n    checkPosition = function (args) {\r\n        returnType = 'all';\r\n        beyondEndOfSong = true;\r\n        //console.log('----> checkPosition:', args);\r\n\r\n        if (typeString(args) === 'array') {\r\n            var\r\n                numArgs = args.length,\r\n                position,\r\n                i, a, positionLength;\r\n\r\n            type = args[0];\r\n\r\n            // support for [['millis', 3000]]\r\n            if (typeString(args[0]) === 'array') {\r\n                //console.warn('this shouldn\\'t happen!');\r\n                args = args[0];\r\n                type = args[0];\r\n                numArgs = args.length;\r\n            }\r\n\r\n            position = [type];\r\n\r\n            //console.log('check position', args, numArgs);\r\n\r\n            //console.log('arg', 0, '->', type);\r\n\r\n            if (supportedTypes.indexOf(type) !== -1) {\r\n                for (i = 1; i < numArgs; i++) {\r\n                    a = args[i];\r\n                    //console.log('arg', i, '->', a);\r\n                    if (a === true || a === false) {\r\n                        beyondEndOfSong = a;\r\n                    } else if (isNaN(a)) {\r\n                        if (supportedReturnTypes.indexOf(a) !== -1) {\r\n                            returnType = a;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    } else {\r\n                        position.push(a);\r\n                    }\r\n                }\r\n                //check number of arguments -> either 1 number or 4 numbers in position, e.g. ['barsbeats', 1] or ['barsbeats', 1, 1, 1, 0],\r\n                // or ['perc', 0.56, numberOfTicksToSnapTo]\r\n                positionLength = position.length;\r\n                if (positionLength !== 2 && positionLength !== 3 && positionLength !== 5) {\r\n                    return false;\r\n                }\r\n                //console.log(position, returnType, beyondEndOfSong);\r\n                //console.log('------------------------------------')\r\n                return position;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    function getPosition2(song, unit, target, type, event) {\r\n        if (unit === 'millis') {\r\n            fromMillis(song, target, event);\r\n        } else if (unit === 'ticks') {\r\n            fromTicks(song, target, event);\r\n        }\r\n        if (type === 'all') {\r\n            calculateBarsAndBeats();\r\n        }\r\n        return getPositionData(song);\r\n    }\r\n\r\n    getPosition = function (song, args) {\r\n        //console.log('getPosition', args);\r\n\r\n        var position = checkPosition(args),\r\n            millis, tmp, snap;\r\n\r\n        if (position === false) {\r\n            console.error('wrong position data');\r\n            return false;\r\n        }\r\n\r\n        switch (type) {\r\n\r\n            case 'barsbeats':\r\n            case 'barsandbeats':\r\n                fromBars(song, position[1], position[2], position[3], position[4]);\r\n                return getPositionData(song);\r\n\r\n            case 'time':\r\n                // calculate millis out of time array: hours, minutes, seconds, millis\r\n                millis = 0;\r\n                tmp = position[1] || 0;\r\n                millis += tmp * 60 * 60 * 1000; //hours\r\n                tmp = position[2] || 0;\r\n                millis += tmp * 60 * 1000; //minutes\r\n                tmp = position[3] || 0;\r\n                millis += tmp * 1000; //seconds\r\n                tmp = position[4] || 0;\r\n                millis += tmp; //milliseconds\r\n\r\n                fromMillis(song, millis);\r\n                calculateBarsAndBeats();\r\n                return getPositionData(song);\r\n\r\n            case 'millis':\r\n                fromMillis(song, position[1]);\r\n                calculateBarsAndBeats();\r\n                return getPositionData(song);\r\n\r\n            case 'ticks':\r\n                fromTicks(song, position[1]);\r\n                calculateBarsAndBeats();\r\n                return getPositionData(song);\r\n\r\n            case 'perc':\r\n            case 'percentage':\r\n                snap = position[2];\r\n\r\n                //millis = position[1] * song.durationMillis;\r\n                //fromMillis(song, millis);\r\n                //console.log(millis);\r\n\r\n                ticks = position[1] * song.durationTicks;\r\n                if (snap !== undefined) {\r\n                    ticks = floor(ticks / snap) * snap;\r\n                    //fromTicks(song, ticks);\r\n                    //console.log(ticks);\r\n                }\r\n                fromTicks(song, ticks);\r\n                calculateBarsAndBeats();\r\n                tmp = getPositionData(song);\r\n                //console.log('diff', position[1] - tmp.percentage);\r\n                return tmp;\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    sequencer.protectedScope.getPosition = getPosition;\r\n    sequencer.protectedScope.getPosition2 = getPosition2;\r\n    sequencer.protectedScope.checkPosition = checkPosition;\r\n\r\n    sequencer.protectedScope.millisToTicks = millisToTicks;\r\n    sequencer.protectedScope.ticksToMillis = ticksToMillis;\r\n    sequencer.protectedScope.ticksToBars = ticksToBars;\r\n    sequencer.protectedScope.millisToBars = millisToBars;\r\n    sequencer.protectedScope.barsToTicks = barsToTicks;\r\n    sequencer.protectedScope.barsToMillis = barsToMillis;\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n        round = sequencer.protectedScope.round;\r\n        floor = sequencer.protectedScope.floor;\r\n        typeString = sequencer.protectedScope.typeString;\r\n    });\r\n}\r\nfunction quantizeFixedLength() {\n\n  'use strict';\n\n  var\n    copyObject, // defined in util.js\n\n    floor = Math.floor,\n    round = Math.round,\n\n    noteFractions =\n    {\n      '1': 1 * 4, // whole note\n      '1.': 1.5 * 4,\n      '1..': 1.75 * 4,\n      '1...': 1.875 * 4,\n      '1T': 2 / 3 * 4,\n\n      '2': 1 * 2, // half note\n      '2.': 1.5 * 2,\n      '2..': 1.75 * 2,\n      '2...': 1.875 * 2,\n      '2T': 2 / 3 * 2,\n\n      '4': 1 * 1, // quarter note (beat)\n      '4.': 1.5 * 1,\n      '4..': 1.75 * 1,\n      '4...': 1.875 * 1,\n      '4T': 2 / 3 * 1,\n\n      '8': 1 * 1 / 2, // eighth note\n      '8.': 1.5 * 1 / 2,\n      '8..': 1.75 * 1 / 2,\n      '8...': 1.875 * 1 / 2,\n      '8T': 2 / 3 * 1 / 2,\n\n      '16': 1 * 1 / 4, // sixteenth note\n      '16.': 1.5 * 1 / 4,\n      '16..': 1.75 * 1 / 4,\n      '16...': 1.875 * 1 / 4,\n      '16T': 2 / 3 * 1 / 4,\n\n      '32': 1 * 1 / 8,\n      '32.': 1.5 * 1 / 8,\n      '32..': 1.75 * 1 / 8,\n      '32...': 1.875 * 1 / 8,\n      '32T': 2 / 3 * 1 / 8,\n\n      '64': 1 * 1 / 16,\n      '64.': 1.5 * 1 / 16,\n      '64..': 1.75 * 1 / 16,\n      '64...': 1.875 * 1 / 16,\n      '64T': 2 / 3 * 1 / 16,\n\n      '128': 1 * 1 / 32,\n      '128.': 1.5 * 1 / 32,\n      '128..': 1.75 * 1 / 32,\n      '128...': 1.875 * 1 / 32,\n      '128T': 2 / 3 * 1 / 32\n    };\n\n\n\n\n  function quantize(events, value, ppq, history) {\n    var track;\n\n    value = '' + value;\n    value = value.toUpperCase();\n    ppq = ppq || sequencer.defaultPPQ;\n    //console.log('quantize', value);\n    if (value === 0) {// pass by\n      return {};\n    }\n    var i, event, ticks, quantized, diff, quantizeTicks,\n      quantizeHistory = history || {};\n\n    if (quantizeHistory.events === undefined) {\n      quantizeHistory.events = {};\n    }\n\n    if (quantizeHistory.tracks === undefined) {\n      quantizeHistory.tracks = {};\n    }\n\n    //console.log(events, value, ppq, history);\n\n    if (value.indexOf('TICKS') !== -1) {\n      quantizeTicks = parseInt(value.replace(/TICKS/, ''), 10);\n    } else {\n      quantizeTicks = noteFractions[value] * ppq;\n    }\n\n    //console.log('quantize', quantizeTicks);\n\n    if (quantizeTicks === undefined) {\n      if (sequencer.debug) {\n        console.warn('invalid quantize value');\n      }\n      return;\n    }\n\n    for (i = events.length - 1; i >= 0; i--) {\n      event = events[i];\n\n      quantizeHistory.events[event.id] = {\n        event: event,\n        ticks: event.ticks\n      };\n\n      if (event.type !== 128) {\n        ticks = event.ticks;\n        quantized = round(ticks / quantizeTicks) * quantizeTicks;\n        //console.log(ticks, quantized, '[', ppq, ']');\n        diff = quantized - ticks;\n        event.ticks = quantized;\n        event.state = 'changed';\n        event.part.needsUpdate = true;\n        event.track.needsUpdate = true;\n\n        // add quantize history per track as well\n        track = event.track;\n        if (quantizeHistory.tracks[track.id] === undefined) {\n          quantizeHistory.tracks[track.id] = {\n            track: track,\n            quantizedEvents: []\n          };\n        }\n        quantizeHistory.tracks[track.id].quantizedEvents.push(event);\n\n        // quantize the note off event\n        if (event.midiNote !== undefined) {\n          event.midiNote.noteOff.ticks += diff;\n          event.midiNote.noteOff.state = 'changed';\n          event.midiNote.state = 'changed';\n          quantizeHistory.tracks[track.id].quantizedEvents.push(event.midiNote.noteOff);\n        }\n      }\n    }\n\n    return quantizeHistory;//copyObject(quantizeHistory);\n  }\n\n\n  function fixedLength(events, value, ppq, history) {\n    var fixedLengthHistory = history || {};\n\n  }\n\n\n  sequencer.protectedScope.addInitMethod(function () {\n    copyObject = sequencer.protectedScope.copyObject;\n  });\n\n  sequencer.quantize = quantize;\n  sequencer.fixedLength = fixedLength;\n\n}\n\n\nfunction sample() {\n\n    'use strict';\n\n    var\n        //import\n        context, // defined in open_module.js\n        timedTasks, // defined in open_module.js\n        legacy, // defined in open_module.js\n        typeString, // defined in util.js\n        getSampleId, // defined in open_module.js\n        createPanner, // defined in effects.js\n        getEqualPowerCurve, // defined in util.js\n\n        //private\n        stopSample,\n        fadeOut,\n\n        SampleSynth,\n        SampleRelease,\n        SampleSustainRelease,\n        SampleReleasePanning,\n        SampleSustainReleasePanning,\n\n\n        Sample = function (config) {\n            this.id = getSampleId();\n            this.output = context.createGainNode();\n            this.output.connect(config.track.input);\n            this.buffer = config.buffer;\n            if (this.buffer) {\n                this.duration = this.buffer.duration;\n            }\n            this.noteNumber = config.noteNumber;\n            this.stopCallback = function () { };\n            this.track = config.track;\n            //console.log(this.buffer, this.noteNumber)\n        };\n\n\n    stopSample = function (sample, time) {\n        sample.source.onended = function () {\n            sample.stopCallback(sample);\n        };\n        time = time || 0;\n        try {\n            sample.source.stop(time);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n\n    fadeOut = function (sample) {\n        var now = context.currentTime,\n            values,\n            i, maxi;\n\n        if (sample.release_duration > 0) {\n            //console.log(sample.releaseEnvelope);\n            try {\n                switch (sample.releaseEnvelope) {\n\n                    case 'linear':\n                        sample.output.gain.linearRampToValueAtTime(sample.volume, now);\n                        sample.output.gain.linearRampToValueAtTime(0, now + sample.releaseDuration);\n                        break;\n\n                    case 'equal power':\n                        values = getEqualPowerCurve(100, 'fadeOut', sample.volume);\n                        sample.output.gain.setValueCurveAtTime(values, now, sample.releaseDuration);\n                        break;\n\n                    case 'array':\n                        maxi = sample.releaseEnvelopeArray.length;\n                        values = new Float32Array(maxi);\n                        for (i = 0; i < maxi; i++) {\n                            values[i] = sample.releaseEnvelopeArray[i] * sample.volume;\n                        }\n                        sample.output.gain.setValueCurveAtTime(values, now, sample.releaseDuration);\n                        break;\n                }\n            } catch (e) {\n                console.error(sample.id, e);\n            }\n        }\n    };\n\n\n    Sample.prototype.addData = function (obj) {\n        this.sourceId = obj.sourceId;\n        this.noteName = obj.noteName;\n        this.midiNote = obj.midiNote;\n    };\n\n    Sample.prototype.createSource = function () {\n        // overrule to do or add other stuff\n        this.source = context.createBufferSource();\n        this.source.buffer = this.buffer;\n    };\n\n    Sample.prototype.route = function () {\n        // overrule to do or add other stuff\n        this.source.connect(this.output);\n    };\n\n\n    // called on a NOTE ON event\n    Sample.prototype.start = function (event) {\n        // console.log('NOTE ON', event.velocity, legacy);\n        if (this.source !== undefined) {\n            console.error('this should never happen');\n            return;\n        }\n\n        this.volume = event.velocity / 127;\n        this.output.gain.value = this.volume;\n\n        this.createSource();\n        this.phase = 'decay'; // -> naming of phases is not completely correct, we skip attack\n        this.route();\n\n        if (legacy === true) {\n            this.source.start = this.source.noteOn;\n            this.source.stop = this.source.noteOff;\n        }\n\n        try {\n            // if(event.offset !== undefined){\n            //     console.log(event.offset);\n            // }\n            this.source.start(event.time, event.offset || 0, event.duration || this.duration);\n            //alert(event.offset + ':' + event.duration);\n            //this.source.start(event.time, 0, 0);\n            //this.source.start(event.time);\n            //console.log('start', event.time, event.offset, event.duration, sequencer.getTime());\n            //console.log('start', time, sequencer.getTime());\n        } catch (e) {\n            console.warn(e);\n        }\n    };\n\n\n    // called on a NOTE OFF event\n    Sample.prototype.stop = function (seconds, cb) {\n        //console.log('NOTE OFF', cb);\n        //console.log('NOTE OFF', this.source);\n        //console.log('NOTE OFF', this.release);\n        if (this.source === undefined) {\n            if (sequencer.debug) {\n                console.log('Sample.stop() source is undefined');\n            }\n            return;\n        }\n\n        // this happens when midi events are sent live from a midi device\n        if (seconds === 0 || seconds === undefined) {\n            //console.log('seconds is undefined!');\n            seconds = sequencer.getTime();\n        }\n        this.stopCallback = cb || function () { };\n\n        if (this.release) {\n            this.source.loop = false;\n            this.startReleasePhase = seconds;\n            this.stopTime = seconds + this.releaseDuration;\n            //console.log(this.stopTime, seconds, this.releaseDuration);\n        } else {\n            stopSample(this, seconds);\n        }\n    };\n\n\n    Sample.prototype.unschedule = function (when, cb) {\n        var now = context.currentTime,\n            sample = this,\n            fadeOut = when === null ? 100 : when;//milliseconds\n\n        this.source.onended = undefined;\n        // Comment this out, see fix by Nicolar Lair below:\n        // this.output.gain.cancelScheduledValues(now);\n\n        //console.log(this.volume, now);\n        //this.output.gain.linearRampToValueAtTime(this.volume, now);\n\n        try {\n            // Fix by Nicolar Lair:\n            /*\n              A DOM Exception occurs when a fade out is called while the sound is playing / planned to play\n              until a later value in time:\n              \"Failed to execute 'linearRampToValueAtTime' on 'AudioParam': linearRampToValueAtTime()\n              overlaps setValueCurveAt()\"\n            */\n            this.output.gain.cancelScheduledValues(0);\n            this.output.gain.linearRampToValueAtTime(0, now + fadeOut / 1000); // fade out in seconds\n\n            if (fadeOut === 0) {\n                if (sample.source !== undefined) {\n                    sample.source.disconnect(0);\n                    sample.source = undefined;\n                    if (typeof cb === 'function') {\n                        cb(sample);\n                    }\n                }\n            } else {\n                timedTasks['unschedule_' + this.id] = {\n                    time: now + fadeOut / 1000,\n                    execute: function () {\n                        if (!sample) {\n                            console.log('sample is gone');\n                            return;\n                        }\n                        if (sample.panner) {\n                            sample.panner.node.disconnect(0);\n                        }\n                        if (sample.source !== undefined) {\n                            sample.source.disconnect(0);\n                            sample.source = undefined;\n                        }\n                        if (cb) {\n                            cb(sample);\n                        }\n                    }\n                };\n            }\n        } catch (e) {\n            // firefox gives sometimes an error \"SyntaxError: An invalid or illegal string was specified\"\n            console.log(e);\n        }\n\n    };\n\n\n    // called every frame\n    Sample.prototype.update = function (value) {\n        var doLog = this.track.name === 'Sonata # 3' && this.track.song.bar >= 6 && this.track.song.bar <= 10;\n        //var doLog = true;\n        //console.log('update', this.phase);\n        if (this.autopan) {\n            this.panner.setPosition(value);\n        }\n\n        if (this.startReleasePhase !== undefined && context.currentTime >= this.startReleasePhase && this.phase === 'decay') {\n            if (doLog === true) {\n                console.log(this.phase, '-> release', this.releaseDuration);\n            }\n            this.phase = 'release';\n            fadeOut(this);\n        } else if (this.stopTime !== undefined && context.currentTime >= this.stopTime && this.phase === 'release') {\n            if (doLog === true) {\n                console.log(this.phase, '-> stopped', this.stopTime, context.currentTime);\n            }\n            this.phase = 'stopped';\n            stopSample(this);\n        }\n    };\n\n\n    sequencer.createSample = function (config) {\n        var debug = false;\n        //return new Sample(config);\n        //console.log(config.release_duration);\n        if (debug) console.log(config);\n\n        if (config.oscillator) {\n            if (debug) console.log('synth');\n            return new SampleSynth(config);\n\n        } else if (config.sustain && config.release && config.panning) {\n            if (debug) console.log('sustain, release, panning');\n            return new SampleSustainReleasePanning(config);\n\n        } else if (config.release && config.panning) {\n            if (debug) console.log('release, panning');\n            return new SampleReleasePanning(config);\n\n        } else if (config.release && config.sustain) {\n            if (debug) console.log('release, sustain');\n            return new SampleSustainRelease(config);\n\n        } else if (config.release) {\n            if (debug) console.log('release');\n            return new SampleRelease(config);\n\n        } else {\n            if (debug) console.log('simple');\n            return new Sample(config);\n        }\n    };\n\n\n    sequencer.protectedScope.addInitMethod(function () {\n        var createClass = sequencer.protectedScope.createClass;\n\n        context = sequencer.protectedScope.context;\n        timedTasks = sequencer.protectedScope.timedTasks;\n        getEqualPowerCurve = sequencer.util.getEqualPowerCurve;\n        legacy = sequencer.legacy;\n        getSampleId = sequencer.protectedScope.getSampleId;\n        typeString = sequencer.protectedScope.typeString;\n        createPanner = sequencer.createPanner;\n\n\n        SampleRelease = createClass(Sample, function (config) {\n            this.release = true;\n\n            this.releaseDuration = config.release_duration / 1000;\n            this.releaseEnvelope = config.release_envelope;\n            //console.log(this.releaseDuration, this.releaseEnvelope);\n        });\n\n\n        SampleSustainRelease = createClass(Sample, function (config) {\n            this.release = true;\n\n            this.sustainStart = config.sustain_start / 1000;\n            this.sustainEnd = config.sustain_end / 1000;\n            this.releaseDuration = config.release_duration / 1000;\n            this.releaseEnvelope = config.release_envelope;\n            if (this.releaseEnvelope === undefined) {\n                this.releaseEnvelope = 'equal power';\n            } else if (typeString(this.releaseEnvelope) === 'array') {\n                this.releaseEnvelopeArray = config.release_envelope_array;\n                this.releaseEnvelope = 'array';\n            }\n        });\n\n        SampleSustainRelease.prototype.route = function () {\n            this.source.loop = true;\n            this.source.loopStart = this.sustainStart;\n            this.source.loopEnd = this.sustainEnd;\n            this.source.connect(this.output);\n            //console.log(this.sustainStart, this.sustainEnd);\n        };\n\n\n        SampleReleasePanning = createClass(Sample, function (config) {\n            this.release = true;\n\n            this.releaseDuration = config.release_duration / 1000;\n            this.releaseEnvelope = config.release_envelope;\n            if (this.releaseEnvelope === undefined) {\n                this.releaseEnvelope = 'equal power';\n            } else if (typeString(this.releaseEnvelope) === 'array') {\n                this.releaseEnvelopeArray = config.release_envelope_array;\n                this.releaseEnvelope = 'array';\n            }\n            this.panPosition = config.panPosition;\n        });\n\n\n        SampleReleasePanning.prototype.route = function () {\n            //console.log(this.panning);\n            this.panner = createPanner();\n            this.panner.setPosition(this.panPosition || 0);\n            this.source.connect(this.panner.node);\n            this.panner.node.connect(this.output);\n        };\n\n        SampleSustainReleasePanning = createClass(Sample, function (config) {\n            this.release = true;\n\n            this.sustainStart = config.sustain_start / 1000;\n            this.sustainEnd = config.sustain_end / 1000;\n            this.releaseDuration = config.release_duration / 1000;\n            this.releaseEnvelope = config.release_envelope;\n            if (this.releaseEnvelope === undefined) {\n                this.releaseEnvelope = 'equal power';\n            } else if (typeString(this.releaseEnvelope) === 'array') {\n                this.releaseEnvelopeArray = config.release_envelope_array;\n                this.releaseEnvelope = 'array';\n            }\n            this.panPosition = config.panPosition;\n        });\n\n\n        SampleSustainReleasePanning.prototype.route = function () {\n            this.source.loop = true;\n            this.source.loopStart = this.sustainStart;\n            this.source.loopEnd = this.sustainEnd;\n\n            this.panner = createPanner();\n            this.panner.setPosition(this.panPosition || 0);\n            this.source.connect(this.panner.node);\n            this.panner.node.connect(this.output);\n        };\n\n\n        SampleSynth = createClass(Sample, function (config) {\n            this.release = true;\n            this.panPosition = 0;\n            this.autopan = config.autopan || false;\n            this.frequency = config.event.frequency;\n            this.waveForm = config.wave_form || 0;//'sine';\n            this.releaseDuration = config.release_duration / 1000 || 1.5;\n            this.releaseEnvelope = config.release_envelope || 'equal power';\n            //console.log(config);\n        });\n\n        SampleSynth.prototype.createSource = function () {\n            this.source = context.createOscillator();\n            this.source.type = this.waveForm;\n            this.source.frequency.value = this.frequency;\n        };\n\n        SampleSynth.prototype.route = function () {\n            //create some headroom for multi-timbrality\n            this.volume *= 0.3;\n            this.output.gain.value = this.volume;\n\n            if (this.autopan) {\n                this.panner = createPanner();\n                this.panner.setPosition(0);\n                this.source.connect(this.panner.node);\n                this.panner.node.connect(this.output);\n            } else {\n                //alert(this.source + ':' + this.output.gain.value);\n                this.source.connect(this.output);\n            }\n        };\n/*\n        SampleSynth.prototype.createSource = function(){\n            this.autoPanner = context.createOscillator();\n            this.autoPanner.type = 0;\n            this.autoPanner.frequency.value = 50;\n\n\n            var tmp = context.createScriptProcessor(256,1,1);\n            tmp.onaudioprocess = function(e){\n                console.log(e.inputBuffer.getChannelData(0)[0]);\n            };\n            this.autoPanner.connect(tmp);\n            tmp.connect(context.destination);\n\n            this.source = context.createOscillator();\n            this.source.type = this.waveForm;\n            this.source.frequency.value = this.frequency;\n        };\n\n        SampleSynth.prototype.route = function(){\n            this.panner = createPanner();\n            this.panner.setPosition(0);\n            this.source.connect(this.panner.node);\n            this.panner.node.connect(this.output);\n            this.autoPanner.start();\n\n            //create some headroom for multi-timbrality\n            this.volume *= 0.3;\n            this.output.gain.value = this.volume;\n        };\n*/\n    });\n}\nfunction samplePack() {\n\n    'use strict';\n\n    var\n        ajax, //defined in util.js\n        findItem, //defined in util.js\n        storeItem, //defined in util.js\n        deleteItem, //defined in util.js\n        typeString, //defined in util.js\n        parseUrl, //defined in util.js\n        base64ToBinary, // defined in util.js\n        context, //defined in open_module.js\n        storage, //defined in open_module.js\n\n        parseTime,\n\n        folder,\n        sampleId,\n        index = 0,\n        SamplePack;\n\n\n    function parse(samplepack, config) {\n        var i, mapping = config.mapping, url, path, name, ext, slash, dot, data,\n            remotePath,\n            sampleData,\n            extension;\n\n        samplepack.samples = [];\n        samplepack.samplesById = {};\n\n        remotePath = config.remote_path;\n        remotePath = remotePath === undefined ? false : remotePath;\n\n        //console.log(samplepack.folder, samplepack.name);\n        //console.log(samplepack, config);\n\n        for (i in mapping) {\n            if (mapping.hasOwnProperty(i)) {\n                sampleData = {\n                    id: i,\n                    folder: samplepack.folder + '/' + samplepack.name,\n                };\n\n                //@TODO: this is not correct! A remote_path is not mandatory for a sample pack with urls!\n                if (remotePath !== false) {\n                    url = mapping[i];\n                    if (url.indexOf('http://') === 0 || url.indexOf('https://') === 0) {\n                        sampleData.url = url;\n                    } else {\n                        name = url;\n                        // check if the url has a path and/or an extension\n                        slash = url.lastIndexOf('/');\n                        if (slash !== -1) {\n                            name = url.substring(slash + 1);\n                        }\n                        path = url.substring(0, slash);\n                        dot = url.lastIndexOf('.');\n                        extension = config.extension;\n                        if (dot !== -1) {\n                            ext = url.substring(dot + 1);\n                            if (ext.length >= 3 && ext.length <= 4) {\n                                extension = ext;\n                                name = url.substring(slash, dot);\n                            }\n                        }\n                        //console.log('u', url, 'r',remotePath, 'p', path, 'n', name, 'e', extension);\n                        url = remotePath + '/' + path + '/' + name + '.' + extension;\n                        url = url.replace(/\\/{2,}/g, '/');\n                        url = url.replace(/^\\//, '');\n                        url = url.replace(/$\\//, '');\n                        sampleData.url = url;\n                    }\n                    //console.log('loading sample from:', sampleData.url);\n                } else {\n                    data = mapping[i];\n                    if (data.d !== undefined) {\n                        sampleData.base64 = mapping[i].d;\n                        // get the sustain loop start and end\n                        if (data.s !== undefined) {\n                            sampleData.sustain = data.s;\n                        }\n                        // get the sample specific release duration and envelope, or reference to group release duration\n                        if (data.r !== undefined) {\n                            sampleData.release = data.r;\n                        }\n                    } else {\n                        sampleData.base64 = mapping[i];\n                    }\n                    // store sample data by id so the instrument can easily retreive the loop information per sample\n                    samplepack.samplesById[i] = sampleData;\n                    //console.log(sampleData)\n                }\n                samplepack.samples.push(sampleData);\n            }\n        }\n    }\n\n\n    function loadLoop(pack, callback) {\n        //console.log('load sample pack', pack.name);\n        loadSamples(pack.samples, function (buffer) {\n            //console.log('kheb er een ferig', buffer);\n        }, function () {\n            pack.loaded = true;\n            pack.parseTime = parseTime;\n            if (sequencer.debug >= 2) {\n                console.info('parsing', pack.name, 'took', parseTime * 1000, 'ms');\n            }\n            //console.log(pack.localPath, pack.loaded);\n            if (callback) {\n                callback(true);\n            }\n        });\n    }\n\n\n    function cleanup(samplepack, callback) {\n        samplepack.reset();\n        samplepack = undefined;\n        callback(false);\n    }\n\n\n    function store(samplepack) {\n        var occupied = findItem(samplepack.localPath, sequencer.storage.samplepacks, true),\n            action = samplepack.action,\n            i, samples, sample;\n\n\n        //console.log(action, occupied);\n\n        if (occupied && occupied.className === 'SamplePack') {\n            if (action === 'overwrite') {\n                samples = occupied.samples;\n                for (i = samples.length - 1; i >= 0; i--) {\n                    sample = samples[i];\n                    deleteItem(sample.name + '/' + sample.folder, sequencer.storage.audio);\n                }\n            } else if (action === 'append') {\n                samples = occupied.samples;\n                for (i = samples.length - 1; i >= 0; i--) {\n                    samplepack.samples.push(samples[i]);\n                }\n            } else {\n                if (sequencer.debug >= 2) {\n                    console.warn('there is already a samplepack at', samplepack.localPath);\n                }\n                return false;\n            }\n        }\n\n        storeItem(samplepack, samplepack.localPath, sequencer.storage.samplepacks);\n        return true;\n    }\n\n\n    function load(pack, callback) {\n        // check if sample pack file needs to be loaded first\n        if (pack.hasMapping !== true) {\n            ajax({\n                url: pack.url,\n                responseType: 'json',\n                onError: function () {\n                    cleanup(pack, callback);\n                },\n                onSuccess: function (data) {\n                    // if the json data is corrupt (for instance because of a trailing comma) data will be null\n                    if (data === null) {\n                        callback(false);\n                        return;\n                    }\n\n                    if (data.mapping === undefined) {\n                        if (sequencer.debug >= 2) {\n                            console.warn('can\\'t create a SamplePack with this data', data);\n                        }\n                        cleanup(pack, callback);\n                        return;\n                    }\n                    if (data.name !== undefined && pack.name === undefined) {\n                        pack.name = data.name;\n                    }\n\n                    if (data.folder !== undefined && pack.folder === undefined) {\n                        pack.folder = data.folder;\n                    }\n\n                    if (pack.name === undefined) {\n                        pack.name = parseUrl(pack.url).name;\n                    }\n\n                    pack.action = data.action;\n                    pack.localPath = pack.folder !== undefined ? pack.folder + '/' + pack.name : pack.name;\n\n                    if (store(pack) === true) {\n                        parse(pack, data);\n                        loadLoop(pack, callback);\n                    } else {\n                        callback(false);\n                    }\n                }\n            });\n        } else {\n            if (store(pack) === true) {\n                loadLoop(pack, callback);\n            } else {\n                //console.log(callback);\n                callback(false);\n            }\n        }\n    }\n\n\n\n    // private\n    function loadSamples(samples, callback1, callback2) {\n        var i = 0,\n            numSamples = samples.length,\n            sample = samples[i];\n\n        function loaded(buffer) {\n            //console.log('store item', folder + '/' + sampleId);\n            // sample.buffer = buffer;\n            // storeItem(sample, folder + '/' + sampleId, storage.audio);\n            storeItem(buffer, folder + '/' + sampleId, storage.audio);\n            if (callback1) {\n                callback1(buffer);\n            }\n            i++;\n            if (i < numSamples) {\n                sample = samples[i];\n                loadSample(sample, loaded);\n            } else {\n                callback2();\n            }\n        }\n        loadSample(sample, loaded);\n    }\n\n\n    // private\n    function loadSample(data, callback) {\n        var sample,\n            url = data.url,\n            base64 = data.base64;\n\n        sampleId = data.id;\n        folder = data.folder;\n        sample = findItem(folder + '/' + sampleId, storage.audio, true);\n\n        //console.log('load sample', sample, folder, sampleId, callback.name);\n        //console.log(url);\n\n        if (sample !== false) {\n            // sample has already been loaded\n            callback(sample);\n        } else if (base64) {\n            // sample is stored as base64 data\n            //console.log(data.id, sample)\n            //sample = atob(base64);\n            //console.log(base64.substring(0,10));\n            if (base64 !== 'TWAAAP') {\n                sample = base64ToBinary(base64);\n                parseAudioData(sample, callback);\n            } else {\n                callback(sample);\n            }\n            data.base64 = '';\n        } else if (url) {\n            // sample needs to be loaded from the server\n            ajax({\n                url: url,\n                responseType: 'arraybuffer',\n                onError: function () {\n                    callback();\n                },\n                onSuccess: function (buffer) {\n                    //console.log(sampleId, buffer);\n                    parseAudioData(buffer, callback);\n                }\n            });\n        } else {\n            console.error('could not load sample', folder + '/' + sampleId);\n            //callback();\n        }\n    }\n\n    // private\n    function parseAudioData(audiodata, callback) {\n        //console.log(audiodata, typeString(audiodata), audiodata.byteLength, ArrayBuffer.isView(audiodata));\n        var ts = sequencer.getTime();\n        //console.log(ts);\n        if (audiodata !== null) {\n            try {\n                context.decodeAudioData(audiodata, function (buffer) {\n                    //console.log(buffer);\n                    parseTime += (sequencer.getTime() - ts);\n                    callback(buffer);\n                }, function (e) {\n                    console.log('error decoding audiodata', sampleId, e);\n                    callback();\n                });\n            } catch (e) {\n                console.log(sampleId, e);\n                callback();\n            }\n        }\n    }\n\n\n    SamplePack = function (config) {\n        this.id = 'SP' + index++ + new Date().getTime();\n        this.className = 'SamplePack';\n\n        this.loaded = false;\n        this.loadTime = 0;\n        this.parseTime = parseTime = 0;\n\n        this.url = config.url;\n        this.name = config.name;\n        this.folder = config.folder;\n\n        this.info = config.info || config.samplepack_info;\n        this.author = config.author || config.samplepack_author;\n        this.license = config.license || config.samplepack_license;\n        this.compression = config.compression || config.samplepack_compression;\n        if (this.compression === undefined) {\n            if (config.compression_type !== undefined) {\n                this.compression = config.compression_type + ' ' + config.compression_level;\n            }\n        }\n        this.pack = config.pack;\n        this.filesize = config.filesize;\n\n        if (this.filesize === undefined && this.pack !== undefined) {\n            this.filesize = this.pack.filesize;\n            //console.log(this.filesize);\n        }\n\n\n        if (config.mapping) {\n            if (this.name === undefined && this.folder === undefined) {\n                this.name = this.id;\n                this.localPath = this.id;\n            } else {\n                this.localPath = this.folder !== undefined ? this.folder + '/' + this.name : this.name;\n            }\n            // set hasMapping to \"true\" so we know that we don't have to load json data from the server\n            this.hasMapping = true;\n            this.action = config.action;\n            parse(this, config);\n        } else if (config.url) {\n            this.url = config.url;\n            //console.log(this.url);\n        }\n    };\n\n\n    SamplePack.prototype.reset = function () {\n        this.samples = [];\n    };\n\n\n    sequencer.addSamplePack = function (config, callback, callbackAfterAllTasksAreDone) {\n        var type = typeString(config),\n            samplepack, json, name, folder;\n\n        callbackAfterAllTasksAreDone = callbackAfterAllTasksAreDone === undefined ? false : callbackAfterAllTasksAreDone;\n\n        //console.log(config);\n\n        if (type !== 'object') {\n            if (sequencer.debug >= 2) {\n                console.warn('can\\'t create a SamplePack with this data', config);\n            }\n            return false;\n        }\n\n        if (config.json) {\n            json = config.json;\n            name = config.name;\n            folder = config.folder;\n            if (typeString(json) === 'string') {\n                try {\n                    json = JSON.parse(json);\n                } catch (e) {\n                    if (sequencer.debug >= 2) {\n                        console.warn('can\\'t create a SamplePack with this data', config);\n                    }\n                    return false;\n                }\n            }\n            if (json.mapping === undefined) {\n                if (sequencer.debug >= 2) {\n                    console.warn('can\\'t create a SamplePack with this data', config);\n                }\n                return false;\n            }\n            config = {\n                mapping: json.mapping,\n                name: name === undefined ? json.name : name,\n                folder: folder === undefined ? json.folder : folder\n            };\n            //console.log('config', name, folder, json.name, json.folder);\n        }\n\n\n        samplepack = new SamplePack(config);\n        //console.log(samplepack.filesize);\n\n        sequencer.addTask({\n            type: 'load sample pack',\n            method: load,\n            params: samplepack\n        }, function (value) {\n            //console.log(samplepack, value);\n            if (callback) {\n                if (value === false) {\n                    samplepack = null;\n                    callback(null);\n                } else {\n                    callback(samplepack);\n                }\n            }\n        }, callbackAfterAllTasksAreDone);\n\n        sequencer.startTaskQueue();\n\n        /*\n                load(samplepack, function(){\n                    //console.log(samplepack);\n                    store(samplepack);\n                    if(callback){\n                        callback(samplepack);\n                    }\n                });\n        */\n    };\n\n    sequencer.protectedScope.addInitMethod(function () {\n        storage = sequencer.storage;\n        ajax = sequencer.protectedScope.ajax;\n        context = sequencer.protectedScope.context;\n        findItem = sequencer.protectedScope.findItem;\n        parseUrl = sequencer.protectedScope.parseUrl;\n        storeItem = sequencer.protectedScope.storeItem;\n        deleteItem = sequencer.protectedScope.deleteItem;\n        typeString = sequencer.protectedScope.typeString;\n        base64ToBinary = sequencer.protectedScope.base64ToBinary;\n    });\n\n}function scheduler() {\n\n  'use strict';\n\n  var\n    typeString, // defined in util.js\n    objectForEach, // defined in util.js\n    context,\n    getTimeDiff,\n\n    // the amount of time in millis that events are scheduled ahead relative to the current playhead position, defined in open_module.js\n    //bufferTime = sequencer.bufferTime * 1000,\n\n    Scheduler;\n\n\n  Scheduler = function (song) {\n    this.song = song;\n    this.looped = false;\n    this.notes = {};\n    this.audioEvents = {};\n    this.timeDiff = getTimeDiff();\n  };\n\n\n  Scheduler.prototype.updateSong = function () {\n    this.events = this.song.eventsMidiAudioMetronome;\n    this.numEvents = this.events.length;\n    this.index = 0;\n    this.maxtime = 0;\n    this.notes = {};\n    this.audioEvents = this.song.audioEvents;\n    this.numAudioEvents = this.audioEvents.length;\n    this.scheduledAudioEvents = {};\n    this.looped = false;\n    this.setIndex(this.song.millis);\n    //console.log('Scheduler.setIndex', this.index, this.numEvents);\n  };\n\n\n  Scheduler.prototype.setIndex = function (millis) {\n    var i;\n    for (i = 0; i < this.numEvents; i++) {\n      if (this.events[i].millis >= millis) {\n        this.index = i;\n        break;\n      }\n    }\n    //console.log(millis);\n    this.beyondLoop = false;\n    if (millis > this.song.loopEnd) {\n      this.beyondLoop = true;\n    }\n\n    this.scheduledAudioEvents = {};\n  };\n\n  /*\n      A dangling audio event start before, and ends after the current position of the playhead. We have to calculate the difference between\n      the start of the sample (event.millis) and the position of the playhead (song.millis). This value is the playheadOffset, and the sample\n      starts the number of seconds of the playheadOffset into the sample.\n\n      Also the audio event is scheduled the number of milliseconds of the playhead later to keep it in sync with the rest of the song.\n\n      The playheadOffset is applied to the audio sample in audio_track.js\n  */\n  Scheduler.prototype.getDanglingAudioEvents = function (millis, events) {\n    var i, event, num = 0;\n\n    for (i = 0; i < this.numAudioEvents; i++) {\n      event = this.audioEvents[i];\n      if (event.millis < millis && event.endMillis > millis) {\n        event.playheadOffset = (millis - event.millis);\n        event.time = this.startTime + event.millis - this.songStartMillis + event.playheadOffset;\n        event.playheadOffset /= 1000;\n        this.scheduledAudioEvents[event.id] = event;\n        //console.log('getDanglingAudioEvents', event.id);\n        events.push(event);\n        num++;\n      } else {\n        event.playheadOffset = 0;\n      }\n      //console.log('playheadOffset', event.playheadOffset);\n    }\n    //console.log('getDanglingAudioEvents', num);\n    return events;\n  };\n\n\n  Scheduler.prototype.getEvents = function () {\n    var i, event, events = [], note, noteOn, noteOff, endMillis, endTicks, diff, buffertime, audioEvent;\n\n    buffertime = sequencer.bufferTime * 1000;\n    if (this.song.doLoop === true && this.song.loopDuration < buffertime) {\n      this.maxtime = this.songMillis + this.song.loopDuration - 1;\n      //console.log(maxtime, this.song.loopDuration);\n    }\n\n    if (this.song.doLoop === true) {\n\n      if (this.maxtime >= this.song.loopEnd && this.beyondLoop === false) {\n        //if(this.maxtime >= this.song.loopEnd && this.prevMaxtime < this.song.loopEnd){\n        //if(this.maxtime >= this.song.loopEnd && this.song.jump !== true){\n\n        diff = this.maxtime - this.song.loopEnd;\n        this.maxtime = this.song.loopStart + diff;\n\n        //console.log(maxtime, this.song.loopEnd, diff);\n        if (this.looped === false) {\n          //console.log(this.song.millis, maxtime, diff);\n          this.looped = true;\n          //console.log('LOOP', this.song.loopEnd, this.maxtime);\n          for (i = this.index; i < this.numEvents; i++) {\n            event = this.events[i];\n            if (event.millis < this.song.loopEnd) {\n              //console.log('  ', event.track.name, maxtime, this.index, this.numEvents);\n              event.time = this.startTime + event.millis - this.songStartMillis;\n              events.push(event);\n              this.index++;\n            } else {\n              break;\n            }\n          }\n\n          // stop overflowing notes-> move the note off event to the position of the right locator (end of the loop)\n          endTicks = this.song.loopEndTicks - 1;\n          endMillis = this.song.getPosition('ticks', endTicks).millis;\n          for (i in this.notes) {\n            if (this.notes.hasOwnProperty(i)) {\n              note = this.notes[i];\n              noteOn = note.noteOn;\n              noteOff = note.noteOff;\n              if (noteOff.millis <= this.song.loopEnd) {\n                continue;\n              }\n              event = sequencer.createMidiEvent(endTicks, 128, noteOn.data1, 0);\n              event.millis = endMillis;\n              event.part = noteOn.part;\n              event.track = noteOn.track;\n              event.midiNote = noteOn.midiNote;\n              event.time = this.startTime + event.millis - this.songStartMillis;\n              events.push(event);\n            }\n          }\n          // stop overflowing audio samples\n          for (i in this.scheduledAudioEvents) {\n            if (this.scheduledAudioEvents.hasOwnProperty(i)) {\n              audioEvent = this.scheduledAudioEvents[i];\n              if (audioEvent.endMillis > this.song.loopEnd) {\n                audioEvent.stopSample(this.song.loopEnd / 1000);\n                delete this.scheduledAudioEvents[i];\n                //console.log('stopping audio event', i);\n              }\n            }\n          }\n          this.notes = {};\n          this.setIndex(this.song.loopStart);\n          this.song.startTime += this.song.loopDuration;\n          this.startTime = this.song.startTime;\n          // get the audio events that start before song.loopStart\n          this.getDanglingAudioEvents(this.song.loopStart, events);\n        }\n      } else {\n        this.looped = false;\n      }\n    }\n\n    if (this.firstRun === true) {\n      this.getDanglingAudioEvents(this.song.millis, events);\n      this.firstRun = false;\n    }\n\n    for (i = this.index; i < this.numEvents; i++) {\n      event = this.events[i];\n\n      if (event.millis < this.maxtime) {\n        // if(this.song.bar >= 6 && event.track.name === 'Sonata # 3'){\n        //     console.log('  song:', this.song.millis, 'event:', event.millis, ('(' + event.type + ')'), 'max:', maxtime, 'id:', event.midiNote.id);\n        // }\n        event.time = this.startTime + event.millis - this.songStartMillis;\n\n        if (event.type === 144 || event.type === 128) {\n          if (event.midiNote !== undefined && event.midiNote.noteOff !== undefined) {\n            if (event.type === 144) {\n              this.notes[event.midiNote.id] = event.midiNote;\n            } else if (event.type === 128) {\n              delete this.notes[event.midiNote.id];\n            }\n            events.push(event);\n          }\n        } else if (event.type === 'audio') {\n          if (this.scheduledAudioEvents[event.id] !== undefined) {\n            // @TODO: delete the entry in this.scheduledAudioEvents after the sample has finished\n            // -> this happens when you move the playhead outside a loop if doLoop is true\n            //console.log('this shouldn\\'t happen!');\n            //continue;\n            audioEvent = this.scheduledAudioEvents[event.id];\n            if (audioEvent.sample !== undefined && audioEvent.sample.source !== undefined) {\n              audioEvent.stopSample(0);\n              // }else{\n              //     continue;\n            }\n          }\n          this.scheduledAudioEvents[event.id] = event;\n          //console.log('scheduling', event.id);\n          // the scheduling time has to be compensated with the playheadOffset (in millis)\n          event.time = event.time + (event.playheadOffset * 1000);\n          events.push(event);\n        } else {\n          // controller events\n          events.push(event);\n        }\n        this.index++;\n      } else {\n        break;\n      }\n    }\n    // const f = events.filter(e => e.type === 144).map(e => e.time);\n    // if (f.length > 0) {\n    //     console.log(Math.round(context.currentTime * 1000000) / 1000);\n    //     console.log(f);\n    //     console.log('---');\n    // }\n    return events;\n  };\n\n\n  Scheduler.prototype.update = function () {\n    var i,\n      event,\n      numEvents,\n      events,\n      track,\n      channel,\n      // timeDiff = this.timeDiff;\n      timeDiff = getTimeDiff();\n\n    this.prevMaxtime = this.maxtime;\n\n    if (this.song.precounting === true) {\n      this.songMillis = this.song.metronome.millis;\n      this.maxtime = this.songMillis + (sequencer.bufferTime * 1000);\n      events = [].concat(this.song.metronome.getPrecountEvents(this.maxtime));\n\n      if (this.maxtime > this.song.metronome.endMillis) {\n        // start scheduling events of the song -> add the first events of the song\n        this.songMillis = 0;//this.song.millis;\n        this.maxtime = this.song.millis + (sequencer.bufferTime * 1000);\n        this.startTime = this.song.startTime;\n        this.songStartMillis = this.song.startMillis;\n        events = this.getEvents();\n      }\n    } else {\n      this.songMillis = this.song.millis;\n      this.maxtime = this.songMillis + (sequencer.bufferTime * 1000);\n      this.startTime = this.song.startTime;\n      this.songStartMillis = this.song.startMillis;\n      events = this.getEvents();\n    }\n\n    numEvents = events.length;\n\n    //for(i = events.length - 1; i >= 0; i--){\n    for (i = 0; i < numEvents; i++) {\n      event = events[i];\n      track = event.track;\n      // if(event.muted) {\n      //     console.log(event.ticks, event.noteNumber);\n      // }\n      if (\n        track === undefined ||\n        event.muted === true ||\n        event.part.mute === true ||\n        event.track.mute === true ||\n        (event.track.type === 'metronome' && this.song.useMetronome === false)\n      ) {\n        continue;\n      }\n\n\n      if (event.type === 'audio') {\n        event.time /= 1000;\n        track.audio.processEvent(event);\n      } else {\n\n        if (track.routeToMidiOut === false) {\n          // if(event.type === 144){\n          //     console.log(event.time/1000, sequencer.getTime(), event.time/1000 - sequencer.getTime());\n          // }\n          event.time /= 1000;\n          //console.log('scheduled', event.type, event.time, event.midiNote.id);\n          //console.log(track.instrument.processEvent);\n          track.instrument.processEvent(event);\n        } else {\n          channel = track.channel;\n          if (channel === 'any' || channel === undefined || isNaN(channel) === true) {\n            channel = 0;\n          }\n          objectForEach(track.midiOutputs, function (midiOutput) {\n            if (event.type === 128 || event.type === 144 || event.type === 176) {\n              // midiOutput.send([event.type, event.data1, event.data2], event.time + sequencer.midiOutLatency);\n              // console.log(context.currentTime, performance.now(), timeDiff, event.time + track.audioLatency);\n              let vel = event.data2;\n              if (event.type === 128 || event.type === 144) {\n                vel *= track.volume;\n              }\n              midiOutput.send([event.type + channel, event.data1, vel], event.time + track.audioLatency + timeDiff);\n              // console.log('TIMEDIFF', timeDiff);\n            } else if (event.type === 192 || event.type === 224) {\n              midiOutput.send([event.type + channel, event.data1], event.time + track.audioLatency);\n            }\n          });\n          // needed for Song.resetExternalMidiDevices()\n          this.lastEventTime = event.time;\n        }\n      }\n    }\n  };\n\n\n  function loop(data, i, maxi, events) {\n    var arg;\n    for (i = 0; i < maxi; i++) {\n      arg = data[i];\n      if (arg === undefined) {\n        continue;\n      } else if (arg.className === 'MidiEvent') {\n        events.push(arg);\n      } else if (arg.className === 'MidiNote') {\n        events.push(arg.noteOn);\n      } else if (typeString(arg) === 'array') {\n        loop(arg, 0, arg.length);\n      }\n    }\n  }\n\n\n  Scheduler.prototype.unschedule = function () {\n    var args = Array.prototype.slice.call(arguments),\n      events = [],\n      i, e, track, instrument;\n\n    loop(args, 0, args.length, events);\n\n    for (i = events.length - 1; i >= 0; i--) {\n      e = events[i];\n      track = e.track;\n      instrument = track.instrument;\n      if (instrument) {\n        instrument.unscheduleEvent(e);\n      }\n    }\n  };\n\n\n  Scheduler.prototype.reschedule = function () {\n    var i, track,\n      numTracks = this.song.numTracks,\n      tracks = this.song.tracks;\n\n    for (i = 0; i < numTracks; i++) {\n      track = tracks[i];\n      track.instrument.reschedule(this.song);\n    }\n  };\n\n  sequencer.protectedScope.addInitMethod(function () {\n    getTimeDiff = sequencer.getTimeDiff;\n    context = sequencer.protectedScope.context;\n    typeString = sequencer.protectedScope.typeString;\n    objectForEach = sequencer.protectedScope.objectForEach;\n  });\n\n\n  sequencer.protectedScope.createScheduler = function (song) {\n    return new Scheduler(song);\n  };\n\n}function createSequencer() {\n\n    'use strict';\n\n    var\n        slice = Array.prototype.slice,\n\n        //import\n        typeString, // defined in util.js\n        isEmptyObject, // defined in util.js\n        objectToArray, // defined in util.js\n        objectForEach, // defined in util.js\n        createMidiEvent, // defined in midi_event.js\n        context, // defined in open_module.js\n        timedTasks, // defined in open_module.js\n        scheduledTasks, // defined in open_module.js\n        repetitiveTasks, // defined in open_module.js\n        masterGainNode, // defined in open_module.js\n        parseTimeEvents, // defined in parse_time_events.js\n\n        r = 0,\n\n        heartbeat, // the heartbeat of the sequencer\n        lastTimeStamp,\n\n        processEventTracks = {},\n        events, // the events that are currently been processed\n\n        pausedSongs = [],\n        activeSongs = {},\n        snapshots = {};\n\n\n    function addSong(song) {\n        activeSongs[song.id] = song;\n    }\n\n\n    sequencer.getSongs = function () {\n        return activeSongs;\n    };\n\n\n    function removeProperties(obj) {\n        var i;\n        for (i in obj) {\n            if (obj.hasOwnProperty(i)) {\n                //console.log(i);\n                obj[i] = null;\n            }\n        }\n    }\n\n    sequencer.deleteSong = function (song) {\n        if (song === undefined || song === null || song.className !== 'Song') {\n            return;\n        }\n\n        // clean up\n        song.stop();\n        song.disconnect(masterGainNode);\n        //parseTimeEvents();\n\n        // remove reference\n        delete activeSongs[song.id];\n\n        var i, track,\n            j, part,\n            k, note, event;\n\n        //console.log(allEvents.length, song.events.length, metronome.events.length);\n        ///*\n        for (i = song.eventsMidiAudioMetronome.length - 1; i >= 0; i--) {\n            event = song.eventsMidiAudioMetronome[i];\n            removeProperties(event);\n        }\n\n        for (i = song.timeEvents.length - 1; i >= 0; i--) {\n            event = song.timeEvents[i];\n            //removeProperties(event);\n        }\n        //*/\n\n        for (i = song.numTracks - 1; i >= 0; i--) {\n\n            track = song.tracks[i];\n\n            if (track.audio !== undefined) {\n                track.audio.recorder.cleanup();\n            }\n\n            for (j = track.numParts - 1; j >= 0; j--) {\n                part = track.parts[j];\n\n                for (k = part.numNotes - 1; k >= 0; k--) {\n                    note = part.notes[k];\n                    removeProperties(note);\n                }\n\n                // for(k = part.numEvents - 1; k >= 0; k--){\n                //     event = part.events[k];\n                //     removeProperties(event);\n                // }\n\n                removeProperties(part);\n                part = null;\n            }\n            removeProperties(track);\n            track = null;\n        }\n        removeProperties(song);\n        song = null;\n        return null;\n    };\n\n\n    sequencer.getSnapshot = function (song, id) {\n\n        if (song === undefined) {\n            console.error('song is undefined');\n            return;\n        }\n\n        id = id || song.id;\n\n        var snapshot = snapshots[id],\n            activeEvents = song.activeEvents,\n            activeNotes = song.activeNotes,\n            activeParts = song.activeParts,\n            nonActiveEvents = [],\n            nonActiveNotes = [],\n            nonActiveParts = [],\n            prevActiveEvents,\n            prevActiveNotes,\n            prevActiveParts,\n            e, n, p, i;\n\n        if (snapshot !== undefined) {\n            prevActiveEvents = snapshot.activeEvents;\n            prevActiveNotes = snapshot.activeNotes;\n            prevActiveParts = snapshot.activeParts;\n\n            for (i = prevActiveEvents.length - 1; i >= 0; i--) {\n                e = prevActiveEvents[i];\n                if (activeEvents[e.id] === undefined) {\n                    if (song.eventsLib[e.id] !== undefined) {\n                        nonActiveEvents.push(e);\n                    }\n                }\n            }\n\n            for (i = prevActiveNotes.length - 1; i >= 0; i--) {\n                n = prevActiveNotes[i];\n                if (activeNotes[n.id] === undefined) {\n                    if (song.notesLib[n.id] !== undefined) {\n                        nonActiveNotes.push(n);\n                    }\n                }\n            }\n\n            for (i = prevActiveParts.length - 1; i >= 0; i--) {\n                p = prevActiveParts[i];\n                if (activeParts[p.id] === undefined) {\n                    nonActiveParts.push(p);\n                }\n            }\n        }\n\n        snapshot = {\n            activeEvents: objectToArray(activeEvents),\n            activeNotes: objectToArray(activeNotes),\n            activeParts: objectToArray(activeParts),\n            nonActiveEvents: nonActiveEvents,\n            nonActiveNotes: nonActiveNotes,\n            nonActiveParts: nonActiveParts\n        };\n\n        snapshots[id] = snapshot;\n\n        return snapshot;\n    };\n\n\n    heartbeat = function (timestamp) {\n        var i, diff, task, now = sequencer.getTime();\n\n        // if(isEmptyObject(timedTasks) === false){\n        //     console.log(timedTasks);\n        // }\n\n        // for instance: the callback of sample.unschedule;\n        for (i in timedTasks) {\n            if (timedTasks.hasOwnProperty(i)) {\n                task = timedTasks[i];\n                if (task.time >= now) {\n                    task.execute();\n                    task = null;\n                    delete timedTasks[i];\n                }\n            }\n        }\n\n\n        // for instance: song.update();\n        for (i in scheduledTasks) {\n            if (scheduledTasks.hasOwnProperty(i)) {\n                scheduledTasks[i]();\n            }\n        }\n\n        // for instance: song.pulse();\n        for (i in repetitiveTasks) {\n            if (repetitiveTasks.hasOwnProperty(i)) {\n                repetitiveTasks[i]();\n            }\n        }\n\n        // skip the first 10 frames because they tend to have weird intervals\n        if (r >= 10) {\n            diff = (timestamp - lastTimeStamp) / 1000;\n            sequencer.diff = diff;\n            // if(r < 40){\n            //     console.log(diff);\n            //     r++;\n            // }\n            if (diff > sequencer.bufferTime && sequencer.autoAdjustBufferTime === true) {\n                if (sequencer.debug) {\n                    console.log('adjusted buffertime:' + sequencer.bufferTime + ' -> ' + diff);\n                }\n                sequencer.bufferTime = diff;\n            }\n        } else {\n            r++;\n        }\n        lastTimeStamp = timestamp;\n        scheduledTasks = {};\n\n        //setTimeout(heartbeat, 100);\n        window.requestAnimationFrame(heartbeat);\n    };\n\n\n    sequencer.processEvent = sequencer.processEvents = function () {\n        var args = slice.call(arguments),\n            loop, arg, i, maxi, time, contextTime, event,\n            bpm = 60,\n            midiEvent, type,\n            instrument, part, track,\n            secondsPerTick;\n\n        events = [];\n\n        loop = function (data, i, maxi) {\n            for (i = 0; i < maxi; i++) {\n                arg = data[i];\n                type = typeString(arg);\n                if (arg === undefined) {\n                    //console.log(i, arg);\n                    continue;\n                } else if (type === 'midimessageevent') {\n                    data = arg.data;\n                    midiEvent = createMidiEvent(0, data[0], data[1], data[2]);\n                    events.push(midiEvent);\n                } else if (arg.className === 'MidiEvent') {\n                    events.push(arg);\n                } else if (type === 'array') {\n                    loop(arg, 0, arg.length);\n                } else if (type === 'string') {\n                    instrument = arg;\n                } else if (isNaN(arg) === false) {\n                    bpm = arg;\n                }\n            }\n        };\n\n        loop(args, 0, args.length);\n\n        part = sequencer.createPart();\n        track = sequencer.createTrack();\n        track.setInstrument(instrument);\n\n        if (processEventTracks[track.instrumentId] === undefined) {\n            processEventTracks[track.instrumentId] = track;\n            track.addPart(part);\n            track.connect(context.destination);\n        } else {\n            track = processEventTracks[track.instrumentId];\n            part = track.parts[0];\n        }\n\n        part.addEvents(events);\n        track.update();\n\n        maxi = events.length;\n        contextTime = sequencer.getTime();\n        secondsPerTick = 60 / bpm / sequencer.defaultPPQ;\n        for (i = 0; i < maxi; i++) {\n            event = events[i];\n            event.time = contextTime + (event.ticks * secondsPerTick) + (2 / 1000);//ms -> sec, add 2 ms prebuffer time\n            //time = contextTime + (event.ticks * secondsPerTick) + (2/1000);//ms -> sec, add 2 ms prebuffer time\n            //console.log(event.ticks, time, contextTime);\n            //track.instrument.processEvent(event, time);\n            track.instrument.processEvent(event);\n        }\n    };\n\n\n    sequencer.stopProcessEvent = sequencer.stopProcessEvents = function () {\n        objectForEach(processEventTracks, function (track) {\n            track.instrument.allNotesOff();\n            track = undefined;\n        });\n        processEventTracks = {};\n    };\n\n\n    sequencer.play = function () {\n        var args = slice.call(arguments),\n            events = [],\n            parts = [],\n            tracks = [],\n            songs = [],\n            timeEvents = [],\n            i, arg, loop, store = false,\n            song, track, part, bpm, nominator, denominator, instrument;\n\n        //console.log('sequencer.play()', args);\n\n        loop = function (data, i, maxi, indentation) {\n            for (i = 0; i < maxi; i++) {\n                arg = data[i];\n                if (arg === undefined) {\n                    //console.log(indentation, i, arg);\n                    continue;\n                } else if (typeString(arg) === 'string') {\n                    instrument = arg;\n                } else if (arg.className === 'Song') {\n                    if (bpm === undefined) {\n                        bpm = arg.bpm;\n                        nominator = arg.nominator;\n                        denominator = arg.denominator;\n                    }\n                    songs.push(arg);\n                } else if (arg.className === 'Track') {\n                    if (bpm === undefined) {\n                        song = arg.song;\n                        if (song !== undefined) {\n                            bpm = song.bpm;\n                            nominator = song.nominator;\n                            denominator = song.denominator;\n                        }\n                    }\n                    tracks.push(arg);\n                } else if (arg.className === 'Part') {\n                    if (bpm === undefined) {\n                        song = arg.song;\n                        if (song !== undefined) {\n                            bpm = song.bpm;\n                            nominator = song.nominator;\n                            denominator = song.denominator;\n                        }\n                    }\n                    parts.push(arg);\n                } else if (arg.className === 'MidiEvent' || arg.className === 'AudioEvent') {\n                    if (bpm === undefined) {\n                        part = arg.part;\n                        if (part !== undefined) {\n                            song = part.song;\n                            if (song !== undefined) {\n                                bpm = song.bpm;\n                                nominator = song.nominator;\n                                denominator = song.denominator;\n                            }\n                        }\n                    }\n                    if (arg.type === 0x51 || arg.type === 0x58) {\n                        timeEvents.push(arg);\n                    } else {\n                        events.push(arg);\n                    }\n                } else if (typeString(arg) === 'array') {\n                    //console.log('recursive loop')\n                    loop(arg, 0, arg.length, '    ');\n                } else if (arg === true || arg === false) {\n                    store = arg;\n                } else if (arg.indexOf('S') === 0) {\n                    // play song by id, not sure if this is useful\n                    song = activeSongs[arg];\n                    if (song) {\n                        song.play();\n                    }\n                }\n            }\n        };\n\n        loop(args, 0, args.length, '  ');\n\n        for (i = songs.length - 1; i >= 0; i--) {\n            song = songs[i];\n            //console.log(song.numEvents);\n            tracks = tracks.concat(song.tracks);\n            //parts = parts.concat(song.parts);\n            //events = events.concat(song.events);\n            timeEvents = timeEvents.concat(song.timeEvents);\n        }\n\n        if (parts.length > 0) {\n            track = sequencer.createTrack();\n            track.instrument = instrument;\n            track.addParts(parts);\n            tracks.push(track);\n        }\n\n        if (events.length > 0) {\n            track = sequencer.createTrack();\n            track.instrument = instrument;\n            part = sequencer.createPart();\n            part.addEvents(events);\n            track.addPart(part);\n            tracks.push(track);\n        }\n\n\n        //console.log(songs.length, tracks.length, parts.length, events.length, bpm, nominator, denominator);\n\n        song = sequencer.createSong({\n            bpm: bpm || 120,\n            nominator: nominator || 4,\n            denominator: denominator || 4,\n            timeEvents: timeEvents,\n            tracks: tracks\n        });\n\n        addSong(song);\n        song.play();\n        return song;\n    };\n\n\n    /*\n        animationFrame = function(cb) {\n            animationFrameRequests.push(cb);\n    \n            if (animationFrameTimer !== undefined) {\n                return animationFrameTimer;\n            }\n    \n            animationFrameTimer = setTimeout(function() {\n                while (animationFrameRequests.length > 0) {\n                    animationFrameRequests.shift()();\n                }\n                animationFrameTimer = undefined;\n            }, animationFrameInterval);\n    \n            return animationFrameTimer;\n        };\n    */\n\n\n    sequencer.setAnimationFrameType = function (type, interval) {\n        type = type || 'default';\n        type = type.toLowerCase();\n        interval = interval || 15;\n        switch (type) {\n            case 'settimeout':\n                /*\n                animationFrameInterval = interval || animationFrameInterval;\n                animationFrameRequests = [];\n                window.requestAnimationFrame = animationFrame;\n                */\n                // quick and dirty\n                window.requestAnimationFrame = function (cb) {\n                    setTimeout(cb, interval);\n                };\n                break;\n            default:\n                /*\n                clearTimeout(animationFrameTimer);\n                */\n                window.requestAnimationFrame = window.webkitRequestAnimationFrame || window.requestAnimationFrame;\n        }\n    };\n\n\n    // used by asset_manager.js if an instrument or a sample pack has been unloaded\n    sequencer.protectedScope.updateInstruments = function () {\n        var i, j, tracks, track, song;\n\n        for (i in activeSongs) {\n            if (activeSongs.hasOwnProperty(i)) {\n                song = activeSongs[i];\n                tracks = song.tracks;\n                for (j = tracks.length - 1; j >= 0; j--) {\n                    track = tracks[j];\n                    //console.log(track.id);\n                    track.instrument.reset();\n                }\n            }\n        }\n    };\n\n\n    sequencer.allNotesOff = function () {\n        objectForEach(activeSongs, function (song) {\n            song.allNotesOff();\n        });\n    };\n\n\n    window.onblur = function () {\n        if (sequencer.pauseOnBlur === false) {\n            return;\n        }\n        //console.log('blur', sequencer.getTime() * 1000);\n        sequencer.allNotesOff();\n        pausedSongs = [];\n        objectForEach(activeSongs, function (song) {\n            if (song.playing === true) {\n                if (sequencer.debug) {\n                    console.log('pause song', song.id);\n                }\n                pausedSongs.push(song);\n                song.pause();\n                //song.stop();\n            }\n        });\n    };\n\n\n    window.onfocus = function () {\n        if (sequencer.pauseOnBlur === false) {\n            return;\n        }\n        //console.log('focus', sequencer.getTime() * 1000);\n        var song, millis, i, maxi = pausedSongs.length;\n        for (i = 0; i < maxi; i++) {\n            song = pausedSongs[i];\n            millis = song.millis;\n            song.stop();\n            song.setPlayhead('millis', millis);\n            if (sequencer.restartOnFocus) {\n                song.play();\n            }\n        }\n        pausedSongs = [];\n    };\n\n\n    sequencer.protectedScope.addSong = addSong;\n\n    sequencer.protectedScope.addInitMethod(function () {\n        objectToArray = sequencer.protectedScope.objectToArray;\n        isEmptyObject = sequencer.protectedScope.isEmptyObject;\n        isEmptyObject = sequencer.protectedScope.isEmptyObject;\n        objectForEach = sequencer.protectedScope.objectForEach;\n        timedTasks = sequencer.protectedScope.timedTasks;\n        scheduledTasks = sequencer.protectedScope.scheduledTasks;\n        repetitiveTasks = sequencer.protectedScope.repetitiveTasks;\n        typeString = sequencer.protectedScope.typeString;\n        context = sequencer.protectedScope.context;\n        createMidiEvent = sequencer.createMidiEvent;\n        masterGainNode = sequencer.protectedScope.masterGainNode;\n        parseTimeEvents = sequencer.protectedScope.parseTimeEvents;\n        heartbeat();\n    });\n\n}\n\n\n\n\n/*\n    // removed for clarity\n\n    sequencer.play = function(song){\n        song = checkSong(song);\n        if(song === false){\n            console.error('no song loaded or specified');\n            return;\n        }\n        song.play();\n    };\n\n\n    sequencer.pause = function(song){\n        song = checkSong(song);\n        if(song === false){\n            console.error('no song loaded or specified');\n            return;\n        }\n        song.pause();\n    };\n\n\n    sequencer.stop = function(song){\n        song = checkSong(song);\n        if(song === false){\n            console.error('no song loaded or specified');\n            return;\n        }\n        song.stop();\n    };\n\n\n    sequencer.addEventListener = function(){\n        if(sequencer.song === undefined){\n            console.error('no song in sequencer');\n            return;\n        }\n        return sequencer.song.addEventListener.apply(sequencer.song, arguments);\n    };\n\n\n    sequencer.removeEventListener = function(){\n        if(sequencer.song === undefined){\n            console.error('no song in sequencer');\n            return;\n        }\n        return sequencer.song.removeEventListener.apply(sequencer.song, arguments);\n    };\n\n\n    checkSong = function(song){\n        if(song){\n            return song.className === 'Song' ? song : false;\n        }else if(sequencer.song){\n            return sequencer.song.className === 'Song' ? sequencer.song : false;\n        }else{\n            return false;\n        }\n    };\n\n\n\n*/\n\n\n/*\n    sequencer.playEvents = function(){\n        var args = slice.call(arguments),\n            i, arg, loop, bpm, nominator, denominator,\n            part, song, events = [];\n\n        loop = function(data){\n            for(i = data.length - 1; i >= 0; i--){\n                arg = data[i];\n                if(typeString(arg) === 'array'){\n                    loop(arg);\n                }else if(arg.className === 'MidiEvent' || arg.className === 'AudioEvent'){\n                    if(bpm === undefined){\n                        part = arg.part;\n                        if(part !== undefined){\n                            song = part.song\n                            if(song !== undefined){\n                                bpm = song.bpm;\n                                nominator = song.nominator;\n                                denominator = song.denominator;\n                            }\n                        }\n                    }\n                    events.push(arg);\n                }\n            }\n        };\n\n        loop(args);\n\n        //console.log(events, bpm, nominator, denominator);\n\n        song = sequencer.createSong({\n            bpm: bpm || 120,\n            nominator: nominator || 4,\n            denominator: denominator || 4,\n            events: events\n        });\n\n        songs[song.id] = song;\n        //console.log(song.durationMillis);\n        //console.log(songs);\n\n        song.addEventListener('end', function(){\n            console.log('end', this.id);\n            //delete songs[this.id];\n            //console.log(songs);\n        });\n        song.play();\n        return song.id;\n    };\n*/\n\n/*\n    // moved to song\n\n    sequencer.midiIn = function(){// events, [song|track|part]\n\n    };\n\n\n    sequencer.midiOut = function(){// channel\n\n    };\n\n\n    sequencer.midiThru = function(){// channel\n\n    };\n\n*/\nfunction song() {\n\n  'use strict';\n\n  var\n    slice = Array.prototype.slice,\n\n    //import\n    createMidiEvent, // → defined in midi_event.js\n    createPlayhead, // → defined in playhead.js\n    createFollowEvent, // → defined in song_follow_event.js\n    createScheduler, // → defined in scheduler.js\n    createMetronome, // → defined in metronome.js\n    followEvent, // → defined in follow_event_song.js\n    masterGainNode, // -> defined in open_module.js\n    context, // -> defined in open_module.js\n    timedTasks, // -> defined in open_module.js\n    repetitiveTasks, // -> defined in open_module.js\n    initMidi, // defined in midi_system.js\n    addMidiEventListener, // defined in midi_system.js\n    removeMidiEventListener, // defined in midi_system.js\n    setMidiInput, // defined in midi_system.js\n    setMidiOutput, // defined in midi_system.js\n    getMidiInputs, // defined in midi_system.js\n    getMidiOutputs, // defined in midi_system.js\n    getMidiPortsAsDropdown, // defined in midi_system.js\n\n    getPosition, // → defined in position.js\n    millisToTicks, // → defined in position.js\n    ticksToMillis, // → defined in position.js\n    ticksToBars, // → defined in position.js\n    millisToBars, // → defined in position.js\n    barsToTicks, // → defined in position.js\n    barsToMillis, // → defined in position.js\n\n    addEventListener, // → defined in song_event_listener.js\n    removeEventListener, // → defined in song_event_listener.js\n    dispatchEvent, // → defined in song_event_listener.js\n\n    update, // → defined in song_update.js\n    checkDuration, // → defined in song_update.js\n    addMetronomeEvents, // → defined in song_update.js\n\n    gridToSong, // → defined in song_grid.js\n    noteToGrid, // → defined in song_grid.js\n    eventToGrid, // → defined in song_grid.js\n    positionToGrid, // → defined in song_grid.js\n\n    //createTrack, // → defined in track.js\n    typeString, // → defined in util.js\n    removeFromArray, // → defined in util.js\n    removeFromArray2, // → defined in util.js\n    getNoteLengthName, // → defined in util.js\n    getStats, // → defined in event_statistics.js\n    findEvent, // → defined in find_event.js\n    findNote, // → defined in find_event.js\n\n    objectForEach, // → defined in util.js\n    addSong, // → defined in sequencer.js\n    getTimeDiff, // → defined in open_module.js\n\n    //private\n    _removeTracks,\n    pulse,\n    getArguments,\n    getTrack,\n    addTracks,\n    getPart,\n    getParts,\n    getTimeEvents,\n    setRecordingStatus,\n    _getRecordingPerTrack,\n\n    songIndex = 0,\n\n    //protected\n    createGrid,\n\n    //public\n    Song;\n\n  Song = function (config) {\n    //Object.defineProperty(this,'tracks',{value: []});\n    //Object.defineProperty(this, 'events', {value: 'val'});\n\n    config = config || {};\n\n    this.id = 'S' + songIndex++ + '' + new Date().getTime();\n    this.name = config.name || this.id;\n    this.className = 'Song';\n    addSong(this);\n\n    this.midiInputs = {};\n    this.midiOutputs = {};\n    initMidi(this);\n\n    this.bpm = config.bpm || 120;\n    this.ppq = config.ppq || sequencer.defaultPPQ;\n    this.bars = config.bars || 30; //default song duration is 30 bars @ 120 bpm is 1 minute\n    this.lastBar = this.bars;\n    this.lowestNote = config.lowestNote || 0;\n    this.highestNote = config.highestNote || 127;\n    this.pitchRange = this.highestNote - this.lowestNote + 1;\n    this.nominator = config.nominator || 4;\n    this.denominator = config.denominator || 4;\n    this.factor = 4 / this.denominator;\n    this.ticksPerBeat = this.ppq * this.factor;\n    this.ticksPerBar = this.ticksPerBeat * this.nominator;\n    this.millisPerTick = (60000 / this.bpm / this.ppq);\n    this.quantizeValue = config.quantizeValue || '8';\n    this.fixedLengthValue = config.fixedLengthValue || false;\n    this.positionType = config.positionType || 'all';\n    this.useMetronome = config.useMetronome;\n    this.autoSize = config.autoSize === undefined ? true : config.autoSize === true;\n    this.playbackSpeed = 1;\n    this.defaultInstrument = config.defaultInstrument || sequencer.defaultInstrument;\n    this.recordId = -1;\n    this.autoQuantize = false;\n    this.loop = config.loop || false;\n    this.doLoop = false;\n    this.illegalLoop = true;\n    this.loopStart = 0;\n    this.loopEnd = 0;\n    this.loopDuration = 0;\n    this.audioRecordingLatency = 0;\n\n    //console.log('PPQ song', this.ppq)\n\n    if (this.useMetronome !== true && this.useMetronome !== false) {\n      this.useMetronome = false;\n    }\n    //console.log(this.useMetronome);\n\n    this.grid = undefined;\n\n    if (config.timeEvents && config.timeEvents.length > 0) {\n      this.timeEvents = [].concat(config.timeEvents);\n\n      this.tempoEvent = getTimeEvents(sequencer.TEMPO, this)[0];\n      this.timeSignatureEvent = getTimeEvents(sequencer.TIME_SIGNATURE, this)[0];\n\n      if (this.tempoEvent === undefined) {\n        this.tempoEvent = createMidiEvent(0, sequencer.TEMPO, this.bpm);\n        this.timeEvents.unshift(this.tempoEvent);\n      } else {\n        this.bpm = this.tempoEvent.bpm;\n      }\n      if (this.timeSignatureEvent === undefined) {\n        this.timeSignatureEvent = createMidiEvent(0, sequencer.TIME_SIGNATURE, this.nominator, this.denominator);\n        this.timeEvents.unshift(this.timeSignatureEvent);\n      } else {\n        this.nominator = this.timeSignatureEvent.nominator;\n        this.denominator = this.timeSignatureEvent.denominator;\n      }\n      //console.log(1, this.nominator, this.denominator, this.bpm);\n    } else {\n      // there has to be a tempo and time signature event at ticks 0, otherwise the position can't be calculated, and moreover, it is dictated by the MIDI standard\n      this.tempoEvent = createMidiEvent(0, sequencer.TEMPO, this.bpm);\n      this.timeSignatureEvent = createMidiEvent(0, sequencer.TIME_SIGNATURE, this.nominator, this.denominator);\n      this.timeEvents = [\n        this.tempoEvent,\n        this.timeSignatureEvent\n      ];\n    }\n\n    // TODO: A value for bpm, nominator and denominator in the config overrules the time events specified in the config -> maybe this should be the other way round\n\n    // if a value for bpm is set in the config, and this value is different from the bpm value of the first\n    // tempo event, all tempo events will be updated to the bpm value in the config.\n    if (config.timeEvents !== undefined && config.bpm !== undefined) {\n      if (this.bpm !== config.bpm) {\n        this.setTempo(config.bpm, false);\n      }\n    }\n\n    // if a value for nominator and/or denominator is set in the config, and this/these value(s) is/are different from the values\n    // of the first time signature event, all time signature events will be updated to the values in the config.\n    // @TODO: maybe only the first time signature event should be updated?\n    if (config.timeEvents !== undefined && (config.nominator !== undefined || config.denominator !== undefined)) {\n      if (this.nominator !== config.nominator || this.denominator !== config.denominator) {\n        this.setTimeSignature(config.nominator || this.nominator, config.denominator || this.denominator, false);\n      }\n    }\n\n    //console.log(2, this.nominator, this.denominator, this.bpm);\n\n    this.tracks = [];\n    this.parts = [];\n    this.notes = [];\n    this.events = [];//.concat(this.timeEvents);\n    this.allEvents = []; // all events plus metronome ticks\n\n    this.tracksById = {};\n    this.tracksByName = {};\n    this.partsById = {};\n    this.notesById = {};\n    this.eventsById = {};\n\n    this.activeEvents = null;\n    this.activeNotes = null;\n    this.activeParts = null;\n\n    this.recordedNotes = [];\n    this.recordedEvents = [];\n    this.recordingNotes = {}; // notes that don't have their note off events yet\n\n    this.numTracks = 0;\n    this.numParts = 0;\n    this.numNotes = 0;\n    this.numEvents = 0;\n    this.instruments = [];\n\n    this.playing = false;\n    this.paused = false;\n    this.stopped = true;\n    this.recording = false;\n    this.prerolling = false;\n    this.precounting = false;\n    this.preroll = true;\n    this.precount = 0;\n    this.listeners = {};\n\n    this.playhead = createPlayhead(this, this.positionType, this.id, this);//, this.position);\n    this.playheadRecording = createPlayhead(this, 'all', this.id + '_recording');\n    this.scheduler = createScheduler(this);\n    this.followEvent = createFollowEvent(this);\n\n    this.volume = 1;\n    this.gainNode = context.createGainNode();\n    this.gainNode.gain.value = this.volume;\n    this.metronome = createMetronome(this, dispatchEvent);\n    this.connect();\n\n\n    if (config.className === 'MidiFile' && config.loaded === false) {\n      if (sequencer.debug) {\n        console.warn('midifile', config.name, 'has not yet been loaded!');\n      }\n    }\n\n    //if(config.tracks && config.tracks.length > 0){\n    if (config.tracks) {\n      this.addTracks(config.tracks);\n    }\n\n    if (config.parts) {\n      this.addParts(config.parts);\n    }\n\n    if (config.events) {\n      this.addEvents(config.events);\n    }\n\n    if (config.events || config.parts || config.tracks) {\n      //console.log(config.events, config.parts, config.tracks)\n      // the length of the song will be determined by the events, parts and/or tracks that are added to the song\n      if (config.bars === undefined) {\n        this.lastBar = 0;\n      }\n      this.lastEvent = createMidiEvent([this.lastBar, sequencer.END_OF_TRACK]);\n    } else {\n      this.lastEvent = createMidiEvent([this.bars * this.ticksPerBar, sequencer.END_OF_TRACK]);\n    }\n    //console.log('update');\n    this.update(true);\n\n    this.numTimeEvents = this.timeEvents.length;\n    this.playhead.set('ticks', 0);\n    this.midiEventListeners = {};\n    //console.log(this.timeEvents);\n  };\n\n\n  getPart = function (data, song) {\n    var part = false;\n    if (data === undefined) {\n      part = false;\n    } else if (part.className === 'Part') {\n      part = data;\n    } else if (typeString(data) === 'string') {\n      part = song.partsById[data];\n    } else if (isNaN(data) === false) {\n      part = song.parts[data];\n    }\n    return part;\n  };\n\n\n  getTrack = function (data, song) {\n    var track = false;\n    //console.log(data);\n    if (data === undefined) {\n      track = false;\n    } else if (data.className === 'Track') {\n      track = data;\n    } else if (typeString(data) === 'string') {\n      track = song.tracksById[data];\n      if (track === undefined) {\n        track = song.tracksByName[data];\n        // objectForEach(song.tracksById, function(t){\n        //     if(t.name === data){\n        //         track = t;\n        //     }\n        // });\n      }\n    } else if (isNaN(data) === false) {\n      track = song.tracks[data];\n    }\n\n    if (track === undefined) {\n      track = false;\n    }\n    return track;\n  };\n\n\n  addTracks = function (newTracks, song) {\n    //console.log('addTracks');\n    var tracksById = song.tracksById,\n      tracksByName = song.tracksByName,\n      addedIds = [],\n      i, part, track;\n\n    for (i = newTracks.length - 1; i >= 0; i--) {\n      track = getTrack(newTracks[i]);\n      if (track === false) {\n        continue;\n      }\n      //console.log(track.song);\n      if (track.song !== undefined && track.song !== null) {\n        track = track.copy();\n      }\n      track.song = song;\n      track.instrument.song = song;\n      track.quantizeValue = song.quantizeValue;\n      track.connect(song.gainNode);\n      /*\n                  // -> not possible because of the endless midi feedback loop with IAC virtual midi ports on OSX\n                  //console.log(song.midiInputs);\n                  objectForEach(song.midiInputs, function(port){\n                      //console.log(port.id);\n                      track.setMidiInput(port.id, true);\n                  });\n      */\n\n      track.state = 'new';\n      track.needsUpdate = true;\n      tracksById[track.id] = track;\n      tracksByName[track.name] = track;\n      addedIds.push(track.id);\n\n      objectForEach(track.partsById, function (part) {\n        part.state = 'new';\n      });\n      /*\n                  for(j in track.partsById){\n                      if(track.partsById.hasOwnProperty(j)){\n                          //console.log('addTracks, part', part);\n                          part = track.partsById[j];\n                          //part.song = song;\n                          part.state = 'new';\n                      }\n                  }\n      */\n    }\n    return addedIds;\n  };\n\n\n  _removeTracks = function (tobeRemoved) {\n    var i, track, removed = [];\n\n    for (i = tobeRemoved.length - 1; i >= 0; i--) {\n      track = getTrack(tobeRemoved[i]);\n      if (track === false) {\n        continue;\n      }\n      //console.log(track);\n      if (track.song !== undefined && track.song !== this) {\n        console.warn('can\\'t remove: this track belongs to song', track.song.id);\n        continue;\n      }\n      track.state = 'removed';\n      track.disconnect(this.gainNode);\n      track.reset();\n      delete this.tracksById[track.id];\n      delete this.tracksByName[track.name];\n      removed.push(track);\n    }\n    return removed;\n  };\n\n  /*\n      getParts = function(args, song){\n          var part, i,\n              result = [];\n          for(i = args.length - 1; i >= 0; i--){\n              part = getPart(args[i], song);\n              if(part){\n                  result.push(part);\n              }\n          }\n          return result;\n      };\n  */\n\n  getParts = function (args) {\n    var part, i,\n      result = [];\n    for (i = args.length - 1; i >= 0; i--) {\n      part = getPart(args[i], this);\n      if (part) {\n        result.push(part);\n      }\n    }\n    return result;\n  };\n\n\n  function getEvents(args, song) {\n    var result = [];\n\n    args = slice.call(args);\n    //console.log(args);\n\n    function loop(data, i, maxi) {\n      var arg, type, event;\n\n      for (i = 0; i < maxi; i++) {\n        arg = data[i];\n        type = typeString(arg);\n\n        if (type === 'array') {\n          loop(arg, 0, arg.length);\n        }\n\n        else if (type === 'string') {\n          event = song.eventsById[arg];\n          if (event !== undefined) {\n            result.push(arg);\n          }\n        }\n\n        else if (arg.className === 'MidiEvent') {\n          result.push(arg);\n        }\n      }\n    }\n\n    loop(args, 0, args.length);\n    return result;\n  }\n\n\n  getTimeEvents = function (type, song) {\n    var events = [];\n    song.timeEvents.forEach(function (event) {\n      if (event.type === type) {\n        events.push(event);\n      }\n    });\n    return events;\n  };\n\n\n  pulse = function (song) {\n    var\n      //now = window.performance.now(),\n      now = sequencer.getTime() * 1000,\n      diff = now - song.timeStamp,\n      millis = song.millis + diff;\n\n    song.diff = diff;\n    //console.log(diff);\n    //console.log(now, song.recordTimestamp, song.eventsMidiAudioMetronome[0].time);\n\n    song.timeStamp = now;\n\n    if (song.precounting === true) {\n      song.metronome.millis += diff;\n      song.scheduler.update(diff);\n      // now return otherwise the position of the song gets updated\n      return;\n    }\n\n    // is this comment still valid?\n    // put followEvent and scheduler before playhead.update(), otherwise followEvent will miss the first event (scheduler could come after playhead.update)\n    song.prevMillis = song.millis;\n    //song.playhead.update('millis', diff);\n    // song.followEvent.update();\n    // song.scheduler.update();\n    //console.log(song.millis, diff, song.loopEnd);\n    //console.log(song.doLoop, song.scheduler.looped, song.millis > song.loopEnd);\n    //console.log(song.scheduler.prevMaxtime, song.loopEnd);\n    if (song.doLoop && song.scheduler.looped && millis >= song.loopEnd) {// && song.jump !== true){\n      //console.log(song.prevMillis, song.millis);\n      //song.scheduler.looped = false;\n      song.followEvent.resetAllListeners();\n      song.playhead.set('millis', song.loopStart + (millis - song.loopEnd));\n      song.followEvent.update();\n      //console.log('-->', song.millis);\n      song.scheduler.update();\n      dispatchEvent(song, 'loop');\n      //song.startTime += (song.loopEnd - song.loopStart);\n    } else if (millis >= song.durationMillis) {\n      song.playhead.update('millis', song.durationMillis - song.millis);\n      song.followEvent.update();\n      song.pause();\n      song.endOfSong = true;\n      dispatchEvent(song, 'end');\n    } else {\n      song.playhead.update('millis', diff);\n      song.followEvent.update();\n      song.scheduler.update();\n    }\n\n    song.jump = false;\n\n    //console.log(now, sequencer.getTime());\n    //console.log(song.barsAsString);\n    //console.log('pulse', song.playhead.barsAsString, song.playhead.millis);\n    //console.log(song.millis);\n  };\n\n\n  Song.prototype.remove = function () {\n    console.warn('Song.remove() is deprecated, please use sequencer.deleteSong()');\n    sequencer.deleteSong(this);\n  };\n\n\n  Song.prototype.play = function () {\n    sequencer.unlockWebAudio();\n    var song, playstart;\n\n    //console.log(this.playing);\n    if (this.playing) {\n      this.pause();\n      return;\n    }\n    // tell the scheduler to schedule the audio events that start before the current position of the playhead\n    this.scheduler.firstRun = true;\n\n    // only loop when the loop is legal and this.loop is set to true\n    this.doLoop = (this.illegalLoop === false && this.loop === true);\n    //console.log('play', this.doLoop, this.illegalLoop, this.loop);\n    // or should I move to loopStart here if loop is enabled?\n    if (this.endOfSong) {\n      this.followEvent.resetAllListeners();\n      this.playhead.set('millis', 0);\n      this.scheduler.setIndex(0);\n    }\n    // timeStamp is used for calculating the diff in time of every consecutive frame\n    this.timeStamp = sequencer.getTime() * 1000;\n    this.startTime = this.timeStamp;\n    try {\n      this.startTime2 = window.performance.now();\n      //this.startTime2 = undefined;\n    } catch (e) {\n      if (sequencer.debug) {\n        console.log('window.performance.now() not supported');\n      }\n    }\n\n    if (this.precounting) {\n      this.metronome.startTime = this.startTime;\n      this.metronome.startTime2 = this.startTime2;\n      this.startTime += this.metronome.precountDurationInMillis;\n      this.startTime2 += this.metronome.precountDurationInMillis;\n\n      //console.log(this.metronome.startTime, this.recordTimestamp);\n\n      song = this;\n      playstart = this.startTime / 1000;\n\n      //console.log(this.startTime, playstart, this.recordTimestamp/1000 - playstart);\n\n      repetitiveTasks.playAfterPrecount = function () {\n        if (sequencer.getTime() >= playstart) {\n          song.precounting = false;\n          song.prerolling = false;\n          song.recording = true;\n          song.playing = true;\n          dispatchEvent(song, 'record_start');\n          dispatchEvent(song, 'play');\n          //console.log('playAfterPrecount', sequencer.getTime(), playstart, song.metronome.precountDurationInMillis);\n          repetitiveTasks.playAfterPrecount = undefined;\n          delete repetitiveTasks.playAfterPrecount;\n        }\n      };\n    }\n    // this value will be deducted from the millis value of the event as soon as the event get scheduled\n    this.startMillis = this.millis;\n    //console.log(this.startMillis);\n\n    // make first call right after setting a time stamp to avoid delay\n    //pulse(this);\n\n    song = this;\n\n    // fixes bug: when an event listener is added to a midi note, the listener sometimes misses the first note\n    song.playhead.update('millis', 0);\n    song.followEvent.update();\n\n    repetitiveTasks[this.id] = function () {\n      pulse(song);\n    };\n\n    this.paused = false;\n    this.stopped = false;\n    this.endOfSong = false;\n    if (this.precounting !== true) {\n      this.playing = true;\n      dispatchEvent(this, 'play');\n    }\n  };\n\n\n  Song.prototype.pause = function () {\n    if (this.recording === true || this.precounting === true) {\n      this.stop();\n      return;\n    }\n    if (this.stopped || this.paused) {\n      this.play();\n      return;\n    }\n    delete repetitiveTasks[this.id];\n    this.allNotesOff();\n    this.playing = false;\n    this.paused = true;\n    dispatchEvent(this, 'pause');\n  };\n\n\n  Song.prototype.stop = function () {\n    if (this.stopped) {\n      // is this necessary?\n      this.followEvent.resetAllListeners();\n      this.playhead.set('millis', 0);\n      this.scheduler.setIndex(0);\n      return;\n    }\n    if (this.recording === true || this.precounting === true) {\n      this.stopRecording();\n    }\n    delete repetitiveTasks[this.id];\n    // remove unschedule callback of all samples\n    objectForEach(timedTasks, function (task, id) {\n      //console.log(id);\n      if (id.indexOf('unschedule_') === 0 || id.indexOf('event_') === 0) {\n        task = null;\n        delete timedTasks[id];\n      }\n    });\n    this.allNotesOff();\n\n    this.playing = false;\n    this.paused = false;\n    this.stopped = true;\n    this.endOfSong = false;\n\n    this.followEvent.resetAllListeners();\n    this.playhead.set('millis', 0);\n    this.scheduler.setIndex(0);\n    dispatchEvent(this, 'stop');\n  };\n\n\n  Song.prototype.adjustLatencyForAllRecordings = function (value) {\n    // @todo: add callback here!\n    this.audioRecordingLatency = value;\n    this.tracks.forEach(function (track) {\n      track.setAudioRecordingLatency(value);\n    });\n  };\n\n\n  Song.prototype.setAudioRecordingLatency = function (recordId, value, callback) {\n    var i, event, sampleId;\n\n    for (i = this.audioEvents.length - 1; i >= 0; i--) {\n      event = this.audioEvents[i];\n      sampleId = event.sampleId;\n      if (sampleId === undefined) {\n        continue;\n      }\n      if (recordId === sampleId) {\n        break;\n      }\n    }\n    //console.log(recordId, value, callback);\n    event.track.setAudioRecordingLatency(recordId, value, callback);\n  };\n\n\n  Song.prototype.startRecording = Song.prototype.record = function (precount) {\n    //console.log(this.recording, this.precounting, precount);\n    if (this.recording === true || this.precounting === true) {\n      this.stop();\n      return;\n    }\n\n    var userFeedback = false,\n      audioRecording = false,\n      i, track, self = this;\n\n    this.metronome.precountDurationInMillis = 0;\n\n    // allow to start a recording while playing\n    if (this.playing) {\n      this.precount = 0;\n      this.recordStartMillis = this.millis;\n    } else {\n      if (precount === undefined) {\n        this.precount = 0;\n        this.recordStartMillis = this.millis;\n      } else {\n        // a recording with a precount always starts at the beginning of a bar\n        this.setPlayhead('barsbeats', this.bar);\n        this.metronome.createPrecountEvents(precount);\n        this.precount = precount;\n        this.recordStartMillis = this.millis - this.metronome.precountDurationInMillis;\n        //console.log(this.metronome.precountDurationInMillis);\n      }\n      /*\n                  if(this.preroll === true){\n                      // TODO: improve this -> leave it, preroll is always on unless the user sets it to false\n                      //this.preroll = (this.bar - this.precount) > 0;\n                  }\n      */\n    }\n    //console.log('preroll', this.preroll);\n    //console.log('precount', this.precount);\n    //console.log('precountDurationInMillis', this.metronome.precountDurationInMillis);\n    //console.log('recordStartMillis', this.recordStartMillis);\n\n\n    this.recordTimestampTicks = this.ticks;\n    this.recordId = 'REC' + new Date().getTime();\n    this.recordedNotes = [];\n    this.recordedEvents = [];\n    this.recordingNotes = {};\n    this.recordingAudio = false;\n\n    if (this.keyEditor !== undefined) {\n      this.keyEditor.prepareForRecording(this.recordId);\n    }\n\n    for (i = this.numTracks - 1; i >= 0; i--) {\n      track = this.tracks[i];\n      if (track.recordEnabled === 'audio') {\n        this.recordingAudio = true;\n      }\n      //console.log(track.name, track.index);\n      if (track.recordEnabled === 'audio') {\n        audioRecording = true;\n        track.prepareForRecording(this.recordId, function () {\n          if (userFeedback === false) {\n            userFeedback = true;\n            setRecordingStatus.call(self);\n          }\n        });\n      } else {\n        track.prepareForRecording(this.recordId);\n      }\n    }\n\n    if (audioRecording === false) {\n      setRecordingStatus.call(this);\n    }\n\n    return this.recordId;\n  };\n\n\n  setRecordingStatus = function () {\n\n    this.recordTimestamp = context.currentTime * 1000; // millis\n\n    if (this.playing === false) {\n      if (this.precount > 0) {\n        // recording with precount always starts at the beginning of a bar\n        //this.setPlayhead('barsbeats', this.bar);\n        this.precounting = true;\n        this.prerolling = this.preroll;\n        if (this.prerolling) {\n          dispatchEvent(this, 'record_preroll');\n        } else {\n          dispatchEvent(this, 'record_precount');\n        }\n      } else {\n        this.recording = true;\n        dispatchEvent(this, 'record_start');\n      }\n      this.play();\n    } else {\n      this.recording = true;\n      this.precounting = false;\n      dispatchEvent(this, 'record_start');\n    }\n  };\n\n\n  _getRecordingPerTrack = function (index, recordingHistory, callback) {\n    var track, scope = this;\n\n    if (index < this.numTracks) {\n      track = this.tracks[index];\n      track.stopRecording(this.recordId, function (events) {\n        if (events !== undefined) {\n          recordingHistory[track.name] = events;\n        }\n        index++;\n        _getRecordingPerTrack.call(scope, index, recordingHistory, callback);\n      });\n    } else {\n      callback(recordingHistory);\n    }\n  };\n\n\n  Song.prototype.stopRecording = function () {\n    if (this.recording === false) {\n      return;\n    }\n    this.recording = false;\n    this.prerolling = false;\n    this.precounting = false;\n\n    //repetitiveTasks.playAfterPrecount = undefined;\n    delete repetitiveTasks.playAfterPrecount;\n    var scope = this;\n\n    _getRecordingPerTrack.call(this, 0, {}, function (history) {\n      scope.update();\n      dispatchEvent(scope, 'recorded_events', history);\n    });\n\n    // perform update immediately for midi recordings\n    this.update();\n\n    dispatchEvent(this, 'record_stop');\n\n    return this.recordId;\n  };\n\n\n  Song.prototype.undoRecording = function (history) {\n    var i, tracksByName;\n\n    if (history === undefined) {\n      for (i = this.numTracks - 1; i >= 0; i--) {\n        this.tracks[i].undoRecording(this.recordId);\n      }\n    } else {\n      tracksByName = this.tracksByName;\n      objectForEach(history, function (events, name) {\n        var track = tracksByName[name];\n        track.undoRecording(events);\n      });\n    }\n    //this.update();\n  };\n\n\n  Song.prototype.getAudioRecordingData = function (recordId) {\n    var i, event, sampleId;\n\n    for (i = this.audioEvents.length - 1; i >= 0; i--) {\n      event = this.audioEvents[i];\n      sampleId = event.sampleId;\n      if (sampleId === undefined) {\n        continue;\n      }\n      if (recordId === sampleId) {\n        break;\n      }\n    }\n    if (event === undefined) {\n      return false;\n    }\n    return event.track.getAudioRecordingData(recordId);\n  };\n\n\n  // non-mandatory arguments: quantize value, history object\n  Song.prototype.quantize = function () {\n    var i, track, arg, type,\n      args = slice.call(arguments),\n      numArgs = args.length,\n      value,\n      historyObject = {};\n\n    //console.log(arguments);\n\n    for (i = 0; i < numArgs; i++) {\n      arg = args[i];\n      type = typeString(arg);\n      //console.log(arg, type);\n      if (type === 'string' || type === 'number') {\n        // overrule the quantize values of all tracks in this song, but the song's quantizeValue doesn't change\n        value = arg;\n      } else if (type === 'object') {\n        historyObject = arg;\n      }\n    }\n\n    //console.log(value, historyObject)\n    for (i = this.numTracks - 1; i >= 0; i--) {\n      track = this.tracks[i];\n      // if no value is specified, use the value of the track\n      if (value === undefined) {\n        value = track.quantizeValue;\n      }\n      sequencer.quantize(track.events, value, this.ppq, historyObject);\n    }\n\n    return historyObject;\n    //this.update();\n  };\n\n\n  Song.prototype.undoQuantize = function (history) {\n    if (history === undefined) {\n      if (sequencer.debug >= 2) {\n        console.warn('please pass a quantize history object');\n      }\n      return;\n    }\n\n    var i, track;\n    for (i = this.numTracks - 1; i >= 0; i--) {\n      track = this.tracks[i];\n      track.undoQuantize(history);\n    }\n  };\n\n\n  Song.prototype.quantizeRecording = function (value) {\n    var i, track;\n    for (i = this.numTracks - 1; i >= 0; i--) {\n      track = this.tracks[i];\n      if (track.recordId === this.recordId) {\n        track.quantizeRecording(value);\n      }\n    }\n    //this.update();\n  };\n\n\n  // left: song position >= left locator\n  Song.prototype.setLeftLocator = function () {\n    //var pos = getPosition(this, [].concat(type, value));\n    //this.leftLocator = AP.slice.call(arguments);\n    var pos = getPosition(this, slice.call(arguments));\n    if (pos !== undefined) {\n      this.loopStartPosition = pos;\n      this.loopStart = pos.millis;\n      this.loopStartTicks = pos.ticks;\n    }\n    this.illegalLoop = this.loopStart >= this.loopEnd;\n    this.doLoop = (this.illegalLoop === false && this.loop === true);\n    this.loopDuration = this.illegalLoop === true ? 0 : this.loopEnd - this.loopStart;\n    // if(this.doLoop === false && this.loop === true){\n    //     dispatchEvent('loop_off', this);\n    // }\n    //console.log('left', this.doLoop, this.illegalLoop, this.loop);\n    //console.log(pos.millis, pos.millis, pos.ticks);\n    //console.log('l', this.loopStartPosition, pos);\n  };\n\n\n  // right: song position < right locator\n  Song.prototype.setRightLocator = function () {//(value){\n    //var pos = getPosition(this, [].concat(type, value));\n    //this.rightLocator = AP.slice.call(arguments);\n    var pos = getPosition(this, slice.call(arguments)),\n      previousState = this.illegalLoop;\n    //var pos = getPosition(this, value);\n    if (pos !== undefined) {\n      this.loopEndPosition = pos;\n      this.loopEnd = pos.millis;\n      this.loopEndTicks = pos.ticks;\n    }\n    //console.log(this.loopEnd);\n    this.illegalLoop = this.loopEnd <= this.loopStart;\n    this.doLoop = (this.illegalLoop === false && this.loop === true);\n    this.loopDuration = this.illegalLoop === true ? 0 : this.loopEnd - this.loopStart;\n    // if(previousState !== false && this.loop === true){\n    //     dispatchEvent('loop_off', this);\n    // }\n    //console.log('right', this.doLoop, this.illegalLoop, this.loop);\n    //console.log(pos.millis, pos.millis, pos.ticks);\n    //console.log('r', this.loopEndPosition);\n  };\n\n\n  Song.prototype.setLoop = function (flag) {\n    if (flag === undefined) {\n      this.loop = !this.loop;\n    } else if (flag === true || flag === false) {\n      this.loop = flag;\n    } else {\n      if (sequencer.debug >= 1) {\n        console.error('pass \"true\", \"false\" or no value');\n      }\n      return;\n    }\n    this.doLoop = (this.illegalLoop === false && this.loop === true);\n  };\n\n\n  Song.prototype.setPlayhead = function () {\n    //console.log('setPlayhead');\n    this.jump = true;\n    this.scheduler.looped = false;\n    this.scheduler.firstRun = true;\n    this.timeStamp = sequencer.getTime() * 1000;\n    this.startTime = this.timeStamp;\n\n    if (this.playing) {\n      this.allNotesOff();\n    }\n\n    //console.log(slice.call(arguments));\n    var pos = getPosition(this, slice.call(arguments)),\n      millis = pos.millis;\n    this.startMillis = millis;\n    this.playhead.set('millis', millis);\n    this.scheduler.setIndex(millis);\n    //console.log(pos.bar, this.bar);\n    //console.log(this.playhead.activeEvents);\n  };\n\n\n  Song.prototype.addEventListener = function () {\n    return addEventListener.apply(this, arguments);\n  };\n\n\n  Song.prototype.removeEventListener = function () {\n    removeEventListener.apply(this, arguments);\n  };\n\n\n  Song.prototype.addEvent = Song.prototype.addEvents = function () {\n    var track, part;\n\n    track = this.tracks[0];\n    if (track === undefined) {\n      track = sequencer.createTrack();\n      this.addTrack(track);\n    }\n    // we need to find the first part on the track, so update the track if necessary\n    if (track.needsUpdate) {\n      track.update();\n    }\n\n    part = track.parts[0];\n    if (part === undefined) {\n      part = sequencer.createPart();\n      track.addPart(part);\n    }\n    part.addEvents.apply(part, arguments);\n    //console.log(part.needsUpdate);\n    return this;\n  };\n\n\n  Song.prototype.addPart = Song.prototype.addParts = function () {\n    var track = this.tracks[0];\n    if (track === undefined) {\n      //console.log('-> create track for parts')\n      track = sequencer.createTrack();\n      this.addTrack(track);\n    }\n    //console.log(arguments);\n    track.addParts.apply(track, arguments);\n    return this;\n  };\n\n\n  Song.prototype.addTrack = function () {\n    var args = getArguments(arguments),\n      arg0 = args[0],\n      numArgs = args.length;\n\n    if (typeString(arg0) === 'array' || numArgs > 1) {\n      console.warn('please use addTracks() if you want to get more that one tracks');\n      args = [arg0];\n    }\n    return addTracks(args, this)[0];\n  };\n\n\n  Song.prototype.addTracks = function () {\n    //console.log(arguments, getArguments(arguments));\n    return addTracks(getArguments(arguments), this);\n  };\n\n\n  Song.prototype.getTrack = function (arg) {\n    return getTrack(arg, this);\n  };\n\n\n  Song.prototype.getTracks = function () {\n    var args = getArguments(arguments),\n      track, i,\n      result = [];\n    for (i = args.length - 1; i >= 0; i--) {\n      track = getTrack(args[i], this);\n      if (track) {\n        result.push(track);\n      }\n    }\n    return result;\n  };\n\n\n  Song.prototype.getPart = function () {\n    var args = getArguments(arguments);\n    if (args.length > 1) {\n      console.warn('please use getParts() if you want to get more that one part');\n    }\n    //@TODO: check if a call is faster\n    //return getParts(args, this)[0];\n    return getParts.call(this, args)[0];\n  };\n\n\n  Song.prototype.getParts = function () {\n    var args = getArguments(arguments);\n    //return getParts(args, this);\n    return getParts.call(this, args);\n  };\n\n\n  Song.prototype.removeTrack = function () {\n    var args = getArguments(arguments);\n    //var args = getArguments.apply(null, arguments);\n    if (args.length > 1) {\n      console.warn('please use removeTracks() if you want to remove more that one tracks');\n    }\n    //return _removeTracks(args, this)[0];\n    return _removeTracks.call(this, args)[0];\n  };\n\n\n  Song.prototype.removeTracks = function () {\n    return _removeTracks.call(this, getArguments(arguments));\n  };\n\n\n  Song.prototype.setPlaybackSpeed = function (speed) {\n    if (speed < 0.01 || speed > 100) {\n      console.error('playback speed has to be > 0.01 and < 100');\n      return;\n    }\n    var ticks = this.ticks,\n      startLoop, endLoop, newPos;\n\n    this.playbackSpeed = speed;\n    //console.log('setPlaybackSpeed -> update()');\n    this.update(true);\n\n    // get the new position of the locators after the update\n    if (this.loopStartTicks !== undefined) {\n      startLoop = this.getPosition('ticks', this.loopStartTicks);\n      this.loopStart = startLoop.millis;\n      this.loopStartTicks = startLoop.ticks;\n    }\n    if (this.loopEndTicks !== undefined) {\n      endLoop = this.getPosition('ticks', this.loopEndTicks);\n      this.loopEnd = endLoop.millis;\n      this.loopEndTicks = endLoop.ticks;\n    }\n\n    // get the new position of the playhead after the update\n    newPos = this.getPosition('ticks', ticks);\n    this.setPlayhead('ticks', newPos.ticks);\n  };\n\n\n  Song.prototype.gridToSong = function (x, y, width, height) {\n    return gridToSong(this, x, y, width, height);\n  };\n\n\n  Song.prototype.noteToGrid = function (note, height) {\n    return noteToGrid(note, height, this);\n  };\n\n\n  Song.prototype.eventToGrid = function (event, width, height) {\n    return eventToGrid(event, width, height, this);\n  };\n\n\n  Song.prototype.positionToGrid = function (position, width) {\n    return positionToGrid(position, width, this);\n  };\n\n\n  Song.prototype.getPosition = function () {\n    //console.log(slice.call(arguments));\n    return getPosition(this, slice.call(arguments));\n  };\n\n\n  Song.prototype.ticksToMillis = function (ticks, beyondEndOfSong) {\n    return ticksToMillis(this, ticks, beyondEndOfSong);\n  };\n\n\n  Song.prototype.millisToTicks = function (millis, beyondEndOfSong) {\n    return millisToTicks(this, millis, beyondEndOfSong);\n  };\n\n\n  Song.prototype.ticksToBars = function (ticks, beyondEndOfSong) {\n    return ticksToBars(this, ticks, beyondEndOfSong);\n  };\n\n\n  Song.prototype.millisToBars = function (millis, beyondEndOfSong) {\n    return millisToBars(this, millis, beyondEndOfSong);\n  };\n\n\n  Song.prototype.barsToTicks = function () {\n    return barsToTicks(this, slice.call(arguments));\n  };\n\n\n  Song.prototype.barsToMillis = function () {\n    return barsToMillis(this, slice.call(arguments));\n  };\n\n\n  Song.prototype.findEvent = Song.prototype.findEvents = function (pattern) {\n    return findEvent(this, pattern);\n  };\n\n\n  Song.prototype.findNote = Song.prototype.findNotes = function (pattern) {\n    return findNote(this, pattern);\n  };\n\n\n  Song.prototype.getStats = function (pattern) {\n    return getStats(this, pattern);\n  };\n\n\n  Song.prototype.createGrid = function (config) {\n    if (this.grid === undefined) {\n      this.grid = createGrid(this, config);\n    } else {\n      this.grid.update(config);\n    }\n    return this.grid;\n  };\n\n\n  Song.prototype.update = function (updateTimeEvents) {\n    //console.log('Song.update()');\n    update(this, updateTimeEvents);\n  };\n\n\n  Song.prototype.updateGrid = function (config) {\n    this.grid.update(config);\n    return this.grid;\n  };\n\n\n  Song.prototype.updateTempoEvent = function (event, bpm) {\n    if (event.type !== sequencer.TEMPO) {\n      if (sequencer.debug >= 4) {\n        console.error('this is not a tempo event');\n      }\n      return;\n    }\n    if (event.song !== this) {\n      if (sequencer.debug >= 4) {\n        console.error('this event has not been added to this song yet');\n      }\n      return;\n    }\n    var ticks = this.ticks,\n      percentage = this.percentage;\n    event.bpm = bpm;\n    this.update(true);\n    this.updatePlayheadAndLocators(ticks);\n  };\n\n\n  Song.prototype.updateTimeSignatureEvent = function (event, nominator, denominator) {\n    if (event.type !== sequencer.TIME_SIGNATURE) {\n      if (sequencer.debug >= 4) {\n        console.error('this is not a time signature event');\n      }\n      return;\n    }\n    if (event.song !== this) {\n      if (sequencer.debug >= 4) {\n        console.error('this event has not been added to this song yet');\n      }\n      return;\n    }\n    var ticks = this.ticks,\n      percentage = this.percentage;\n    event.nominator = nominator || event.nominator;\n    event.denominator = denominator || event.denominator;\n    this.update(true);\n    this.updatePlayheadAndLocators(ticks);\n  };\n\n\n  Song.prototype.getTempoEvents = function () {\n    return getTimeEvents(sequencer.TEMPO, this);\n  };\n\n\n  Song.prototype.getTimeSignatureEvents = function () {\n    return getTimeEvents(sequencer.TIME_SIGNATURE, this);\n  };\n\n\n  Song.prototype.updatePlayheadAndLocators = function (ticks) {\n    var newStartPos,\n      newEndPos,\n      startPos = this.loopStartPosition,\n      endPos = this.loopEndPosition,\n      newPos;\n\n    // get the new position of the locators after the update\n    if (startPos !== undefined) {\n      /*\n      newStartPos = this.getPosition('barsbeats', startPos.bar, startPos.beat, startPos.sixteenth, startPos.tick);\n      if(newStartPos.ticks > this.durationTicks || newStartPos.bar > this.bars + 1){\n          newStartPos = this.getPosition('barsbeats', 1, 1, 1, 0);\n          console.log('start', newStartPos.barsAsString);\n      }\n      */\n      newStartPos = this.getPosition('ticks', startPos.ticks);\n      this.loopStart = newStartPos.millis;\n      this.loopStartTicks = newStartPos.ticks;\n      this.loopStartPosition = newStartPos;\n    }\n    if (endPos !== undefined) {\n      /*\n      newEndPos = this.getPosition('barsbeats', endPos.bar, endPos.beat, endPos.sixteenth, endPos.tick);\n      if(newEndPos.ticks > this.durationTicks || newEndPos.bar > this.bars + 1){\n          newEndPos = this.getPosition('barsbeats', this.bars, 1, 1, 0);\n          console.log('end', newEndPos.barsAsString);\n      }\n      */\n      //console.log('right locator', endPos.barsAsString, endPos.ticks);\n      newEndPos = this.getPosition('ticks', endPos.ticks);\n      if (newEndPos.ticks > this.durationTicks) {\n        //console.log('right locator beyond end of song');\n        newEndPos = this.getPosition('ticks', this.bars);\n      }\n      this.loopEnd = newEndPos.millis;\n      this.loopEndTicks = newEndPos.ticks;\n      this.loopEndPosition = newEndPos;\n      //console.log('right locator', newEndPos.barsAsString, newEndPos.ticks);\n    }\n    //console.log('l', this.loopStartPosition, 'r', this.loopEndPosition);\n\n    // get the new position of the playhead after the update\n    /*\n            newPos = this.getPosition('ticks', ticks);\n            if(newPos.ticks > this.durationTicks || newPos.bar > this.bars + 1){\n                newPos = this.getPosition('barsbeats', 1, 1, 1, 0);\n                //console.log('playhead', newPos.barsAsString);\n            }\n    */\n    newPos = this.getPosition('ticks', ticks);\n    if (this.doLoop && newPos.ticks > this.durationTicks) {\n      //console.log('playhead beyond end of song');\n      this.setPlayhead('ticks', 0);\n    } else {\n      this.setPlayhead('ticks', newPos.ticks);\n    }\n\n\n    this.loopDuration = this.illegalLoop === true ? 0 : this.loopEnd - this.loopStart;\n    /*\n            console.log(percentage);\n            newPos = this.getPosition('percentage', percentage);\n            this.setPlayhead('ticks', newPos.ticks);\n    */\n  };\n\n\n  Song.prototype.setTempo = function (bpm, update) {\n    var timeEvents = getTimeEvents(sequencer.TEMPO, this),\n      i, event,\n      ticks = this.ticks,\n      percentage = this.percentage,\n      ratio = bpm / timeEvents[0].bpm;\n\n    for (i = timeEvents.length - 1; i >= 0; i--) {\n      event = timeEvents[i];\n      event.bpm = ratio * event.bpm;\n    }\n    this.bpm = bpm;\n\n    if (update === false) {\n      return;\n    }\n    //console.log('setTempo -> update()');\n    this.update(true);\n    this.updatePlayheadAndLocators(ticks);\n  };\n\n\n  Song.prototype.setTimeSignature = function (nominator, denominator, update) {\n    var timeEvents = getTimeEvents(sequencer.TIME_SIGNATURE, this),\n      i, event,\n      percentage = this.percentage,\n      ticks = this.ticks;\n\n    for (i = timeEvents.length - 1; i >= 0; i--) {\n      event = timeEvents[i];\n      event.nominator = nominator;\n      event.denominator = denominator;\n    }\n    this.nominator = nominator;\n    this.denominator = denominator;\n\n    if (update === false) {\n      return;\n    }\n\n    //console.log('setTimeSignature -> update()');\n    this.update(true);\n    this.updatePlayheadAndLocators(ticks);\n  };\n\n\n  Song.prototype.resetTempo = function (bpm) {\n    var firstTempoEvent = getTimeEvents(sequencer.TEMPO, this)[0],\n      timeEvents = this.timeEvents;\n\n    firstTempoEvent.bpm = bpm;\n\n    timeEvents = removeFromArray2(timeEvents, function (event) {\n      if (event.type === 0x51) {\n        return true;\n      }\n      return false;\n    });\n\n    this.numTimeEvents = timeEvents.length;\n    this.update(true);\n  };\n\n\n  Song.prototype.resetTimeSignature = function (nominator, denominator) {\n    var firstTimeSignatureEvent = getTimeEvents(sequencer.TIME_SIGNATURE, this)[0],\n      timeEvents = this.timeEvents,\n      ticks = this.ticks;\n\n    firstTimeSignatureEvent.nominator = nominator;\n    firstTimeSignatureEvent.denominator = denominator;\n\n    timeEvents = removeFromArray2(timeEvents, function (event) {\n      if (event.type === 0x58) {\n        return true;\n      }\n      return false;\n    });\n\n    this.numTimeEvents = timeEvents.length;\n    this.update(true);\n    this.updatePlayheadAndLocators(ticks);\n  };\n\n\n  Song.prototype.addTimeEvent = Song.prototype.addTimeEvents = function () {\n    var events = getArguments(arguments),\n      ticks = this.ticks,\n      i, event, position;\n\n    // console.log(events);\n\n    for (i = events.length - 1; i >= 0; i--) {\n      event = events[i];\n      if (event.className === 'MidiEvent') {\n        if (event.type === sequencer.TEMPO) {\n          this.timeEvents.push(event);\n        } else if (event.type === sequencer.TIME_SIGNATURE) {\n          /*\n              A time signature event can only be positioned at the beginning of a bar,\n              so we look for the nearest bar and put the event there.\n          */\n          position = this.getPosition('ticks', event.ticks);\n          if (position.beat > position.nominator / 2) {\n            position = this.getPosition('barsbeats', position.bar + 1);\n          } else {\n            position = this.getPosition('barsbeats', position.bar);\n          }\n          event.ticks = position.ticks;\n          this.timeEvents.push(event);\n        }\n      }\n    }\n    this.numTimeEvents = this.timeEvents.length;\n    this.update(true);\n    //console.log('addTimeEvents', this.timeEvents);\n    this.updatePlayheadAndLocators(ticks);\n  };\n\n  /*\n      Song.prototype.addTimeEvent = function(){\n          var events = getArguments(arguments),\n              arg0 = events[0],\n              numArgs = events.length;\n  \n          if(typeString(arg0) === 'array' || numArgs > 1){\n              console.warn('please use addTimeEvents() if you want to add more that one time event');\n              events = [arg0];\n          }\n          addTimeEvents(events, this);\n      };\n  */\n\n  Song.prototype.removeTimeEvent = Song.prototype.removeTimeEvents = function () {\n    var tmp = getArguments(arguments),\n      i, maxi = tmp.length,\n      event,\n      ticks = this.ticks,\n      events = [];\n\n    for (i = 0; i < maxi; i++) {\n      event = tmp[i];\n      if (event !== this.tempoEvent && event !== this.timeSignatureEvent) {\n        events.push(event);\n      }\n    }\n    //console.log(events);\n\n    this.timeEvents = removeFromArray(events, this.timeEvents);\n    this.numTimeEvents = this.timeEvents.length;\n    this.update(true);\n    this.updatePlayheadAndLocators(ticks);\n  };\n\n\n  Song.prototype.removeDoubleTimeEvents = function () {\n    var events = [],\n      i, event, ticks, type,\n      eventsByTicks = {\n        '81': {},\n        '88': {},\n      };\n\n    //console.log('before', this.timeEvents);\n\n    for (i = this.timeEvents.length - 1; i >= 0; i--) {\n      event = this.timeEvents[i];\n      if (eventsByTicks[event.type][event.ticks] !== undefined) {\n        continue;\n      }\n\n      type = event.type;\n      ticks = event.ticks;\n      eventsByTicks[type][ticks] = event;\n\n      if (ticks === 0) {\n        if (type === 0x51) {\n          this.tempoEvent = event;\n        } else if (type === 0x58) {\n          this.timeSignatureEvent = event;\n        }\n      }\n    }\n\n    objectForEach(eventsByTicks['81'], function (event) {\n      events.push(event);\n    });\n\n    objectForEach(eventsByTicks['88'], function (event) {\n      events.push(event);\n    });\n\n    this.timeEvents = events;\n    this.update(true);\n\n    //console.log('after', this.timeEvents);\n    //this.timeEvents.forEach(function(event){\n    //    console.log(event.barsAsString, event.bpm, event.nominator, event.denominator);\n    //});\n    //console.log('tempo', this.tempoEvent.bpm, this.tempoEvent.nominator, this.tempoEvent.denominator, this.tempoEvent.barsAsString);\n    //console.log('time signature', this.timeSignatureEvent.bpm, this.timeSignatureEvent.nominator, this.timeSignatureEvent.denominator, this.timeSignatureEvent.barsAsString);\n  };\n\n\n  Song.prototype.setPitchRange = function (min, max) {\n    var me = this;\n    me.lowestNote = min;\n    me.highestNote = max;\n    me.numNotes = me.pitchRange = me.highestNote - me.lowestNote + 1;\n  };\n\n\n  Song.prototype.trim = function () {\n    checkDuration(this, true);\n  };\n\n\n  Song.prototype.setDurationInBars = function (bars) {\n    var me = this,\n      removedEvents = me.findEvent('bar > ' + bars),\n      removedParts = [],\n      changedTracks = [],\n      changedParts = [],\n      dirtyTracks = {},\n      dirtyParts = {};\n\n    //console.log(removedEvents);\n\n    removedEvents.forEach(function (event) {\n      var trackId = event.trackId,\n        partId = event.partId;\n\n      if (dirtyTracks[trackId] === undefined) {\n        dirtyTracks[trackId] = [];\n      }\n      dirtyTracks[trackId].push(event);\n\n      if (dirtyParts[partId] === undefined) {\n        dirtyParts[partId] = event.part;\n        //console.log(me.getPart(partId));\n      }\n    });\n\n    objectForEach(dirtyTracks, function (events, trackId) {\n      var track = me.getTrack(trackId);\n      //console.log(track.name)\n      track.removeEvents(events);\n      changedTracks.push(track);\n    });\n\n    objectForEach(dirtyParts, function (part, partId) {\n      if (part.events.length === 0) {\n        //console.log(partId, 'has no events');\n        part.track.removePart(part);\n        removedParts.push(part);\n      } else {\n        changedParts.push(part);\n      }\n    });\n\n    me.bars = bars;\n    me.lastBar = bars;\n\n    // user needs to call song.update() after setDurationInBars()!\n    //checkDuration(this);\n\n    //console.log(this.ticks);\n\n    return {\n      removedEvents: removedEvents,\n      removedParts: removedParts,\n      changedTracks: changedTracks,\n      changedParts: changedParts\n    };\n  };\n\n\n  Song.prototype.addEffect = function () {\n  };\n\n\n  Song.prototype.removeEffect = function () {\n  };\n\n\n  Song.prototype.setVolume = function () { // value, Track, Track, Track, etc. in any order\n    var args = slice.call(arguments),\n      numArgs = args.length,\n      tracks = [],\n      value, i;\n\n    function loop(data, i, maxi) {\n      for (i = 0; i < maxi; i++) {\n        var arg = data[i],\n          type = typeString(arg);\n\n        if (type === 'array') {\n          loop(arg, 0, arg.length);\n        } else if (type === 'number') {\n          value = arg;\n        } else if (arg.className === 'Track') {\n          tracks.push(arg);\n        }\n      }\n    }\n\n    if (numArgs === 1) {\n      value = args[0];\n      if (isNaN(value)) {\n        console.warn('please pass a number');\n        return;\n      }\n      this.volume = value < 0 ? 0 : value > 1 ? 1 : value;\n      this.gainNode.gain.value = this.volume;\n    } else {\n      loop(args, 0, numArgs);\n      for (i = tracks.length - 1; i >= 0; i--) {\n        tracks[i].setVolume(value);\n      }\n    }\n  };\n\n\n  Song.prototype.getVolume = function () {\n    return this.gainNode.gain.value;\n  };\n\n\n  Song.prototype.connect = function () {\n    this.gainNode.connect(masterGainNode);\n    //this.gainNode.connect(context.destination);\n  };\n\n\n  Song.prototype.disconnect = function () {\n    this.gainNode.disconnect(masterGainNode);\n    //this.gainNode.disconnect(context.destination);\n  };\n\n  /*\n      Song.prototype.cleanUp = function(){\n          // add other references that need to be removed\n          this.disconnect(masterGainNode);\n          //this.disconnect(context.destination);\n      };\n  */\n\n  Song.prototype.getMidiInputs = function (cb) {\n    getMidiInputs(cb, this);\n  };\n\n\n  Song.prototype.getMidiOutputs = function (cb) {\n    getMidiOutputs(cb, this);\n  };\n\n\n  Song.prototype.setTrackSolo = function (soloTrack, flag) {\n    var i, track;\n    for (i = this.numTracks - 1; i >= 0; i--) {\n      track = this.tracks[i];\n      if (flag === true) {\n        track.mute = track === soloTrack ? !flag : flag;\n      } else if (flag === false) {\n        track.mute = false;\n      }\n      track.solo = track === soloTrack ? flag : false;\n    }\n  };\n\n\n  Song.prototype.muteAllTracks = function (flag) {\n    var i, track;\n    for (i = this.numTracks - 1; i >= 0; i--) {\n      track = this.tracks[i];\n      track.mute = flag;\n    }\n  };\n\n\n  Song.prototype.setMetronomeVolume = function (value) {\n    this.metronome.setVolume(value);\n  };\n\n  Song.prototype.configureMetronome = function (config) {\n    //console.log(config)\n    this.metronome.configure(config);\n  };\n\n  Song.prototype.resetMetronome = function () {\n    this.metronome.reset();\n  };\n\n\n  Song.prototype.setPrecount = function (value) {\n    this.precount = value;\n  };\n\n\n  Song.prototype.allNotesOff = function () {\n    //console.log('song.allNotesOff');\n    /*\n    var i;\n    for(i in this.tracks){\n        if(this.tracks.hasOwnProperty(i)){\n            this.tracks[i].instrument.allNotesOff();\n        }\n    }\n    */\n    var time = this.scheduler.lastEventTime + 100;\n    objectForEach(this.tracks, function (track) {\n      track.allNotesOff();\n      if (track.routeToMidiOut) {\n        // console.log(track.channel);\n        objectForEach(track.midiOutputs, function (midiOutput) {\n          midiOutput.send([0xB0 + track.channel, 0x7B, 0x00], time + getTimeDiff() + 100 + track.audioLatency); // stop all notes\n          midiOutput.send([0xB0 + track.channel, 0x79, 0x00], time + getTimeDiff() + 100 + track.audioLatency); // reset all controllers\n        });\n      }\n      // track.audio.allNotesOff();\n      // track.instrument.allNotesOff();\n    });\n    this.metronome.allNotesOff();\n    this.scheduler.unschedule();\n    // this.resetExternalMidiDevices();\n  };\n\n\n  Song.prototype.resetExternalMidiDevices = function () {\n    //var time = this.millis + (sequencer.bufferTime * 1000); // this doesn't work, why? -> because the scheduler uses a different time\n    var time = this.scheduler.lastEventTime + 100;\n    if (isNaN(time)) {\n      time = 100;\n    }\n\n\n    // console.log('allNotesOff', this.millis, time);\n    objectForEach(this.midiOutputs, function (output) {\n      // console.log(output)\n      for (let i = 0xB0; i < 0xC0; i++) {\n        output.send([i, 0x7B, 0x00], time + getTimeDiff() + 100); // stop all notes\n        output.send([i, 0x79, 0x00], time + getTimeDiff() + 100); // reset all controllers\n      }\n      //output.send([176, 123, 0], sequencer.getTime());\n    });\n  };\n\n\n  Song.prototype.addMidiEventListener = function () {\n    return addMidiEventListener(arguments, this);\n  };\n\n\n  Song.prototype.removeMidiEventListener = function (id) {\n    removeMidiEventListener(id, this);\n  };\n\n\n  Song.prototype.removeMidiEventListeners = function () {\n    removeMidiEventListener(arguments, this);\n  };\n\n\n  Song.prototype.getMidiInputsAsDropdown = function (config) {\n    config = config || {\n      type: 'input'\n    };\n    return getMidiPortsAsDropdown(config, this);\n  };\n\n\n  Song.prototype.getMidiOutputsAsDropdown = function (config) {\n    config = config || {\n      type: 'output'\n    };\n    return getMidiPortsAsDropdown(config, this);\n  };\n\n  Song.prototype.setMidiInput = function (id, flag) {\n    setMidiInput(id, flag, this);\n  };\n\n\n  Song.prototype.setMidiOutput = function (id, flag) {\n    setMidiOutput(id, flag, this);\n  };\n\n\n  Song.prototype.getNoteLengthName = function (ticks) {\n    return getNoteLengthName(this, ticks);\n\n    /*\n            var args = slice(arguments);\n            if(args.length > 0){\n                pos = getPosition.apply(this, args);\n            }\n    */\n  };\n\n  //sequencer.Song = Song;\n\n  sequencer.createSong = function (config) {\n    return new Song(config);\n  };\n\n\n  sequencer.protectedScope.addInitMethod(function () {\n    context = sequencer.protectedScope.context;\n    timedTasks = sequencer.protectedScope.timedTasks;\n    repetitiveTasks = sequencer.protectedScope.repetitiveTasks;\n    masterGainNode = sequencer.protectedScope.masterGainNode;\n\n    createMidiEvent = sequencer.createMidiEvent;\n    createGrid = sequencer.protectedScope.createGrid;\n\n    initMidi = sequencer.protectedScope.initMidiSong;\n    setMidiInput = sequencer.protectedScope.setMidiInputSong;\n    setMidiOutput = sequencer.protectedScope.setMidiOutputSong;\n    getMidiInputs = sequencer.protectedScope.getMidiInputs;\n    getMidiOutputs = sequencer.protectedScope.getMidiOutputs;\n    addMidiEventListener = sequencer.protectedScope.addMidiEventListener;\n    getMidiPortsAsDropdown = sequencer.protectedScope.getMidiPortsAsDropdown;\n    removeMidiEventListener = sequencer.protectedScope.removeMidiEventListener;\n\n    getPosition = sequencer.protectedScope.getPosition;\n    millisToTicks = sequencer.protectedScope.millisToTicks;\n    ticksToMillis = sequencer.protectedScope.ticksToMillis;\n    ticksToBars = sequencer.protectedScope.ticksToBars;\n    millisToBars = sequencer.protectedScope.millisToBars;\n    barsToTicks = sequencer.protectedScope.barsToTicks;\n    barsToMillis = sequencer.protectedScope.barsToMillis;\n\n    typeString = sequencer.protectedScope.typeString;\n    removeFromArray = sequencer.protectedScope.removeFromArray;\n    removeFromArray2 = sequencer.protectedScope.removeFromArray2;\n    findEvent = sequencer.findEvent;\n    findNote = sequencer.findNote;\n    getStats = sequencer.getStats;\n\n    gridToSong = sequencer.gridToSong;\n    noteToGrid = sequencer.noteToGrid;\n    eventToGrid = sequencer.eventToGrid;\n    positionToGrid = sequencer.positionToGrid;\n\n    getArguments = sequencer.protectedScope.getArguments;\n    objectForEach = sequencer.protectedScope.objectForEach;\n    getNoteLengthName = sequencer.protectedScope.getNoteLengthName;\n\n    update = sequencer.protectedScope.update;\n    checkDuration = sequencer.protectedScope.checkDuration;\n    addMetronomeEvents = sequencer.protectedScope.addMetronomeEvents;\n\n    followEvent = sequencer.protectedScope.followEvent;\n    createPlayhead = sequencer.protectedScope.createPlayhead;\n    createScheduler = sequencer.protectedScope.createScheduler;\n    createFollowEvent = sequencer.protectedScope.createFollowEvent;\n    createMetronome = sequencer.protectedScope.createMetronome;\n\n    addEventListener = sequencer.protectedScope.songAddEventListener;\n    removeEventListener = sequencer.protectedScope.songRemoveEventListener;\n    dispatchEvent = sequencer.protectedScope.songDispatchEvent;\n    addSong = sequencer.protectedScope.addSong;\n\n    getTimeDiff = sequencer.getTimeDiff;\n\n  });\n}\nfunction songEventListener() {\n\n  'use strict';\n\n  var\n    slice = Array.prototype.slice,\n\n    // import\n    typeString, // defined in util.js\n    listenerIndex = 0,\n\n    addEventListener,\n    removeEventListener,\n    dispatchEvent;\n\n\n  dispatchEvent = function () {\n    var i, tmp, listener,\n      args = slice.call(arguments),\n      numArgs = args.length,\n      song = args[0],\n      type = args[1],\n      params = [];\n\n    //console.log(arguments, args);\n\n    // if there are arguments specified, put them before the argument song\n    if (numArgs > 2) {\n      i = 2;\n      while (i < numArgs) {\n        params.push(args[i]);\n        i++;\n      }\n    }\n    params.push(song);\n\n    tmp = song.listeners[type];\n    if (tmp === undefined || tmp.length === undefined) {\n      return;\n    }\n\n    for (i = tmp.length - 1; i >= 0; i--) {\n      listener = tmp[i];\n      if (listener.callback) {\n        listener.callback.apply(null, params);\n      }\n    }\n  };\n\n\n  //@param: type, callback\n  //@param: type, data, callback\n  addEventListener = function () {\n    var args = slice.call(arguments),\n      listenerId,\n      type = args[0];\n\n    switch (type) {\n      case 'play':\n      case 'stop':\n      case 'pause':\n      case 'end':\n      case 'record_start':\n      case 'record_stop':\n      case 'record_precount':\n      case 'record_preroll':\n      case 'recorded_events':\n      case 'latency_adjusted':\n      case 'loop_off':\n      case 'loop_on':\n      case 'loop': // the playhead jumps from the loop end position to the loop start position\n      case 'sustain_pedal':\n        if (this.listeners[type] === undefined) {\n          this.listeners[type] = [];\n        }\n        listenerId = type + '_' + listenerIndex++;\n        this.listeners[type].push({\n          id: listenerId,\n          callback: args[1]\n        });\n        //console.log(type, listenerId);\n        return listenerId;\n      case 'note':\n      case 'event':\n      case 'position':\n        //console.log(type, args[1], args[2]);\n        return this.followEvent.addEventListener(type, args[1], args[2]);\n      default:\n        console.log(type, 'is not a supported event');\n    }\n  };\n\n\n  removeEventListener = function () {\n    var args = slice.call(arguments),\n      tmp,\n      arg0 = args[0],\n      callback = args[1],\n      type, id,\n      filteredListeners = [],\n      i, listener;\n\n    if (arg0.indexOf('_') !== -1) {\n      tmp = arg0.split('_');\n      type = tmp[0];\n      id = arg0;\n    } else {\n      type = arg0;\n    }\n\n    // an array of listener ids is provided so this is not a transport event -> send to FollowEvent\n    if (typeString(type) === 'array') {\n      return this.followEvent.removeEventListener(args);\n    }\n\n\n    switch (type) {\n      case 'play':\n      case 'stop':\n      case 'pause':\n      case 'end':\n      case 'record_start':\n      case 'record_stop':\n      case 'record_precount':\n      case 'record_preroll':\n      case 'recorded_events':\n      case 'latency_adjusted':\n      case 'loop_off':\n      case 'loop_on':\n      case 'loop': // the playhead jumps from the loop end position to the loop start position\n      case 'sustain_pedal':\n        tmp = this.listeners[type];\n        if (tmp && tmp.length > 0) {\n          for (i = tmp.length - 1; i >= 0; i--) {\n            listener = tmp[i];\n            // remove by id\n            if (id !== undefined) {\n              if (listener.id !== id) {\n                filteredListeners.push(listener);\n              }\n              // remove by callback\n            } else if (callback !== undefined && listener.callback !== callback) {\n              filteredListeners.push(listener);\n            }\n          }\n          this.listeners[type] = [].concat(filteredListeners);\n        }\n        break;\n      case 'note':\n      case 'event':\n      case 'position':\n        return this.followEvent.removeEventListener(args);\n      default:\n        console.error('unsupported event');\n    }\n  };\n\n\n  sequencer.protectedScope.songAddEventListener = addEventListener;\n  sequencer.protectedScope.songRemoveEventListener = removeEventListener;\n  sequencer.protectedScope.songDispatchEvent = dispatchEvent;\n\n  sequencer.protectedScope.addInitMethod(function () {\n    typeString = sequencer.protectedScope.typeString;\n  });\n\n}function songFollowEvent() {\r\n\r\n  'use strict';\r\n\r\n  var\r\n    //import\r\n    findEvent, // → defined in find_position.js\r\n    typeString, // → defined in util.js\r\n    getPosition, // → defined in get_position.js\r\n    midiEventNameByNumber, // → defined in midi_event_names.js\r\n    midiEventNumberByName, // → defined in midi_event_names.js\r\n\r\n    listenerIndex = 0, // global id that increases per created eventlistener\r\n\r\n    supportedTimeEvents = {\r\n\r\n      //bars and beats\r\n      bar: 1,\r\n      beat: 1,\r\n      sixteenth: 1,\r\n      tick: 0, // the granularity of requestAnimationFrame is too coarse for tick values\r\n      ticks: 1, // from start of song\r\n      barsbeats: 1, // as number (will be interpreted as bar) or as array of numbers: [bar,beat,sixteenth,tick]\r\n      barsandbeats: 1, // same as above\r\n\r\n      //time\r\n      hour: 1,\r\n      minute: 1,\r\n      second: 1,\r\n      millisecond: 0, // the granularity of requestAnimationFrame is too coarse for millisecond values\r\n      millis: 1, // from start of song\r\n      time: 1 // as number (will be interpreted as second) or as array of numbers: [hour,minute,second,millisecond]\r\n    },\r\n\r\n    supportedOperators = '= == === > >= < <= != !== %=', //'= == === > >= < <= != !== *= ^= ~= $=',\r\n    //supportedOperatorsRegex = new RegExp(' ' + supportedOperators.replace(/\\s+/g,' | ').replace(/\\*/,'\\\\*') + ' '),\r\n    supportedOperatorsRegex = new RegExp(' ' + supportedOperators.replace(/\\s+/g, ' | ') + ' '),\r\n\r\n\r\n    //private\r\n    getEvents,\r\n    checkOperatorConflict,\r\n\r\n    //private class, only accessible in Song\r\n    FollowEvent;\r\n\r\n\r\n  FollowEvent = function (song) {\r\n    this.song = song;\r\n\r\n    this.allListenersById = {};\r\n    this.allListenersByType = {};\r\n    this.searchPatterns = [];\r\n\r\n    this.eventListenersBySearchstring = {};\r\n    this.positionListenersBySearchstring = {};\r\n\r\n    this.allListenersByType = {\r\n      'event': {\r\n        // all events that are registered as event, keys are the event ids, values are array with listener ids\r\n        'instance': {},\r\n        // all events that are registered after a search action, for instance: addEventListener('event', 'velocity > 50', callback)\r\n        'searchstring': {}\r\n      },\r\n      'position': {\r\n        // millis, ticks, time, barsbeats\r\n        'ticks': [],\r\n        // every bar, beat, sixteenth, hour, minute, second\r\n        'repetitive': {},\r\n        // on single conditional values of bar, beat, sixteenth, hour, minute, second, e.g. bar > 3, bar %= 2, bar === 3\r\n        'conditional_simple': {},\r\n        // on conditional values of bar, beat, sixteenth, hour, minute, second, e.g. bar > 3 < 10\r\n        'conditional_complex': {}\r\n      }\r\n    };\r\n  };\r\n\r\n\r\n  FollowEvent.prototype.updateSong = function () {\r\n\r\n    //adjust all event listeners based on registered events and events found by a searchstring\r\n\r\n    var i, j, e, eventId, events, tmp, data,\r\n      listenerIds = [], listeners,\r\n      listener, listenerId;\r\n\r\n    listeners = this.allListenersByType.event.instance;\r\n    // loop over event ids\r\n    for (eventId in listeners) {\r\n      if (listeners.hasOwnProperty(eventId)) {\r\n        // check if event has been removed\r\n        if (this.song.eventsById[eventId] === undefined) {\r\n          // get all listeners that are registered to this event and delete them\r\n          listenerIds = listeners[eventId];\r\n          for (i = listenerIds.length - 1; i >= 0; i--) {\r\n            listenerId = listenerIds[i];\r\n            delete this.allListenersById[listenerId];\r\n          }\r\n          //delete listeners[eventId];\r\n          delete this.allListenersByType.event.instance[eventId];\r\n        }\r\n      }\r\n    }\r\n\r\n    //console.log(listeners);\r\n\r\n    // remove all listeners that are currently bound to found events\r\n    listeners = this.allListenersByType.event.searchstring;\r\n    listenerIds = [];\r\n    for (eventId in listeners) {\r\n      // step 1: collect all ids of listeners\r\n      if (listeners.hasOwnProperty(eventId)) {\r\n        listenerIds = listenerIds.concat(listeners[eventId]);\r\n      }\r\n    }\r\n    // step 2: delete the listeners\r\n    for (i = listenerIds.length - 1; i >= 0; i--) {\r\n      delete this.allListenersById[listenerIds[i]];\r\n    }\r\n\r\n    // all event listeners have been removed, now create a new object and run search string on updated song\r\n    this.allListenersByType.event.searchstring = {};\r\n    tmp = this.allListenersByType.event.searchstring;\r\n\r\n    //@TODO: this can't possibly work!! -> but it actually does..\r\n\r\n    for (i = this.searchPatterns.length - 1; i >= 0; i--) {\r\n      data = this.searchPatterns[i];\r\n      events = findEvent(this.song, data.searchstring);\r\n      //console.log(data, events);\r\n\r\n      //add listeners for both note on and note off and ignore the other event types\r\n      if (tmp.type === 'note') {\r\n        events = findEvent(events, 'type = NOTE_ON OR type = NOTE_OFF');\r\n      }\r\n\r\n      for (j = events.length - 1; j >= 0; j--) {\r\n        e = events[j];\r\n\r\n        listenerId = 'event_' + listenerIndex++;\r\n        listener = {\r\n          id: listenerId,\r\n          event: e,\r\n          type: data.type,\r\n          subtype: data.subtype,\r\n          callback: data.callback\r\n        };\r\n\r\n        this.allListenersById[listenerId] = listener;\r\n\r\n        if (tmp[e.id] === undefined) {\r\n          tmp[e.id] = [];\r\n        }\r\n        tmp[e.id].push(listenerId);\r\n        //listenerIds.push(listenerId);\r\n      }\r\n    }\r\n\r\n    //console.log(allListenersByType.event.searchstring);\r\n    //console.log(allListenersByType.event.instance);\r\n    //console.log(allListenersById);\r\n  };\r\n\r\n\r\n  FollowEvent.prototype.update = function () {\r\n    var\r\n      i,\r\n      position = this.song,\r\n      ticks = position.ticks,\r\n      events = [],\r\n      numEvents,\r\n      event;\r\n\r\n    //events = this.song.playhead.activeEvents;\r\n    events = this.song.playhead.collectedEvents;\r\n    //      events = this.song.playhead.changedEvents; -> do something with a snapshot here\r\n    numEvents = events.length;\r\n    /*\r\n            if(numEvents !== undefined && numEvents > 0){\r\n                console.log(numEvents, position.barsAsString, this.bar, this.beat);\r\n            }\r\n    */\r\n    //call event listeners registered to specific midi events\r\n    for (i = 0; i < numEvents; i++) {\r\n      event = events[i];\r\n      //console.log(event, event.ticks);\r\n      this.callEventListeners(event.id, event);\r\n    }\r\n\r\n    this.callListenersPositionTicks(ticks);\r\n\r\n    if (position.bar !== this.bar) {\r\n      this.bar = position.bar;\r\n      this.callListenersPositionRepetitive('bar');\r\n      this.callListenersPositionConditionalSimple('bar', this.bar);\r\n      this.callListenersPositionConditionalComplex('bar', this.bar);\r\n    }\r\n\r\n    if (position.beat !== this.beat) {\r\n      this.beat = position.beat;\r\n      this.callListenersPositionRepetitive('beat');\r\n      this.callListenersPositionConditionalSimple('beat', this.beat);\r\n      this.callListenersPositionConditionalComplex('beat', this.beat);\r\n    }\r\n\r\n    if (position.sixteenth !== this.sixteenth) {\r\n      this.sixteenth = position.sixteenth;\r\n      this.callListenersPositionRepetitive('sixteenth');\r\n      this.callListenersPositionConditionalSimple('sixteenth', this.sixteenth);\r\n      this.callListenersPositionConditionalComplex('sixteenth', this.sixteenth);\r\n    }\r\n\r\n    if (position.hour !== this.hour) {\r\n      this.hour = position.hour;\r\n      this.callListenersPositionRepetitive('hour');\r\n      this.callListenersPositionConditionalSimple('hour', this.hour);\r\n      this.callListenersPositionConditionalComplex('hour', this.hour);\r\n    }\r\n\r\n    if (position.minute !== this.minute) {\r\n      this.minute = position.minute;\r\n      this.callListenersPositionRepetitive('minute');\r\n      this.callListenersPositionConditionalSimple('minute', this.minute);\r\n      this.callListenersPositionConditionalComplex('minute', this.minute);\r\n    }\r\n\r\n    if (position.second !== this.second) {\r\n      this.second = position.second;\r\n      this.callListenersPositionRepetitive('second');\r\n      this.callListenersPositionConditionalSimple('second', this.second);\r\n      this.callListenersPositionConditionalComplex('second', this.second);\r\n    }\r\n  };\r\n\r\n\r\n  // call callbacks that are bound to a specific event\r\n  FollowEvent.prototype.callEventListeners = function (eventId, event) {\r\n    var i, id, tmp,\r\n      listener,\r\n      listenerIds = [];\r\n\r\n    tmp = this.allListenersByType.event.instance;\r\n    if (tmp[eventId]) {\r\n      listenerIds = listenerIds.concat(tmp[eventId]);\r\n    }\r\n\r\n    tmp = this.allListenersByType.event.searchstring;\r\n    if (tmp[eventId]) {\r\n      listenerIds = listenerIds.concat(tmp[eventId]);\r\n    }\r\n\r\n    if (listenerIds.length > 0) {\r\n      //console.log(listenerIds, event.id, event.ticks);\r\n    }\r\n\r\n    for (i = listenerIds.length - 1; i >= 0; i--) {\r\n      id = listenerIds[i];\r\n      listener = this.allListenersById[id];\r\n      if (listener.called !== true) {\r\n        listener.called = true;\r\n        listener.callback(event);\r\n        //console.log('called', event.id)\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  // for instance: addEventListener('position', 'bar') -> call callback every bar\r\n  FollowEvent.prototype.callListenersPositionRepetitive = function (positionType) {\r\n    var listener,\r\n      listenerIds = this.allListenersByType.position.repetitive[positionType],\r\n      me = this;\r\n\r\n    if (listenerIds) {\r\n      listenerIds.forEach(function (id) {\r\n        listener = me.allListenersById[id];\r\n        listener.callback(listener.searchstring);\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  // can be repetitive or fire once:\r\n  // addEventListener('position', 'beat === 2') -> call callback every second beat\r\n  // addEventListener('position', 'bar === 2') -> call callback at start of bar 2\r\n  FollowEvent.prototype.callListenersPositionConditionalSimple = function (positionType, value) {\r\n    var listener,\r\n      data,\r\n      operator,\r\n      call = false,\r\n      listenerIds = this.allListenersByType.position.conditional_simple[positionType],\r\n      me = this;\r\n\r\n    //console.log(positionType, listenerIds);\r\n\r\n    if (listenerIds) {\r\n      listenerIds.forEach(function (id) {\r\n        // -> check condition\r\n        listener = me.allListenersById[id];\r\n        data = listener.data;\r\n        operator = listener.operator;\r\n\r\n        switch (operator) {\r\n          case '>':\r\n            call = value > data;\r\n            break;\r\n          case '<':\r\n            call = value < data;\r\n            break;\r\n          case '%=':\r\n            //call = (value + 1) % (data + 1) === 0;\r\n            call = value % data === 0;\r\n            break;\r\n          case '!=':\r\n          case '!==':\r\n            call = value !== data;\r\n            break;\r\n          case '===':\r\n            call = value === data;\r\n            break;\r\n        }\r\n\r\n        if (call === true) {\r\n          listener.callback(listener.searchstring);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  // for instance: addEventListener('position', 'bar > 2 < 7') -> call callback every bar from bar 3 to 6\r\n  FollowEvent.prototype.callListenersPositionConditionalComplex = function (positionType, value) {\r\n    var listener,\r\n      value1,\r\n      value2,\r\n      operator1,\r\n      operator2,\r\n      listenerIds = this.allListenersByType.position.conditional_complex[positionType],\r\n      me = this;\r\n\r\n    if (listenerIds) {\r\n      listenerIds.forEach(function (id) {\r\n        // -> check condition(s)\r\n        listener = me.allListenersById[id];\r\n        value1 = listener.value1;\r\n        value2 = listener.value2;\r\n        operator1 = listener.operator1;\r\n        operator2 = listener.operator2;\r\n        if (operator1 === '<') {\r\n          if (value < value1 || value > value2) {\r\n            listener.callback(listener.searchstring);\r\n          }\r\n        } else if (operator1 === '>') {\r\n          //console.log(value1,value2,value,operator1,operator2);\r\n          if (value > value1 && value < value2) {\r\n            listener.callback(listener.searchstring);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  FollowEvent.prototype.callListenersPositionTicks = function (ticks) {\r\n    var tmp = this.allListenersByType.position.ticks,\r\n      i, maxi = tmp.length,\r\n      listener;\r\n\r\n    for (i = 0; i < maxi; i++) {\r\n      listener = this.allListenersById[tmp[i]];\r\n      //console.log(listener,ticks);\r\n      if (ticks >= listener.ticks && !listener.called) {\r\n        listener.callback(listener.searchstring);\r\n        listener.called = true;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n      event types: event, note or position\r\n\r\n      event → when the playhead passes the event\r\n\r\n      note → both on the note on and the note off event, the events array may be an array of notes or an array of events\r\n\r\n      position\r\n          'bar' -> every bar\r\n          'bar = 3' -> start of bar 3\r\n          'bar > 3 < 7' -> every bar after bar 3 and before bar 7\r\n\r\n          'beat' -> every beat\r\n          'beat = 3' -> start of beat 3\r\n          'beat > 3' -> every beat after beat 3\r\n\r\n          etc.\r\n\r\n\r\n      addEventListener('event',eventsArray,callback)\r\n      addEventListener('event',findEvent(eventsArray,'type = NOTE_ON'),callback)\r\n\r\n      addEventListener('note',eventsArray,callback)\r\n      addEventListener('note',findEvent(eventsArray,'velocity = 90'),callback)\r\n\r\n      addEventListener('event','bar > 5', callback)\r\n      addEventListener('note','id = 45654544345',callback)\r\n\r\n      addEventListener('position','bar',callback)\r\n      addEventListener('position','bar > 5 < 17',callback)\r\n      addEventListener('position','beat',callback)\r\n\r\n      addEventListener('position','second',callback)\r\n      addEventListener('position','second > 5',callback)\r\n\r\n      addEventListener('position','barsbeats = 1,2,0,0',callback)\r\n\r\n\r\n  */\r\n\r\n  FollowEvent.prototype.addEventListener = function (type, data, callback) {\r\n    var i, events, event, storeArray, tmp, subtype,\r\n      listener, listenerId, listenerIds = [],\r\n      dataType = typeString(data);\r\n\r\n    //console.log(type,data,callback);\r\n    //console.log(dataType, data);\r\n\r\n    if (typeString(callback) !== 'function') {\r\n      console.error(callback, 'is not a function; please provide a function for callback');\r\n      return -1;\r\n    }\r\n\r\n\r\n    if (type === 'position') {\r\n      listenerId = this.addPositionEventListener(data, callback);\r\n      //console.log(allListenersByType, allListenersById);\r\n      return listenerId;\r\n    }\r\n\r\n\r\n    if (dataType === 'string') {\r\n      events = findEvent(this.song, data);\r\n      // store the search string so we can run it again after the song has changed\r\n      this.searchPatterns.push({\r\n        searchstring: data,\r\n        callback: callback,\r\n        type: 'event',\r\n        subtype: 'searchstring'\r\n      });\r\n      //console.log(data, events);\r\n\r\n      if (events.length === 0) {\r\n        return -1;\r\n      }\r\n      subtype = 'searchstring';\r\n      storeArray = this.allListenersByType.event.searchstring;\r\n      this.eventListenersBySearchstring[data] = tmp = [];\r\n    } else {\r\n      events = getEvents(type, data);\r\n      if (events === -1) {\r\n        return -1;\r\n      }\r\n      subtype = 'instance';\r\n      storeArray = this.allListenersByType.event.instance;\r\n    }\r\n\r\n\r\n    //add listeners for both note on and note off and ignore the other event types\r\n    if (type === 'note') {\r\n      events = findEvent(events, 'type = NOTE_ON OR type = NOTE_OFF');\r\n    }\r\n\r\n    for (i = events.length - 1; i >= 0; i--) {\r\n      event = events[i];\r\n      listenerId = 'event_' + listenerIndex++;\r\n      listener = {\r\n        id: listenerId,\r\n        event: event,\r\n        type: type,\r\n        subtype: subtype,\r\n        callback: callback\r\n      };\r\n\r\n      //allListeners.push(listener);\r\n      this.allListenersById[listenerId] = listener;\r\n\r\n      if (storeArray[event.id] === undefined) {\r\n        storeArray[event.id] = [];\r\n      }\r\n      storeArray[event.id].push(listenerId);\r\n      listenerIds.push(listenerId);\r\n\r\n      if (subtype === 'searchstring') {\r\n        tmp.push(listenerId);\r\n      }\r\n    }\r\n    //console.log(this.allListenersById, this.allListenersByType);\r\n\r\n    if (subtype === 'searchstring' || dataType === 'array' || type === 'note') {\r\n      return listenerIds;\r\n    } else {\r\n      //console.log('num listeners:', listenerIds.length);\r\n      return listenerIds[0];\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n\r\n      'bar'; -> repetitive\r\n      'bar == 3'; -> fire once\r\n      'bar < 3 > 5'; -> conditionally repetitive\r\n      'bar = 3 AND beat > 1' -> not supported here! (doesn't make sense, use events or position instead)\r\n\r\n      - check if has valid operators\r\n      - some types need an operator -> filter\r\n      - check values that the operator has to act upon\r\n      - split into repetitive and one-shot listeners\r\n\r\n  */\r\n  FollowEvent.prototype.addPositionEventListener = function (data, callback) {\r\n    var tmp,\r\n      listenerId, listener,\r\n      millis,\r\n      searchString = data.split(/[\\s+]/g),\r\n      len = searchString.length,\r\n      type = searchString[0],\r\n      operator1 = searchString[1],\r\n      value1 = searchString[2],\r\n      operator2 = searchString[3],\r\n      value2 = searchString[4],\r\n      value1Type = typeString(value1);\r\n    //hasOperator = supportedOperatorsRegex.test(data);\r\n\r\n    //console.log(data, searchString, len);\r\n    //console.log(type, value1, operator1, value2, operator2);\r\n\r\n    if (len !== 1 && len !== 3 && len !== 5) {\r\n      console.error('invalid search string, please consult documentation');\r\n      return false;\r\n    }\r\n    /*\r\n            //split position data into an array -> is now done in find_event.js -> not anymore ;)\r\n            if(value1 && value1.indexOf(',') !== -1){\r\n                value1 = value1.split(',');\r\n            }\r\n    \r\n            if(value2 && value2.indexOf(',') !== -1){\r\n                value2 = value2.split(',');\r\n            }\r\n    */\r\n\r\n    if (supportedTimeEvents[type] !== 1) {\r\n      console.error(type, 'is not a supported event id, please consult documentation');\r\n      return -1;\r\n    }\r\n\r\n    if (operator1 === '=' || operator1 === '==') {\r\n      operator1 = '===';\r\n    }\r\n\r\n\r\n    // check values per type\r\n\r\n    switch (type) {\r\n      // these type can only fire once\r\n      case 'barsbeats':\r\n      case 'barsandbeats':\r\n      case 'time':\r\n      //case 'musical_time':\r\n      //case 'linear_time':\r\n      case 'ticks':\r\n      case 'millis':\r\n        if (operator1 === undefined || operator1 !== '===') {\r\n          console.error(type, 'can only be used conditionally with the operators \\'===\\', \\'==\\' or \\'=\\'');\r\n          return -1;\r\n        }\r\n        // if(isNaN(value1) && typeString(value1) !== 'array'){\r\n        //  console.error('please provide a number or an array of numbers');\r\n        //  return -1;\r\n        // }\r\n        if (operator2) {\r\n          console.warn('this position event type can only be used with a single condition, ignoring second condition');\r\n        }\r\n        break;\r\n\r\n      // these type fire repeatedly or once\r\n      case 'bar': // -> fired once if used with === operator\r\n      case 'beat':\r\n      case 'sixteenth':\r\n      //case 'tick':\r\n      case 'hour': // -> fired once if used with === operator\r\n      case 'minute':\r\n      case 'second':\r\n        //case 'millisecond':\r\n\r\n        if (value1 && isNaN(value1)) {\r\n          console.error('please provide a number');\r\n          return -1;\r\n        }\r\n        if (value2 && isNaN(value2)) {\r\n          console.error('please provide a number');\r\n          return -1;\r\n        }\r\n        break;\r\n    }\r\n\r\n\r\n    // check operators\r\n\r\n    if (operator1 && supportedOperators.indexOf(operator1) === -1) {\r\n      console.error(operator1, 'is not a supported operator, please use any of', supportedOperators);\r\n      return -1;\r\n    }\r\n\r\n    if (operator1 && value1 === undefined) {\r\n      console.error('operator without value');\r\n      return;\r\n    }\r\n\r\n    if (operator2 && supportedOperators.indexOf(operator1) === -1) {\r\n      console.error(operator2, 'is not a supported operator, please use any of', supportedOperators);\r\n      return -1;\r\n    }\r\n\r\n    if (operator2 && value2 === undefined) {\r\n      console.error('operator without value');\r\n      return;\r\n    }\r\n\r\n    if (operator1 && operator2 && checkOperatorConflict(operator1, operator2) === false) {\r\n      console.error('you can\\'t use ' + operator1 + ' together with ' + operator2);\r\n      return -1;\r\n    }\r\n\r\n\r\n    // check callback\r\n\r\n    if (typeString(callback) !== 'function') {\r\n      console.error(callback, 'is not a function; please provide a function for callback');\r\n      return -1;\r\n    }\r\n\r\n\r\n    // simplify searchstring and adjust values\r\n\r\n    switch (type) {\r\n\r\n      // event types that fire repeatedly or once\r\n\r\n      case 'bar':\r\n      case 'beat':\r\n      case 'sixteenth':\r\n        // make zero based\r\n        value1 = value1 - 0;\r\n        value2 = value2 - 0;\r\n      //case 'tick':\r\n      case 'hour':\r\n      case 'minute':\r\n      case 'second':\r\n        //case 'millisecond':\r\n        // make zero based\r\n        value1 = value1 - 0;\r\n        value2 = value2 - 0;\r\n\r\n        // convert <= to < and >= to > to make it easier\r\n        if (operator1) {\r\n          if (operator1 === '<=') {\r\n            value1++;\r\n            operator1 = '<';\r\n          } else if (operator1 === '>=') {\r\n            value1--;\r\n            operator1 = '>';\r\n          }\r\n        }\r\n\r\n        if (operator2) {\r\n          if (operator2 === '<=') {\r\n            value2++;\r\n            operator2 = '<';\r\n          } else if (operator2 === '>=') {\r\n            value2--;\r\n            operator2 = '>';\r\n          }\r\n        }\r\n\r\n        break;\r\n\r\n\r\n      // event types that fire only once, these get all converted to type 'ticks'\r\n\r\n      case 'ticks':\r\n        // we already have the position value in ticks\r\n        value1 = value1 - 0;\r\n        break;\r\n\r\n\r\n      case 'barsbeats':\r\n      case 'barsandbeats':\r\n        //case 'musical_time':\r\n\r\n        // convert position value to ticks\r\n        if (!isNaN(value1)) {\r\n          // only a single number is provided, we consider it to be the bar number\r\n          value1 = getPosition(this.song, ['barsbeats', value1, 1, 1, 0]).ticks;\r\n        } else if (value1Type === 'string') {\r\n          // a full barsandbeats array is provided: bar, beat, sixteenth, ticks\r\n          value1 = value1.replace(/[\\[\\]\\s]/g, '');\r\n          value1 = value1.split(',');\r\n          value1 = getPosition(this.song, ['barsbeats', value1[0], value1[1] || 1, value1[2] || 1, value1[3] || 0]).ticks;\r\n          /*\r\n                          }else if(value1Type === 'array'){\r\n                              // a full barsandbeats array is provided: bar, beat, sixteenth, ticks\r\n                              value1 = getPosition(this.song, ['barsbeats', value1[0], value1[1], value1[2], value1[3]]).ticks;\r\n          */\r\n        } else {\r\n          console.error('please provide a number or an array of numbers');\r\n        }\r\n        type = 'ticks';\r\n        break;\r\n\r\n\r\n      case 'millis':\r\n        // convert position value to ticks\r\n        value1 = getPosition(this.song, ['millis', value1]).ticks;\r\n        type = 'ticks';\r\n        break;\r\n\r\n\r\n      case 'time':\r\n        //case 'linear_time':\r\n        // convert position value to ticks\r\n        if (!isNaN(value1)) {\r\n          // a single number is provided, we treat this as the value for minutes\r\n          millis = value1 * 60 * 1000; //seconds\r\n          value1 = getPosition(this.song, ['millis', millis]).ticks;\r\n        } else if (value1Type === 'string') {\r\n          // a full barsandbeats array is provided: bar, beat, sixteenth, ticks\r\n          value1 = value1.replace(/[\\[\\]\\s]/g, '');\r\n          console.log(value1);\r\n          value1 = value1.split(',');\r\n          if (value1.length === 1) {\r\n            millis = value1[0] * 60 * 1000;\r\n            value1 = getPosition(this.song, ['millis', millis]).ticks;\r\n          } else {\r\n            value1 = getPosition(this.song, ['time', value1[0], value1[1], value1[2], value1[3]]).ticks;\r\n          }\r\n          /*\r\n                          }else if(value1Type === 'array'){\r\n                              // a full time array is provided: hours, minutes, seconds, millis\r\n                              value1 = getPosition(this.song, ['time', value1[0], value1[1], value1[2], value1[3]]).ticks;\r\n          */\r\n        } else {\r\n          console.error('please provide a number or an array of numbers');\r\n        }\r\n        console.log(value1);\r\n        type = 'ticks';\r\n        break;\r\n    }\r\n\r\n\r\n    listenerId = 'position_' + listenerIndex++;\r\n\r\n    //console.log(value1,value2);\r\n\r\n    if (type === 'ticks') {\r\n      //console.log(value1,listenerId)\r\n\r\n      listener = {\r\n        id: listenerId,\r\n        callback: callback,\r\n        type: 'position',\r\n        subtype: 'ticks',\r\n        ticks: value1,\r\n        searchstring: data\r\n      };\r\n\r\n      this.allListenersByType.position.ticks.push(listenerId);\r\n\r\n    } else if (!operator1 && !operator2) {\r\n      // every bar, beat, sixteenth, hour, minute, second\r\n      listener = {\r\n        id: listenerId,\r\n        callback: callback,\r\n        type: 'position',\r\n        subtype: 'repetitive',\r\n        position_type: type,\r\n        searchstring: data\r\n      };\r\n\r\n      tmp = this.allListenersByType.position.repetitive;\r\n      if (tmp[type] === undefined) {\r\n        tmp[type] = [];\r\n      }\r\n      tmp[type].push(listenerId);\r\n\r\n    } else if (operator1 && !operator2) {\r\n      // every time a bar, beat, sixteenth, hour, minute, second meets a certain simple condition, can be both repetitive and fire once\r\n      listener = {\r\n        id: listenerId,\r\n        callback: callback,\r\n        type: 'position',\r\n        subtype: 'conditional_simple',\r\n        position_type: type,\r\n        data: value1,\r\n        operator: operator1,\r\n        searchstring: data\r\n      };\r\n\r\n      tmp = this.allListenersByType.position.conditional_simple;\r\n      if (tmp[type] === undefined) {\r\n        tmp[type] = [];\r\n      }\r\n      tmp[type].push(listenerId);\r\n\r\n    } else if (operator1 && operator2) {\r\n      // every time a bar, beat, sixteenth, hour, minute, second meets a certain complex condition\r\n      listener = {\r\n        id: listenerId,\r\n        callback: callback,\r\n        type: 'position',\r\n        subtype: 'conditional_complex',\r\n        position_type: type,\r\n        value1: value1,\r\n        value2: value2,\r\n        operator1: operator1,\r\n        operator2: operator2,\r\n        searchstring: data\r\n      };\r\n\r\n      tmp = this.allListenersByType.position.conditional_complex;\r\n      if (tmp[type] === undefined) {\r\n        tmp[type] = [];\r\n      }\r\n      tmp[type].push(listenerId);\r\n\r\n    }\r\n\r\n    this.allListenersById[listenerId] = listener;\r\n    this.positionListenersBySearchstring[data] = listenerId;\r\n    return listenerId;\r\n  };\r\n\r\n  // @param type, data, callback\r\n  // @param id\r\n  FollowEvent.prototype.removeEventListener = function (args) {\r\n    var\r\n      //args = Array.prototype.slice.call(arguments),\r\n      arg0,\r\n      numArgs,\r\n      type, subtype, data, callback, id, ids, tmp,\r\n      listener, listenerId,\r\n      event, eventId, eventIds,\r\n      i, j, k, removeMe,\r\n      listenerIds,\r\n      filteredListenerIds = [],\r\n      removedListenerIds = [],\r\n      dataType;\r\n\r\n    //console.log(args);\r\n    //args = Array.prototype.slice.call(args[0]);\r\n    arg0 = args[0];\r\n    numArgs = args.length;\r\n\r\n    if (numArgs === 1) {\r\n      if (typeString(arg0) === 'array') {\r\n        ids = arg0;\r\n      } else {\r\n        ids = [arg0];\r\n      }\r\n      //console.log(ids);\r\n\r\n      for (i = ids.length - 1; i >= 0; i--) {\r\n        id = ids[i];\r\n        //console.log(id);\r\n        if (this.allListenersById[id] !== undefined) {\r\n          listener = this.allListenersById[id];\r\n          type = listener.type;\r\n          subtype = listener.subtype;\r\n\r\n          if (type === 'position') {\r\n            // reference to an array of all the listeners bound to this event type\r\n            listenerIds = this.allListenersByType[type][subtype][listener.position_type];\r\n            // loop over listeners and filter the one that has to be removed\r\n            for (j = listenerIds.length - 1; j >= 0; j--) {\r\n              listenerId = listenerIds[j];\r\n              if (listenerId !== id) {\r\n                filteredListenerIds.push(listenerId);\r\n              }\r\n            }\r\n            // add the filtered array back\r\n            this.allListenersByType[listener.type][listener.subtype][listener.position_type] = [].concat(filteredListenerIds);\r\n            delete this.allListenersById[id];\r\n\r\n          } else if (type === 'event' || type === 'note') {\r\n            event = listener.event;\r\n            eventId = event.id;\r\n            listenerIds = this.allListenersByType.event[subtype][eventId];\r\n            for (j = listenerIds.length - 1; j >= 0; j--) {\r\n              listenerId = listenerIds[j];\r\n              listener = this.allListenersById[listenerId];\r\n              if (listenerId !== id) {\r\n                filteredListenerIds.push(listenerId);\r\n                break;\r\n              }\r\n            }\r\n            // add the filtered array back per event\r\n            this.allListenersByType.event[subtype][eventId] = [].concat(filteredListenerIds);\r\n            delete this.allListenersById[id];\r\n\r\n            //@TODO: we have to add allListenersByType.notes\r\n            /*\r\n                                    if(type === 'note'){\r\n                                        console.log(event);\r\n                                        if(event.type === sequencer.NOTE_ON){\r\n                                            eventId = event.midiNote.noteOff.id;\r\n                                            tmp = allListenersByType.event[subtype][eventId];\r\n                                            listenerIds = listenerIds.concat(tmp);\r\n                                        }else if(event.type === sequencer.NOTE_OFF){\r\n                                            eventId = event.midiNote.noteOn.id;\r\n                                            tmp = allListenersByType.event[subtype][eventId];\r\n                                            listenerIds = listenerIds.concat(tmp);\r\n                                        }\r\n            \r\n                                        for(j = listenerIds.length - 1; j >= 0; j--){\r\n                                            listenerId = listenerIds[j];\r\n                                            listener = allListenersById[listenerId];\r\n                                            if(listenerId !== id){\r\n                                                filteredListenerIds.push(listenerId);\r\n                                                break;\r\n                                            }\r\n                                        }\r\n                                        // add the filtered array back per event\r\n                                        allListenersByType.event[subtype][eventId] = [].concat(filteredListenerIds);\r\n                                        delete allListenersById[id];\r\n                                    }\r\n            */\r\n          }\r\n\r\n          //console.log(this.allListenersById,this.allListenersByType);\r\n\r\n        } else {\r\n          console.warn('no event listener found with id', id);\r\n        }\r\n      }\r\n\r\n    } else if (numArgs === 2 || numArgs === 3) {\r\n\r\n      type = args[0];\r\n      data = args[1];\r\n      callback = args[2];\r\n      dataType = typeString(data);\r\n\r\n      //console.log(type, data, callback, dataType);\r\n\r\n      switch (type) {\r\n        case 'position':\r\n          if (dataType === 'string') {\r\n            // get the id of the listener by the searchstring\r\n            id = this.positionListenersBySearchstring[data];\r\n            // get the listener by id\r\n            listener = this.allListenersById[id];\r\n            // reference to an array of all the listeners bound to this event type\r\n            listenerIds = this.allListenersByType[listener.type][listener.subtype][listener.position_type];\r\n            // loop over listeners and filter the one that has to be removed\r\n            for (i = listenerIds.length - 1; i >= 0; i--) {\r\n              listenerId = listenerIds[i];\r\n              if (listenerId !== id) {\r\n                filteredListenerIds.push(listenerId);\r\n              }\r\n            }\r\n            // add the filtered array back\r\n            this.allListenersByType[listener.type][listener.subtype][listener.position_type] = [].concat(filteredListenerIds);\r\n            delete this.allListenersById[id];\r\n            delete this.positionListenersBySearchstring[data];\r\n            //console.log(allListenersById, allListenersByType, positionListenersBySearchstring);\r\n          }\r\n          break;\r\n\r\n        case 'event':\r\n        case 'note':\r\n\r\n          if (dataType === 'string') {\r\n            // get all listener ids that are connected to this searchstring\r\n            listenerIds = this.eventListenersBySearchstring[data];\r\n            for (i = listenerIds.length - 1; i >= 0; i--) {\r\n              // collect all ids of listeners that need to be removed\r\n              removedListenerIds.push(listenerIds[i]);\r\n            }\r\n\r\n            // loop over all searchstring listeners and filter the ones that have to be removed\r\n            eventIds = this.allListenersByType.event.searchstring;\r\n            for (eventId in eventIds) {\r\n              if (eventIds.hasOwnProperty(eventId)) {\r\n                listenerIds = eventIds[eventId];\r\n                filteredListenerIds = [];\r\n                for (i = listenerIds.length - 1; i >= 0; i--) {\r\n                  listenerId = listenerIds[i];\r\n                  removeMe = false;\r\n                  for (j = removedListenerIds.length - 1; j >= 0; j--) {\r\n                    //console.log(listenerId, removedListenerIds[j], callback);\r\n                    if (listenerId === removedListenerIds[j]) {\r\n                      removeMe = true;\r\n                      /*\r\n                      if(callback === undefined){\r\n                          removeMe = true;\r\n                      }else{\r\n                          removeMe = allListenersById[listenerId].callback === callback\r\n                      }\r\n                      */\r\n                      break;\r\n                    }\r\n                  }\r\n                  if (removeMe === false) {\r\n                    filteredListenerIds.push(listenerId);\r\n                  } else {\r\n                    // remove the listeners from the id library\r\n                    delete this.allListenersById[listenerIds[i]];\r\n                  }\r\n                }\r\n                // add the filtered array back\r\n                this.allListenersByType.event.searchstring[eventId] = [].concat(filteredListenerIds);\r\n              }\r\n            }\r\n            // delete the searchstring listeners array\r\n            delete this.eventListenersBySearchstring[data];\r\n            //console.log(allListenersById,eventListenersBySearchstring,allListenersByType);\r\n\r\n          } else if (dataType === 'object') {\r\n            if (data.className !== 'MidiEvent' && data.className !== 'MidiNote') {\r\n              console.error('please provide a midi event or a midi note');\r\n              return;\r\n            }\r\n            if (data.className === 'MidiNote') {\r\n              id = data.noteOn.id;\r\n            } else if (data.className === 'MidiEvent') {\r\n              id = data.id;\r\n            }\r\n            if (this.allListenersByType.event.instance[id] !== undefined) {\r\n              type = 'instance';\r\n              listenerIds = this.allListenersByType.event.instance[id];\r\n            } else if (this.allListenersByType.event.searchstring[id] !== undefined) {\r\n              type = 'searchstring';\r\n              listenerIds = this.allListenersByType.event.searchstring[id];\r\n            }\r\n            if (listenerIds === undefined) {\r\n              console.warn('no event listener bound to event with id', id);\r\n              return;\r\n            }\r\n            if (data.className === 'MidiNote') {\r\n              ids = this.allListenersByType.event[type][data.noteOff.id];\r\n              listenerIds = listenerIds.concat(ids);\r\n            }\r\n            //console.log(listenerIds);\r\n            for (i = listenerIds.length - 1; i >= 0; i--) {\r\n              listenerId = listenerIds[i];\r\n              listener = this.allListenersById[listenerId];\r\n              if (callback && listener.callback !== callback) {\r\n                filteredListenerIds.push(listener.id);\r\n              } else {\r\n                delete this.allListenersById[listener.id];\r\n              }\r\n              this.allListenersByType.event[type][listener.event.id] = [].concat(filteredListenerIds);\r\n            }\r\n            //console.log(allListenersById,allListenersByType);\r\n          }\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  // set the 'called' key of every listener to false, this is necessary if the playhead is moved (by a loop of by the user)\r\n  FollowEvent.prototype.resetAllListeners = function () {\r\n    var listeners = this.allListenersById, key, listener;\r\n\r\n    for (key in listeners) {\r\n      if (listeners.hasOwnProperty(key)) {\r\n        listener = listeners[key];\r\n        listener.called = false;\r\n        //console.log(listener);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  getEvents = function (type, data) {\r\n\r\n    var dataType = typeString(data),\r\n      events = [], i, e;\r\n\r\n    if (dataType !== 'array' && data !== undefined && data.className !== 'MidiEvent' && data.className !== 'MidiNote') {\r\n      console.error(data, ' is not valid data for event type \\'event\\', please consult documentation');\r\n      return -1;\r\n    }\r\n\r\n    if (dataType === 'array') {\r\n      for (i = data.length - 1; i >= 0; i--) {\r\n        e = data[i];\r\n        if (type === 'event' && e.className !== 'MidiEvent' && e.className !== 'AudioEvent') {\r\n          console.warn('skipping', e, 'because it is not a MidiEvent nor an AudioEvent');\r\n          continue;\r\n        } else if (type === 'note' && e.className !== 'MidiNote') {\r\n          console.warn('skipping', e, 'because it is not a MidiNote');\r\n          continue;\r\n        }\r\n        events.push(e);\r\n      }\r\n    } else {\r\n      if (type === 'event') {\r\n        if (data.className !== 'MidiEvent' && data.className !== 'AudioEvent') {\r\n          console.error(data, ' is not a MidiEvent nor an AudioEvent');\r\n          return -1;\r\n        } else {\r\n          events = [data];\r\n        }\r\n      } else if (type === 'note') {\r\n        if (data.className !== 'MidiNote') {\r\n          console.error(data, ' is not a MidiNote');\r\n          return -1;\r\n        } else {\r\n          events = [data.noteOn, data.noteOff];\r\n        }\r\n      }\r\n    }\r\n\r\n    return events;\r\n  };\r\n\r\n\r\n  checkOperatorConflict = function (operator1, operator2) {\r\n\r\n    switch (operator1) {\r\n      case '=':\r\n      case '==':\r\n      case '===':\r\n        return false;\r\n    }\r\n\r\n    switch (operator2) {\r\n      case '=':\r\n      case '==':\r\n      case '===':\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n\r\n  sequencer.protectedScope.createFollowEvent = function (song) {\r\n    return new FollowEvent(song);\r\n  };\r\n\r\n\r\n  sequencer.protectedScope.addInitMethod(function () {\r\n    typeString = sequencer.protectedScope.typeString;\r\n    getPosition = sequencer.protectedScope.getPosition;\r\n    midiEventNumberByName = sequencer.midiEventNumberByName;\r\n    midiEventNameByNumber = sequencer.midiEventNameByNumber;\r\n    findEvent = sequencer.findEvent;\r\n  });\r\n}function songGrid() {\r\n\r\n\t/*\r\n\r\n\t[[ gridPositionFromSong(seqPosition,width,height) ]]\r\n\t\r\n\tgridCoordinateFromPosition(position,width,height)\r\n\r\n\t[[ gridPositionFromNote(notePitch,width,height) ]]\r\n\r\n\tgridCoordinateFromNote(note,width,height)\r\n\tgridCoordinateFromNote(pitch,width,height) -> basically a y-position\r\n\tgridCoordinateFromNote(event,width,height) -> specific event\r\n\t\r\n\r\n\t[[ songPositionFromGrid(x,y,width,height) ]]\r\n\r\n\tpositionFromGridCoordinate(x,y,width,height)\r\n\r\n\tnoteFromGridCoordinate(x,y,width,height) -> returns same as positionFromGridCoordinate\r\n\r\n\tsetSequenceLength(totalBars)\r\n\t\r\n\tsong.setGrid(height, width, pitchMin, pitchMax)\r\n\r\n\r\n\timplemented:\r\n\r\n\tsetGridPitchRange(min,max)\r\n\r\n\tgridToSong([song],x,y,width,height)\r\n\r\n\tsongToGrid(event) -> x and y\r\n\tsongToGrid(position,note) -> x and y\r\n\t\r\n\tsongToGrid(position,width,height) -> x, y = 0\r\n\t\r\n\tsongToGrid(note,width,height) -> y, x = 0\r\n\tsongToGrid(pitch)\r\n\r\n\tsongToGrid(event,width,height)\r\n\tsongToGrid('x',position,width,height)\r\n\tsongToGrid('y',note,width,height)\r\n\tsongToGrid('x','y',position,note,width,height)\r\n\r\n\r\n\t*/\r\n\r\n\t'use strict';\r\n\r\n\tvar\r\n\t\t//import\r\n\t\tgetPosition, // → defined in get_position.js\r\n\t\tfloor, // → defined in util.js\r\n\t\tround, // → defined in util.js\r\n\t\ttypeString, // → defined in util.js\r\n\r\n\t\t//public\r\n\t\tsongToGrid, // catch all -> may be remove this\r\n\t\tpositionToGrid,\r\n\t\teventToGrid,\r\n\t\tnoteToGrid,\r\n\r\n\t\tgridToSong, // catch all -> may be remove this\r\n\t\tpositionToSong;\r\n\r\n\r\n\tpositionToSong = function (song, x, y, width, height) {\r\n\t\tvar ticks, note, position, coordinate;\r\n\t\t//console.log(song.millis,x,y,width,height);\r\n\r\n\t\tif (song === undefined) {\r\n\t\t\tconsole.error('please provide a song');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (x === undefined || y === undefined) {\r\n\t\t\tconsole.error('please provide a coordinate');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (width === undefined || height === undefined) {\r\n\t\t\tconsole.error('please provide width and height');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tticks = floor((x / width) * song.ticks);\r\n\t\t//note = 127 - floor((y/height) * 128);\r\n\t\tnote = song.highestNote - floor((y / height) * song.pitchRange);\r\n\t\t//note = song.highestNote - round((y/height) * song.numNotes);\r\n\r\n\t\tposition = getPosition(song, ['ticks', ticks]);\r\n\t\tnote = sequencer.createNote(note);\r\n\r\n\t\t//console.log(position,note);\r\n\r\n\t\treturn {\r\n\t\t\tposition: position,\r\n\t\t\tnote: note\r\n\t\t};\r\n\t};\r\n\r\n\t//[song],x,y,width,height\r\n\tsequencer.positionToSong = sequencer.coordinatesToPosition = sequencer.gridToSong = function () {\r\n\t\tvar args = Array.prototype.slice.call(arguments),\r\n\t\t\tnumArgs = args.length,\r\n\t\t\targ0 = args[0];\r\n\r\n\t\t//todo: add error messages here\r\n\t\tif (numArgs === 4 && arg0.className !== 'Song') {\r\n\t\t\treturn positionToSong(sequencer.getSong(), arg0, args[1], args[2], args[3]);\r\n\t\t}\r\n\t\treturn positionToSong(arg0, args[1], args[2], args[3], args[4]);\r\n\t};\r\n\r\n\r\n\tsequencer.songToGrid = function () {\r\n\t\tvar args = Array.prototype.slice.call(arguments),\r\n\t\t\tnumArgs = args.length,\r\n\t\t\targ0 = args[0],\r\n\t\t\targ1 = args[1];\r\n\r\n\t\tswitch (numArgs) {\r\n\t\t\tcase 3:\r\n\t\t\t\teventToGrid(arg0, arg1, args[2]);//event,width,height\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tif (arg0 === 'x') {\r\n\t\t\t\t\tpositionToGrid(arg1, args[2], args[3]);//[position], width, height\r\n\t\t\t\t} else if (arg0 === 'y') {\r\n\t\t\t\t\tnoteToGrid(arg1, args[2], args[3]);//note, width, height\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 6:\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.error('wrong number of arguments');\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\teventToGrid = function (event, width, height, song) {\r\n\t\tif (song === undefined) {\r\n\t\t\tsong = sequencer.getSong();\r\n\t\t}\r\n\r\n\t\tif (event.type !== sequencer.NOTE_ON && event.type !== sequencer.NOTE_OFF) {\r\n\t\t\tconsole.error('please provide a NOTE_ON or a NOTE_OFF event');\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar x = (event.millis / song.durationMillis) * width,\r\n\t\t\ty,\r\n\t\t\tnote = sequencer.createNote(event.noteNumber);\r\n\t\t//position = sequencer.createPosition('ticks', event.ticks);\r\n\r\n\t\treturn {\r\n\t\t\tx: positionToGrid(['ticks', event.ticks], width, song),\r\n\t\t\ty: noteToGrid(note, height, song)\r\n\t\t};\r\n\t};\r\n\r\n\r\n\tpositionToGrid = function (position, width, song) {\r\n\t\tif (song === undefined) {\r\n\t\t\tsong = sequencer.getSong();\r\n\t\t}\r\n\r\n\t\tif (typeString(position) === 'array' || position.type !== 'ticks') {\r\n\t\t\tposition = getPosition(song, position);\r\n\t\t}\r\n\t\t//console.log(position)\r\n\t\tvar x = floor(position.ticks / song.quantizeTicks) * song.quantizeTicks;\r\n\t\t//console.log(x, song.ticks, position.data, song.quantizeTicks);\r\n\t\tx = x / song.ticks;\r\n\t\tx = x * width;\r\n\r\n\t\t//return round(x);\r\n\t\treturn x;\r\n\t};\r\n\r\n\r\n\tnoteToGrid = function (note, height, song) {\r\n\t\tif (song === undefined) {\r\n\t\t\tsong = sequencer.getSong();\r\n\t\t}\r\n\r\n\t\tvar noteNumber = note.number,\r\n\t\t\ty;\r\n\r\n\t\tif (noteNumber < song.lowestNote || noteNumber > song.highestNote) {\r\n\t\t\tconsole.error('note is out of range of the pitch range of this song');\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\ty = (noteNumber - song.highestNote) / song.pitchRange;\r\n\t\ty = y < 0 ? -y : y;\r\n\t\ty = y * height;\r\n\t\t//return round(y);\r\n\t\treturn y;\r\n\t};\r\n\r\n\t// should this be added to sequencer publically? -> no, add to song\r\n\t/*\r\n\t\tsequencer.positionToGrid = positionToGrid;\r\n\t\tsequencer.eventToGrid = eventToGrid;\r\n\t\tsequencer.noteToGrid = noteToGrid;\r\n\t*/\r\n\tsequencer.protectedScope.addInitMethod(function () {\r\n\t\tgetPosition = sequencer.protectedScope.getPosition;\r\n\t\tfloor = sequencer.protectedScope.floor;\r\n\t\tround = sequencer.protectedScope.round;\r\n\t\ttypeString = sequencer.protectedScope.typeString;\r\n\t});\r\n}\r\nfunction songUpdate() {\n\n    'use strict';\n\n    var\n        // import\n        getPosition, // -> defined in position.js\n        parseTimeEvents, // -> defined in parse_time_events.js\n        parseEvents, // -> defined in parse_events.js\n        getInstrument, // -> defined in instrument_manager.js\n        scheduledTasks, // -> defined in open_module.js\n\n        update,\n        update2;\n\n\n    update = function (song, updateTimeEvents) {\n\n        if (sequencer.playing === true) {\n            scheduledTasks.updateSong = function () {\n                update2(song, updateTimeEvents);\n            };\n            return;\n        }\n        //console.log('not here while playing');\n        // console.log('update song');\n        update2(song, updateTimeEvents);\n    };\n\n\n    update2 = function (song, updateTimeEvents) {\n        //console.log('update song');\n        //console.time('update song');\n        var\n            i, id1, id2, id3, tmp,\n            track,\n            part,\n            event,\n            note,\n\n            dirtyEvents,\n            dirtyNotes,\n\n            newEvents = [],\n            changedEvents = [],\n            removedEvents = [],\n            recordedEvents = [],\n\n            newNotes = [],\n            changedNotes = [],\n            removedNotes = [],\n\n            newParts = [],\n            changedParts = [],\n            removedParts = [],\n\n            newTracks = [],\n            changedTracks = [],\n            removedTracks = [],\n\n            eventsMidiAudioMetronome = [],\n            eventsMidiTime = [],\n            events = [],\n            midiEvents = [],\n            audioEvents = [],\n            notes = [],\n            parts = [],\n            tracks = [],\n\n            eventsById = {},\n            notesById = {},\n            partsById = {};\n\n\n        if (updateTimeEvents === true) {\n            //console.log('update time events');\n            parseTimeEvents(song);\n        }\n\n\n        for (id1 in song.tracksById) {\n\n            if (song.tracksById.hasOwnProperty(id1)) {\n\n                track = song.tracksById[id1];\n\n                // console.log('song update track', track.needsUpdate);\n\n                if (track.needsUpdate === true) {\n                    track.update();\n                }\n\n\n                for (id2 in track.partsById) {\n                    if (track.partsById.hasOwnProperty(id2)) {\n\n                        part = track.partsById[id2];\n                        // console.log(part.id, part.needsUpdate, part.dirtyEvents);\n\n                        if (part.needsUpdate === true) {\n                            // console.log('song update calls part.update()');\n                            part.update();\n                        }\n\n                        //console.log(part);\n\n                        dirtyEvents = part.dirtyEvents;\n\n                        for (id3 in dirtyEvents) {\n                            if (dirtyEvents.hasOwnProperty(id3)) {\n                                event = dirtyEvents[id3];\n                                switch (event.state) {\n                                    case 'new':\n                                        newEvents.push(event);\n                                        break;\n                                    case 'recorded':\n                                        recordedEvents.push(event);\n                                        break;\n                                    case 'changed':\n                                        changedEvents.push(event);\n                                        break;\n                                    case 'removed':\n                                        removedEvents.push(event);\n                                        delete part.eventsById[id3];\n                                        break;\n                                }\n                            }\n                        }\n\n\n                        dirtyNotes = part.dirtyNotes;\n\n                        for (id3 in dirtyNotes) {\n                            if (dirtyNotes.hasOwnProperty(id3)) {\n                                note = dirtyNotes[id3];\n                                //console.log(note.state);\n                                switch (note.state) {\n                                    case 'new':\n                                        newNotes.push(note);\n                                        break;\n                                    case 'changed':\n                                        changedNotes.push(note);\n                                        break;\n                                    case 'removed':\n                                        removedNotes.push(note);\n                                        delete part.notesById[id3];\n                                        break;\n                                }\n                            }\n                        }\n\n                        part.dirtyEvents = {};\n                        part.dirtyNotes = {};\n                        /*\n                        if(part.state === 'new' && part.track !== track){\n                            part.state = 'removed';\n                        }\n                        console.log(part.state, part.track);\n                        */\n                        if (part.state !== 'removed') {\n                            notes = notes.concat(part.notes);\n                            events = events.concat(part.events);\n                        } else {\n                            removedNotes = removedNotes.concat(part.notes);\n                            removedEvents = removedEvents.concat(part.events);\n                        }\n\n\n                        switch (part.state) {\n                            case 'new':\n                                newParts.push(part);\n                                partsById[part.id] = part;\n                                break;\n                            case 'changed':\n                                //console.log(part.id);\n                                changedParts.push(part);\n                                partsById[part.id] = part;\n                                break;\n                            case 'removed':\n                                removedParts.push(part);\n                                delete track.partsById[part.id];\n                                break;\n                        }\n                    }\n                }\n\n                //events = events.concat(track.events);\n                //notes = notes.concat(track.notes);\n                parts = parts.concat(track.parts);\n\n\n                switch (track.state) {\n                    case 'clean':\n                        track.index = tracks.length;\n                        tracks.push(track);\n                        break;\n                    case 'new':\n                        newTracks.push(track);\n                        track.state = 'clean';\n                        track.index = tracks.length;\n                        tracks.push(track);\n                        break;\n                    case 'changed':\n                        changedTracks.push(track);\n                        track.state = 'clean';\n                        track.index = tracks.length;\n                        tracks.push(track);\n                        break;\n                    case 'removed':\n                        removedTracks.push(track);\n                        delete song.tracksById[track.id];\n                        break;\n                }\n            }\n        }\n\n\n        for (i = removedEvents.length - 1; i >= 0; i--) {\n            event = removedEvents[i];\n            event.state = 'clean';\n        }\n\n        for (i = removedNotes.length - 1; i >= 0; i--) {\n            note = removedNotes[i];\n            note.state = 'clean';\n        }\n\n        for (i = removedParts.length - 1; i >= 0; i--) {\n            part = removedParts[i];\n            part.state = 'clean';\n        }\n\n\n        // calculate the ticks position of the recorded events\n        if (recordedEvents.length > 0) {\n            parseRecordedEvents(song, recordedEvents);\n        }\n\n        events.sort(function (a, b) {\n            return a.sortIndex - b.sortIndex;\n        });\n\n        notes.sort(function (a, b) {\n            return a.ticks - b.ticks;\n        });\n\n        parts.sort(function (a, b) {\n            return a.ticks - b.ticks;\n        });\n\n        for (i = events.length - 1; i >= 0; i--) {\n            event = events[i];\n            eventsById[event.id] = event;\n            if (event.type === 'audio') {\n                audioEvents.push(event);\n            } else {\n                midiEvents.push(event);\n            }\n        }\n\n        for (i = notes.length - 1; i >= 0; i--) {\n            note = notes[i];\n            notesById[note.id] = note;\n        }\n\n\n        if (updateTimeEvents === false) {\n\n            //console.log(newEvents);\n            //console.log(tmp.length, events.length, newEvents.length, changedEvents.length, song.timeEvents.length, song.metronome.events.length);\n\n            tmp = song.timeEvents.concat(newEvents, changedEvents);\n            parseEvents(song, tmp);\n\n            tmp = [].concat(newNotes, changedNotes);\n            parseMidiNotes(song, tmp);\n\n            tmp = [].concat(newParts, changedParts);\n            parseParts(song, tmp);\n        } else {\n            // if time events have changed we need to update everything!\n            tmp = song.timeEvents.concat(events);\n            parseEvents(song, tmp);\n            parseMidiNotes(song, notes);\n            parseParts(song, parts);\n        }\n\n        /*\n                console.log('  Song.update()');\n                console.log('new tracks', newTracks.length);\n                console.log('new parts', newParts.length);\n                console.log('new events', newEvents.length);\n                console.log('changed tracks', changedTracks.length);\n                console.log('changed parts', changedParts.length);\n                console.log('changed events', changedEvents.length);\n                console.log('removed tracks', removedTracks.length);\n                console.log('removed parts', removedParts.length);\n                console.log('removed events', removedEvents.length);\n                console.log('all events', events.length);\n                console.log('all parts', parts.length);\n                console.log('all tracks', tracks.length);\n                console.log('time events', song.timeEvents.length);\n                console.log('--------');\n        */\n        /*\n                if(changedEvents.length > 0){\n                    console.log('changed events', changedEvents.length);\n                    console.log('changed notes', changedNotes.length);\n                }\n        */\n\n\n        checkDuration(song);\n\n\n        // check if we need to generate new metronome events, metronome.update() calls parseMetronomeEvents()\n        if (song.metronome.bars !== song.bars) {\n            //song.metronome.update(song.metronome.bars, song.bars);\n            song.metronome.update();\n        } else if (updateTimeEvents === true) {\n            song.metronome.update();\n        }\n        eventsMidiAudioMetronome = [].concat(midiEvents, audioEvents, song.metronome.events);\n        eventsMidiAudioMetronome.sort(function (a, b) {\n            //return a.sortIndex - b.sortIndex;\n            return a.ticks - b.ticks;\n        });\n\n\n        eventsMidiTime = [].concat(events, song.timeEvents);\n        eventsMidiTime.sort(function (a, b) {\n            return a.ticks - b.ticks;\n            //return a.sortIndex - b.sortIndex;\n        });\n\n        song.eventsMidiAudioMetronome = eventsMidiAudioMetronome; // all midi, audio and metronome events\n        song.eventsMidiTime = eventsMidiTime; // all midi events plus time events\n        song.events = events; // all events excluding tempo and time signature events and metronome ticks\n        song.midiEvents = midiEvents; // all midi events excluding metronome events\n        song.audioEvents = audioEvents;\n        song.notes = notes;\n        song.parts = parts;\n        song.tracks = tracks;\n\n        song.numEvents = events.length;\n        song.numNotes = notes.length;\n        song.numParts = parts.length;\n        song.numTracks = tracks.length;\n\n        song.eventsById = eventsById;\n        song.notesById = notesById;\n        song.partsById = partsById;\n\n        song.newEvents = newEvents;\n        song.changedEvents = changedEvents;\n        song.removedEvents = removedEvents;\n\n        song.newNotes = newNotes;\n        song.changedNotes = changedNotes;\n        song.removedNotes = removedNotes;\n\n        song.newParts = newParts;\n        song.changedParts = changedParts;\n        song.removedParts = removedParts;\n\n\n        // update all dependent objects\n\n        song.playhead.updateSong();\n        song.playheadRecording.updateSong();\n        song.scheduler.updateSong();\n        song.scheduler.reschedule();\n        song.followEvent.updateSong();\n\n        if (song.grid !== undefined) {\n            song.grid.update();\n        }\n\n        if (song.keyEditor !== undefined) {\n            song.keyEditor.updateSong({\n                numBars: song.bars,\n                newEvents: newEvents,\n                changedEvents: changedEvents,\n                removedEvents: removedEvents,\n                newNotes: newNotes,\n                changedNotes: changedNotes,\n                removedNotes: removedNotes,\n                newParts: newParts,\n                changedParts: changedParts,\n                removedParts: removedParts\n            });\n        }\n        //console.timeEnd('update song')\n    };\n\n\n    function checkDuration(song, trim) {\n        var lastEvent = song.lastEventTmp,\n            position, key;\n\n        //console.log('checkDuration', lastEvent.barsAsString,lastEvent.bar,song.lastBar);\n        //console.log(lastEvent);\n        //console.log(song.autoSize);\n\n        if (song.autoSize === false) {\n            // don't allow the song to grow\n            song.lastBar = song.bars;\n        } else if (trim) {\n            // remove bars that don't contain any events(called via song.trim())\n            song.lastBar = lastEvent.bar;\n        } else {\n            // grow if needed\n            song.lastBar = Math.max(song.lastBar, lastEvent.bar);\n        }\n\n        song.bars = parseInt(song.lastBar);\n        position = getPosition(song, ['barsandbeats',\n            song.bars,\n            lastEvent.nominator,\n            lastEvent.numSixteenth,\n            lastEvent.ticksPerSixteenth,\n            true\n        ]);\n\n        //console.log(song.bars, lastEvent.nominator, lastEvent.numSixteenth, lastEvent.ticksPerSixteenth);\n\n        song.durationTicks = position.ticks;\n        song.durationMillis = position.millis;\n        //console.log(song.bars, '->', position.barsAsString, song.durationMillis, song.durationTicks);\n\n        // update song.lastEvent\n        for (key in position) {\n            if (position.hasOwnProperty(key)) {\n                //console.log(key, position[key])\n                song.lastEvent[key] = position[key];\n            }\n        }\n        //console.log(song.name, song.durationTicks, song.durationMillis, song.bars);\n    }\n\n\n    function parseMetronomeEvents(song, events) {\n        //console.log('parseMetronomeEvents', events.length);\n        var tmp = events.concat(song.timeEvents);\n        parseEvents(song, tmp);\n\n        events = events.concat(song.events);\n        events.sort(function (a, b) {\n            return a.sortIndex - b.sortIndex;\n        });\n        //console.log(1,song.allEvents.length);\n        song.eventsMidiAudioMetronome = [].concat(events);\n        //console.log(2,song.allEvents.length);\n        //console.log(song.allEvents);\n\n        // song.playhead.updateSong();\n        // song.scheduler.updateSong();\n        // song.scheduler.reschedule();\n        // song.followEvent.updateSong();\n    }\n\n\n    function parseParts(song, parts) {\n        var i, part;\n\n        //console.log(' → parse parts', parts.length);\n\n        for (i = parts.length - 1; i >= 0; i--) {\n            part = parts[i];\n            //part.update();\n            //part.track.update();\n            part.startPosition = song.getPosition('ticks', part.start.ticks);\n            part.endPosition = song.getPosition('ticks', part.end.ticks);\n            part.start.millis = part.startPosition.millis;\n            part.end.millis = part.endPosition.millis;\n            part.duration.millis = part.end.millis - part.start.millis;\n            part.state = 'clean';\n            //console.log('s', part.start.ticks, 'e', part.end.ticks);\n            //console.log('s', part.startPosition.barsAsString, 'e', part.endPosition.barsAsString);\n        }\n    }\n\n\n    function parseMidiNotes(song, notes) {\n        var i, note;\n\n        //console.log(' → parseMidiNotes', notes.length);\n\n        for (i = notes.length - 1; i >= 0; i--) {\n            note = notes[i];\n            //console.log(note);\n            if (note.endless === true) {\n                note.durationTicks = sequencer.ticks - note.noteOn.ticks;\n                note.durationMillis = sequencer.millis - note.noteOn.millis;\n            } else {\n                note.durationTicks = note.noteOff.ticks - note.noteOn.ticks;\n                note.durationMillis = note.noteOff.millis - note.noteOn.millis;\n            }\n            note.ticks = note.noteOn.ticks;\n            note.millis = note.noteOn.millis;\n            note.number = note.noteOn.noteNumber;\n            note.state = 'clean';\n        }\n    }\n\n\n    function parseRecordedEvents(song, events) {\n        var i, timeData,\n            position, event,\n            time,\n            timestamp = song.recordTimestamp,\n            startMillis = song.recordStartMillis,\n            totalTime = startMillis,\n            maxi = events.length,\n            playhead = song.playheadRecording;\n\n        //if(startMillis < 0){\n        //    playhead.set('millis', 0);\n        //}else{\n        playhead.set('millis', startMillis);\n        //}\n        //console.log(song, events, timestamp);\n        //console.log('parseRecordedEvents', timestamp, startMillis);\n\n        for (i = 0; i < maxi; i++) {\n            event = events[i];\n\n            time = (event.recordMillis - timestamp) + startMillis;\n            position = playhead.update('millis', time - totalTime); // update by supplying the diff in millis\n            totalTime = time;\n\n            timeData = sequencer.getNiceTime(position.millis);\n\n            //console.log(event.ticks, position.ticks);\n            //console.log(event.recordMillis, event.recordMillis - timestamp);\n\n            event.ticks = position.ticks;\n\n            event.bpm = position.bpm;\n            event.factor = position.factor;\n            event.nominator = position.nominator;\n            event.denominator = position.denominator;\n\n            event.ticksPerBar = position.ticksPerBar;\n            event.ticksPerBeat = position.ticksPerBeat;\n            event.ticksPerSixteenth = position.ticksPerSixteenth;\n\n            event.numSixteenth = position.numSixteenth;\n\n            event.millisPerTick = position.millisPerTick;\n            event.secondsPerTick = position.secondsPerTick;\n\n            event.millis = position.millis;\n            event.seconds = position.millis / 1000;\n\n            event.hour = timeData.hour;\n            event.minute = timeData.minute;\n            event.second = timeData.second;\n            event.millisecond = timeData.millisecond;\n            event.timeAsString = timeData.timeAsString;\n            event.timeAsArray = timeData.timeAsArray;\n\n            event.bar = position.bar;\n            event.beat = position.beat;\n            event.sixteenth = position.sixteenth;\n            event.tick = position.tick;\n            event.barsAsString = position.bar + ':' + position.beat + ':' + position.sixteenth + ':' + position.tick;\n            event.barsAsArray = [position.bar, position.beat, position.sixteenth, position.tick];\n\n            event.state = 'clean';\n        }\n\n        song.recordStartMillis = undefined;\n        song.recordTimestamp = undefined;\n    }\n\n\n    // not in use!\n    function sortEvents(events) {\n        var maxi = events.length,\n            i, event, lastTick = -100000,\n            buffer,\n            newOrder = [];\n\n        for (i = 0; i < maxi; i++) {\n            event = events[i];\n            if (buffer === undefined) {\n                buffer = [];\n            }\n            buffer.push(event);\n            if (event.ticks !== lastTick) {\n                if (buffer.length > 1) {\n                    // console.log('unsorted', buffer.length);\n                    // buffer.forEach(function(e){\n                    //     console.log(e.ticks, e.type, e.data1, e.data2);\n                    // });\n\n                    buffer.sort(function (a, b) {\n\n                        // question is: comes a after b\n\n                        if (b.type === 144 && a.type === 128) {\n                            // note off before note on\n                            return false;\n\n\n                        } else if (b.type === 144 && a.type === 176 && a.data1 === 64 && a.data2 === 127) {\n                            // sustain pedal down before note on\n                            return false;\n\n\n                        } else if (b.type === 176 && b.data1 === 64 && b.data2 === 127 && a.type === 128) {\n                            // note off before sustain pedal down\n                            return false;\n\n\n                        } else if (b.type === 128 && a.type === 176 && a.data1 === 64 && a.data2 === 0) {\n                            // sustain pedal up before note off -> for better performance, the note off event doesn't get added to the sustainPedalSamples array\n                            return false;\n\n                        } else if (b.type === 144 && a.type === 176 && a.data1 === 64 && a.data2 === 0) {\n                            // sustain pedal up before note on\n                            return false;\n\n\n                        } else if (a.type === 176 && a.data1 === 64 && a.data2 === 0 && b.type === 176 && b.data1 === 64 && b.data2 === 127) {\n                            // sustain pedal up should come before sustain pedal up\n                            return false;\n\n                        } else {\n                            return true;\n                        }\n                    });\n                    // console.log('sorted');\n                    // buffer.forEach(function(e){\n                    //     console.log(e.ticks, e.type, e.data1, e.data2);\n                    // });\n                    // console.log('---');\n                    newOrder = newOrder.concat(buffer);\n                    buffer = undefined;\n                } else {\n                    newOrder.push(buffer[0]);\n                }\n            }\n            lastTick = event.ticks;\n        }\n    }\n\n\n    sequencer.protectedScope.update = update;\n    sequencer.protectedScope.checkDuration = checkDuration;\n    sequencer.protectedScope.parseMetronomeEvents = parseMetronomeEvents;\n\n    sequencer.protectedScope.addInitMethod(function () {\n        getPosition = sequencer.protectedScope.getPosition;\n        parseEvents = sequencer.protectedScope.parseEvents;\n        parseTimeEvents = sequencer.protectedScope.parseTimeEvents;\n        getInstrument = sequencer.protectedScope.getInstrument;\n        scheduledTasks = sequencer.protectedScope.scheduledTasks;\n    });\n}\n/*\r\n    Events are always added to a Part before they are added to the track, in other words: a Track is a Part container, a Part is an Event container.\r\n\r\n    The events array in a Track contains only references to the Events in the Parts.\r\n\r\n    Tracks and Parts cannot contain tempo or time signature events, however, if you export Parts or Tracks as midi file you can choose to add the tempo track\r\n    of the song to a Track or a Part. If you export a Part to a Track, it will be converted to a Track containing that Part.\r\n\r\n*/\r\n\r\nfunction track() {\r\n\r\n  'use strict';\r\n\r\n  var\r\n    debug = sequencer.debug,\r\n\r\n    slice = Array.prototype.slice,\r\n\r\n    //import\r\n    createPart, // → defined in part.js\r\n    typeString, // → defined in utils.js\r\n    copyName, // → defined in utils.js\r\n    findItem, // → defined in utils.js\r\n    objectForEach, // → defined in utils.js\r\n    checkPosition, // → defined in get_position.js\r\n    createMidiEvent, // → defined in midi_event.js\r\n    createMidiNote, // → defined in midi_note.js\r\n    context, // -> defined in open_module.js\r\n    createInstrument, // defined in instrument.js\r\n    createAudioTrack, // defined in audio_track.js\r\n    createPanner, // defined in channel_effects.js\r\n    addMidiEventListener, // defined in midi_system.js\r\n    removeMidiEventListener, // defined in midi_system.js\r\n    encodeAudio, // defined in audio_encoder.js\r\n    handleMidiMessageTrack, // defined in midi_system.js\r\n\r\n\r\n    findEvent, // → defined in find_event.js\r\n    findNote, // → defined in find_event.js\r\n    getStats, // → defined in event_statistics.js\r\n\r\n    trackId = 0,\r\n\r\n    //public\r\n    Track;\r\n\r\n\r\n  Track = function (name, type, song) {\r\n    this.className = 'Track';\r\n    this.id = 'T' + trackId++ + '' + new Date().getTime();\r\n    //console.log('creating track', this.id, name);\r\n    this.type = type || 'instrument';\r\n    this.name = name || this.id;\r\n    this.song = song;\r\n    this.instrumentName = '';\r\n    this.events = [];\r\n    this.eventsById = {};\r\n    this.notes = [];\r\n    this.notesById = {};\r\n    this.parts = [];\r\n    this.partsById = {};\r\n    this.numParts = 0;\r\n    this.numEvents = 0;\r\n    this.needsUpdate = false;\r\n    this.audioLatency = 0;\r\n\r\n    //@TODO: create a plugin that gives a pulsating volume effect\r\n    //this.volumeChangeMethod = 'equal_power'; // 'direct', equal_power' or 'linear'\r\n\r\n    /* routing */\r\n    this.effects = {};\r\n    this.numEffects = 0;\r\n    this.volume = 1;\r\n\r\n    this.input = context.createGainNode();\r\n    this.input.gain.value = 1;\r\n\r\n    this.output = context.createGainNode();\r\n    this.output.gain.value = this.volume;\r\n\r\n    ///*\r\n    this.panner = createPanner();\r\n    // input to panner\r\n    this.input.connect(this.panner.node);\r\n    // panner to output, and output to song.gain as soon as the track gets added to a song\r\n    this.panner.node.connect(this.output);\r\n    //*/\r\n\r\n    /*\r\n            this.panner = context.createPanner();\r\n            this.panner.panningModel = 'equalpower';\r\n            this.panner.setPosition(0, 0, 0);\r\n\r\n            this.input.connect(this.panner);\r\n            this.panner.connect(this.output);\r\n    */\r\n\r\n    this.lastEffect = this.input;\r\n\r\n    this.midiInputs = {};\r\n    this.midiOutputs = {};\r\n    this.routeToMidiOut = false;\r\n    this.midiEventListeners = {};\r\n    this.monitor = false;\r\n    this.recordEnabled = false;\r\n\r\n    this.mute = false;\r\n    this.solo = false;\r\n    this.channel = 'any'; // note that this is the output channel, i.e. the events of this track are routed to the set channel\r\n    this.quantizeValue = 0;\r\n    this.fixedLengthValue = 0;\r\n    this.autoQuantize = false;\r\n    this.retrospectiveRecording = [];\r\n    this.recordingNotes = {};\r\n    this.enableRetrospectiveRecording = false;\r\n    if (type !== 'metronome') {\r\n      //console.log(this.instrumentName, this.id);\r\n      this.setInstrument(this.instrumentName);\r\n    }\r\n    //this.audio = createAudioTrack(this);\r\n  };\r\n\r\n\r\n  function getPart(data, track) {\r\n    var part = false;\r\n    if (!data) {\r\n      part = false;\r\n    } else if (data.className === 'Part') {\r\n      part = data;\r\n    } else if (typeString(data) === 'string') {\r\n      part = track.partsById[data];\r\n    } else if (isNaN(data) === false) {\r\n      part = track.parts[data];\r\n    }\r\n    return part;\r\n  }\r\n\r\n\r\n  function getEvent(data, track) {\r\n    var event = false;\r\n    if (!data) {\r\n      event = false;\r\n    } else if (data.className === 'MidiEvent' || data.className === 'AudioEvent') {\r\n      event = data;\r\n    } else if (typeString(data) === 'array' && data.length === 4) {\r\n      // new event as array\r\n      event = createMidiEvent(data);\r\n    } else if (typeString(data) === 'string') {\r\n      // get event by id\r\n      event = track.eventsById[data];\r\n    } else if (isNaN(data) === false) {\r\n      // get event by index\r\n      event = track.events[data];\r\n    }\r\n    return event;\r\n  }\r\n\r\n\r\n  function getPartsAndConfig(args, track) {\r\n    args = Array.prototype.slice.call(args);\r\n    var\r\n      j = 0,\r\n      i = 0,\r\n      maxi,\r\n      part,\r\n      arg,\r\n      arg0 = args[0],\r\n      parts = [],\r\n      config = [];\r\n\r\n    //console.log(args, track);\r\n    //console.log(args);\r\n    //console.log(arg0);\r\n\r\n    if (typeString(arg0) === 'array') {\r\n\r\n      for (i = arg0.length - 1; i >= 0; i--) {\r\n        arg = arg0[i];\r\n        part = getPart(arg, track);\r\n        if (part) {\r\n          parts.push(part);\r\n        }\r\n      }\r\n      j = parts.length === 0 ? 0 : 1;\r\n    }\r\n\r\n    maxi = args.length;\r\n    for (i = j; i < maxi; i++) {\r\n      arg = args[i];\r\n      part = getPart(arg, track);\r\n      if (part) {\r\n        parts.push(part);\r\n      } else {\r\n        config.push(arg);\r\n      }\r\n    }\r\n\r\n    if (parts.length === 0) {\r\n      //console.error('Please provide one or more parts, or an array of parts');\r\n      console.warn('no parts added');\r\n      return false;\r\n    }\r\n    /*\r\n            if(config.length === 1 && typeString(config[0]) === 'array'){\r\n                config = config[0];\r\n            }\r\n    */\r\n    return {\r\n      parts: parts,\r\n      config: config\r\n    };\r\n  }\r\n\r\n\r\n  function getEventsAndConfig(args, track) {\r\n    args = Array.prototype.slice.call(args);\r\n\r\n    var\r\n      j = 0,\r\n      i = 0,\r\n      maxi,\r\n      event,\r\n      arg,\r\n      arg0 = args[0],\r\n      events = [],\r\n      config = [];\r\n\r\n\r\n    if (typeString(arg0) === 'array') {\r\n\r\n      for (i = arg0.length - 1; i >= 0; i--) {\r\n        arg = arg0[i];\r\n        //@TODO: this can be dangerous!\r\n        //console.log(arg);\r\n        event = getEvent(arg, track);\r\n        //console.log(event);\r\n        if (event) {\r\n          events.push(event);\r\n        }\r\n      }\r\n      //j = events.length === 0 ? 0 : 1;\r\n      j = 1;\r\n    }\r\n\r\n    maxi = args.length;\r\n    for (i = j; i < maxi; i++) {\r\n      arg = args[i];\r\n      event = getEvent(arg, track);\r\n      if (event) {\r\n        events.push(event);\r\n      } else {\r\n        config.push(arg);\r\n      }\r\n    }\r\n\r\n    if (events.length === 0) {\r\n      if (debug >= 2) {\r\n        console.info('Please provide one or more events, or an array of events');\r\n      }\r\n    }\r\n\r\n    if (config.length === 1 && typeString(config[0]) === 'array') {\r\n      config = config[0];\r\n    }\r\n\r\n    //console.log(events);\r\n    //console.log(config);\r\n\r\n    return {\r\n      events: events,\r\n      config: config\r\n    };\r\n  }\r\n\r\n\r\n  function getTicksAtPosition(position, song) {\r\n    var type, ticks;\r\n\r\n    position = checkPosition(position);\r\n\r\n    if (position === false) {\r\n      //console.warn('wrong position data');\r\n      return false;\r\n    }\r\n\r\n    type = position[0];\r\n\r\n    if (song === undefined && type !== 'ticks') {\r\n      console.error('Track has not been added to a song yet, you can only use tick values');\r\n      return false;\r\n    }\r\n\r\n    switch (type) {\r\n      case 'ticks':\r\n        ticks = position[1];\r\n        break;\r\n      case 'millis':\r\n        ticks = song.millisToTicks(position[1]);\r\n        break;\r\n      case 'barsbeats':\r\n      case 'barsandbeats':\r\n      case 'time':\r\n        position = song.getPosition(position, 'ticks');\r\n        ticks = position.ticks;\r\n        break;\r\n    }\r\n    //return parseInt(ticks, 10);\r\n    return ticks;\r\n  }\r\n\r\n\r\n  function addParts(args, track) {\r\n    if (args === false) {\r\n      return;\r\n    }\r\n    var i, j, e, part, eventsById, ticks, move,\r\n      song = track.song,\r\n      parts = args.parts,\r\n      maxi = parts.length,\r\n      partsById = track.partsById;\r\n\r\n\r\n    //for(i = parts.length - 1; i >= 0; i--){\r\n    for (i = 0; i < maxi; i++) {\r\n      part = getPart(parts[i]);\r\n\r\n      if (part === false) {\r\n        console.error(part, 'is not a part');\r\n        continue;\r\n      }\r\n      if (part.track !== undefined) {\r\n        //console.warn('this part has already been added to track', part.track.id, ', adding a copy');\r\n        part = part.copy();\r\n      }\r\n      if (part.hasAudioEvents && track.audio === undefined) {\r\n        track.audio = createAudioTrack(track);\r\n      }\r\n\r\n      //console.log(part.id, part.trackId);\r\n\r\n      part.song = song;\r\n      part.track = track;\r\n      part.trackId = track.id;\r\n\r\n      eventsById = part.eventsById;\r\n      ticks = part.ticks;\r\n      move = ticks !== 0;\r\n\r\n      //console.log(part.id, move, eventsById);\r\n\r\n      for (j in eventsById) {\r\n        if (eventsById.hasOwnProperty(j)) {\r\n          e = eventsById[j];\r\n          //console.log(e, track, track.id);\r\n          e.track = track;\r\n          e.channel = track.channel;\r\n          e.trackId = track.id;\r\n          if (move) {\r\n            e.ticks += ticks;\r\n          }\r\n          e.state = 'new';\r\n        }\r\n      }\r\n\r\n      part.state = 'new';\r\n\r\n      //if(move){\r\n      part.needsUpdate = true;\r\n      //}\r\n\r\n      partsById[part.id] = part;\r\n      // console.log('partsById', partsById);\r\n    }\r\n\r\n    track.needsUpdate = true;\r\n  }\r\n\r\n\r\n  function moveParts(args, track) {\r\n    if (args === false) {\r\n      return;\r\n    }\r\n    var newTicks, part,\r\n      parts = args.parts,\r\n      ticks = args.config[0],\r\n      diffTicks = ticks, i;\r\n\r\n    //console.log('moveParts',parts);\r\n\r\n    for (i = parts.length - 1; i >= 0; i--) {\r\n      part = parts[i];\r\n      newTicks = part.ticks + ticks;\r\n\r\n      //console.log(newTicks, ticks, part.ticks);\r\n\r\n      if (newTicks < 0) {\r\n        newTicks = 0;\r\n        diffTicks = -part.ticks;\r\n      }\r\n\r\n      part.ticks = newTicks;\r\n      //console.log(part.events, diffTicks);\r\n      part.moveEvents(part.events, diffTicks);\r\n      if (part.state !== 'new') {\r\n        part.state = 'changed';\r\n      }\r\n      //console.log('Track.moveParts()', part.state);\r\n    }\r\n    track.needsUpdate = true;\r\n  }\r\n\r\n\r\n  function movePartsTo(args, track) {\r\n    if (args === false) {\r\n      return;\r\n    }\r\n\r\n    var i, part, ticks, diffTicks,\r\n      song = track.song,\r\n      parts = args.parts,\r\n      positions = args.config;\r\n\r\n    for (i = parts.length - 1; i >= 0; i--) {\r\n      part = parts[i];\r\n      ticks = getTicksAtPosition(positions[i], song);\r\n      // /console.log(ticks, positions[i]);\r\n\r\n      if (ticks === false) {\r\n        console.warn('wrong position data, skipping part', part.id);\r\n        continue;\r\n      }\r\n\r\n      diffTicks = ticks - part.ticks;\r\n      //console.log(part.ticks, ticks, diffTicks);\r\n      part.ticks = ticks;\r\n      part.moveAllEvents(diffTicks);\r\n      //console.log('Track.movePartsTo()', part.state);\r\n      if (part.state !== 'new') {\r\n        part.state = 'changed';\r\n      }\r\n    }\r\n\r\n    track.needsUpdate = true;\r\n  }\r\n\r\n\r\n  function removeParts(args, track) {\r\n    if (args === false) {\r\n      return [];\r\n    }\r\n    var i, part,\r\n      removed = [],\r\n      tobeRemoved = args.parts;\r\n\r\n    if (tobeRemoved === undefined) {\r\n      console.log('weird situation, check this when it happens');\r\n      return [];\r\n    }\r\n\r\n    for (i = tobeRemoved.length - 1; i >= 0; i--) {\r\n      part = tobeRemoved[i];\r\n      //console.log('removing part', part, 'from track', track.id);\r\n      if (part.track !== undefined && part.track !== track) {\r\n        console.warn('can\\'t remove: this part belongs to track', part.track.id);\r\n        continue;\r\n      }\r\n\r\n      removed.push(part);\r\n      part.state = 'removed';\r\n      part.reset(true, true);\r\n    }\r\n    track.needsUpdate = true;\r\n    return removed;\r\n  }\r\n\r\n\r\n  function removeEvents(args, track) {\r\n    if (args === false) {\r\n      return;\r\n    }\r\n\r\n    var i, part, partId, event, eventsPerPart = {},\r\n      removed = [],\r\n      tobeRemoved = args;//.events;\r\n\r\n\r\n    for (i = tobeRemoved.length - 1; i >= 0; i--) {\r\n      event = tobeRemoved[i];\r\n      if (event.track !== undefined && event.track !== null && event.track !== track) {\r\n        console.warn('can\\'t remove: this event belongs to track', event.track.id);\r\n        continue;\r\n      }\r\n      partId = event.partId;\r\n      if (eventsPerPart[partId] === undefined) {\r\n        eventsPerPart[partId] = [];\r\n      }\r\n      eventsPerPart[partId].push(event);\r\n      removed.push(event);\r\n    }\r\n\r\n    for (partId in eventsPerPart) {\r\n      if (eventsPerPart.hasOwnProperty(partId)) {\r\n        part = track.partsById[partId];\r\n        part.removeEvents(eventsPerPart[partId]);\r\n      }\r\n    }\r\n\r\n    track.needsUpdate = true;\r\n    return removed;\r\n  }\r\n\r\n\r\n  /*\r\n      getInput = function(){\r\n          var args = Array.prototype.slice.call(arguments),\r\n              loop, arg,\r\n              type, events = [];\r\n\r\n          loop = function(data, i, maxi){\r\n              var midiData;\r\n              for(i = 0; i < maxi; i++){\r\n                  arg = data[i];\r\n                  type = typeString(arg);\r\n                  if(arg === undefined){\r\n                      continue;\r\n                  }else if(type === 'midimessageevent'){\r\n                      midiData = arg.data;\r\n                      events.push(createMidiEvent(0, midiData[0], midiData[1], midiData[2]));\r\n                  }else if(arg.className === 'MidiEvent'){\r\n                      events.push(arg);\r\n                  }else if(type === 'array'){\r\n                      loop(arg, 0, arg.length);\r\n                  }\r\n              }\r\n          };\r\n\r\n          loop(args, 0, args.length);\r\n          return events;\r\n      };\r\n  */\r\n\r\n  Track.prototype.addPart = Track.prototype.addParts = function () {//newParts\r\n    //console.log('addPart',arguments);\r\n    var args = getPartsAndConfig(arguments, this);\r\n    addParts(args, this);\r\n  };\r\n\r\n\r\n  //addPartsAt(part1,part2,'ticks',480,1920); -> no\r\n  //addPartsAt([part1,part2],'ticks',[480,1920]); -> no\r\n  //addPartsAt([part1,part2],['ticks',480,1920]); -> no\r\n\r\n  //addPartsAt([part1, part2], [['ticks',480], ['ticks',1920]]); -> yes\r\n  //addPartsAt(part1, part2, ['ticks',480], ['ticks',1920]); -> yes\r\n  //addPartsAt(part1, part2, [['ticks',480], ['ticks',1920]]); -> yes\r\n  //addPartsAt([part1, part2], ['ticks',480], ['ticks',1920]); -> yes\r\n\r\n  Track.prototype.addPartAt = Track.prototype.addPartsAt = function () {\r\n    var args = getPartsAndConfig(arguments, this),\r\n      config,\r\n      parts,\r\n      i, part, ticks;\r\n\r\n    if (args === false) {\r\n      return;\r\n    }\r\n\r\n    parts = args.parts;\r\n    config = args.config;\r\n\r\n    if (config === undefined) {\r\n      console.error('please provide position data');\r\n      return false;\r\n    }\r\n\r\n    //console.log('addPartsAt', args.parts, args.config);\r\n\r\n    for (i = parts.length - 1; i >= 0; i--) {\r\n      part = parts[i];\r\n      if (config[0] === 'ticks') {\r\n        ticks = config[1];\r\n      } else {\r\n        ticks = getTicksAtPosition(config[i], this.song);\r\n      }\r\n      //console.log('addPartsAt',this.id, part.track, part.id, ticks, config[i]);\r\n      //console.log(part.ticks, ticks);\r\n      if (ticks === false) {\r\n        continue;\r\n      }\r\n      part.ticks += ticks;\r\n    }\r\n\r\n    addParts(args, this);\r\n  };\r\n\r\n  /*\r\n      Track.prototype.addPartAt = function(part, position){\r\n          var ticks = getTicksAtPosition(position);\r\n          part = getPart(part, this);\r\n\r\n          if(ticks === false){\r\n              console.error('please provide a valid position');\r\n              return false;\r\n          }\r\n\r\n          if(part === false){\r\n              console.error('please provide a valid part');\r\n              return false;\r\n          }\r\n\r\n          part.ticks += ticks;\r\n          //console.log(ticks);\r\n          addParts({parts:[part], config:[]}, this);\r\n      };\r\n  */\r\n\r\n  Track.prototype.movePart = Track.prototype.moveParts = function () {//parts, ticks\r\n    var args = getPartsAndConfig(arguments, this);\r\n    moveParts(args, this);\r\n  };\r\n\r\n\r\n  Track.prototype.movePartTo = Track.prototype.movePartsTo = function () {//selectedParts, position\r\n    var args = getPartsAndConfig(arguments, this);\r\n    //console.log('movePartTo', args);\r\n    movePartsTo(args, this);\r\n  };\r\n\r\n\r\n  Track.prototype.moveAllParts = function (ticks) {\r\n    this.moveParts({ parts: this.parts, config: [ticks] });\r\n  };\r\n\r\n\r\n  Track.prototype.copyPart = Track.prototype.copyParts = function () {\r\n    var args = getPartsAndConfig(arguments, this),\r\n      selectedParts,\r\n      copiedParts = [];\r\n\r\n    if (args === false) {\r\n      return;\r\n    }\r\n\r\n    if (selectedParts.length === 0) {\r\n      console.error('no parts');\r\n      return;\r\n    }\r\n    selectedParts = args.parts;\r\n\r\n    selectedParts.forEach(function (part) {\r\n      copiedParts.push(part.copy());\r\n    });\r\n\r\n    return copiedParts.length === 1 ? copiedParts[0] : copiedParts;\r\n  };\r\n\r\n\r\n  Track.prototype.removePart = function () {\r\n    var args = getPartsAndConfig(arguments, this),\r\n      removed = removeParts(args, this);\r\n    return removed.length === 1 ? removed[0] : removed;\r\n  };\r\n\r\n\r\n  Track.prototype.removeParts = function () {\r\n    var args = getPartsAndConfig(arguments, this);\r\n    return removeParts(args, this);\r\n  };\r\n\r\n\r\n  Track.prototype.getPart = function (arg) {\r\n    return getPart(arg);\r\n  };\r\n\r\n\r\n  Track.prototype.getParts = function () {\r\n    var args = Array.prototype.slice.call(arguments),\r\n      arg,\r\n      result = [],\r\n      loop;\r\n\r\n    loop = function (data, i) {\r\n      arg = data[i];\r\n      if (typeString(arg) === 'array') {\r\n        loop(arg, 0);\r\n      } else {\r\n        result.push(getPart(arg));\r\n      }\r\n    };\r\n\r\n    loop(args, 0);\r\n    return result;\r\n  };\r\n\r\n\r\n  Track.prototype.getPartAt = Track.prototype.getPartsAt = function (position) {\r\n    var ticks = getTicksAtPosition(position, this.song),\r\n      parts = this.parts,\r\n      selectedParts = [];\r\n\r\n    if (ticks === false) {\r\n      console.error('please provide position as array, for instance: [\\'barsandbeats\\',5,1,2,0]');\r\n      return;\r\n    }\r\n\r\n    parts.forEach(function (part) {\r\n      if (part.ticks === ticks) {\r\n        selectedParts.push(part);\r\n      }\r\n    });\r\n\r\n    return selectedParts;\r\n  };\r\n\r\n\r\n  Track.prototype.getPartFromTo = Track.prototype.getPartsFromTo = function (from, to) {\r\n    var parts = this.parts,\r\n      selectedParts = [],\r\n      fromTicks = getTicksAtPosition(from, this.song),\r\n      toTicks = getTicksAtPosition(to, this.song);\r\n\r\n    if (fromTicks === false) {\r\n      console.error('invalid position data for from position');\r\n      return;\r\n    }\r\n\r\n    if (toTicks === false) {\r\n      console.error('invalid position data for from position');\r\n      return;\r\n    }\r\n\r\n    parts.forEach(function (part) {\r\n      if (fromTicks >= part.start.ticks && fromTicks <= part.end.ticks || toTicks >= part.start.ticks && toTicks <= part.end.ticks) {\r\n        selectedParts.push(part);\r\n      }\r\n    });\r\n\r\n    return selectedParts;\r\n  };\r\n\r\n\r\n  Track.prototype.getPartBetween = Track.prototype.getPartBetween = function (from, to) {\r\n    var parts = this.parts,\r\n      selectedParts = [],\r\n      fromTicks = getTicksAtPosition(from, this.song),\r\n      toTicks = getTicksAtPosition(toTicks, this.song);\r\n\r\n    if (fromTicks === false || toTicks === false) {\r\n      console.error('please provide position as array, for instance: [\\'barsandbeats\\',5,1,2,0]');\r\n      return;\r\n    }\r\n\r\n    parts.forEach(function (part) {\r\n      if (part.start.ticks >= fromTicks && part.end.ticks <= toTicks) {\r\n        selectedParts.push(part);\r\n      }\r\n    });\r\n\r\n    return selectedParts;\r\n  };\r\n\r\n\r\n  Track.prototype.copy = function () {\r\n    var track = new Track(copyName(this.name)),\r\n      part, i, effect,\r\n      parts = this.parts,\r\n      copiedParts = [];\r\n\r\n    track.song = null;\r\n    track.instrumentId = this.instrumentId;\r\n    track.numEffects = this.numEffects;\r\n    if (this.numEffects > 0) {\r\n      track.effects = {};\r\n      for (i in this.effects) {\r\n        if (this.effects.hasOwnProperty(i)) {\r\n          effect = this.effects[i];\r\n          track.effects[effect.id] = effect.copy();\r\n        }\r\n      }\r\n    }\r\n\r\n    for (i = parts.length - 1; i >= 0; i--) {\r\n      part = parts[i];\r\n      copiedParts.push(part.copy());\r\n    }\r\n    //console.log(parts.length);\r\n    track.addParts(copiedParts);\r\n    return track;\r\n  };\r\n\r\n\r\n  Track.prototype.removeEvent = Track.prototype.removeEvents = function () {//events\r\n    var args = getEventsAndConfig(arguments, this);\r\n    removeEvents(args.events, this);\r\n  };\r\n\r\n\r\n  Track.prototype.removeEventsFromTo = function (from, to) {\r\n    console.warn('removeEventsFromTo() is temporarily disabled');\r\n    //removeEventsFromTo(from, to, this);\r\n  };\r\n\r\n\r\n  Track.prototype.removeEventAt = Track.prototype.removeEventsAt = function (position) {\r\n    console.warn('removeEventAt() is temporarily disabled');\r\n    //removeEventsAt(position, this);\r\n  };\r\n\r\n\r\n  Track.prototype.removeAllEvents = function () {\r\n    removeEvents(this.events, this);\r\n  };\r\n\r\n\r\n  Track.prototype.transposePart = function (part, semi) {\r\n    var stats = part.getStats('noteNumber all'),\r\n      min = 0, max = 127, semi2;\r\n    //console.log('transposePart', semi);\r\n    if (this.song) {\r\n      min = this.song.lowestNote;\r\n      max = this.song.highestNote;\r\n    }\r\n    //console.log(stats.min, min, stats.max, max);\r\n    if (stats.min + semi < min) {\r\n      semi2 = min - stats.min;\r\n      return;\r\n    } else if (stats.max + semi > max) {\r\n      semi2 = max = stats.max;\r\n      return;\r\n    }\r\n    //console.log(semi, semi2);\r\n    part.transposeAllEvents(semi);\r\n  };\r\n\r\n  // Track.prototype.addEvents = function(){\r\n  //     var part = sequencer.createPart();\r\n  //     part.addEvents(arguments);\r\n  //     this.addPart(part);\r\n  // };\r\n\r\n  // move events\r\n  /*\r\n      Track.prototype.moveEvent = Track.prototype.moveEvents = function(){//events, ticks\r\n          var args = getEventsAndConfig(arguments);\r\n          moveEvents(args.config[0], args.events, this);\r\n      };\r\n\r\n\r\n      Track.prototype.moveEventTo = Track.prototype.moveEventsTo = function(){//events, position\r\n          var args = getEventsAndConfig(arguments);\r\n          moveEventsTo(args.config[0], args.events, this);\r\n      };\r\n\r\n\r\n      Track.prototype.moveAllEvents = function(ticks){\r\n          moveEvents(ticks, this.events, this);\r\n      };\r\n\r\n\r\n      Track.prototype.moveAllEventsTo = function(position){\r\n          moveEventsTo(position, this.events, this);\r\n      };\r\n\r\n\r\n      // copy events\r\n\r\n      Track.prototype.copyEvent = Track.prototype.copyEvents = function(){//events\r\n          var args = getEventsAndConfig(arguments);\r\n          return copyEvents(args.events);\r\n      };\r\n\r\n\r\n      Track.prototype.copyAllEvents = function(){\r\n          return copyEvents(this.events);\r\n      };\r\n\r\n\r\n      Track.prototype.copyEventTo = Track.prototype.copyEventsTo = function(){//events, position\r\n          var args = getEventsAndConfig(arguments);\r\n          copyEventsTo(args.config[0], args.events, this);\r\n      };\r\n\r\n\r\n      Track.prototype.copyAllEventsTo = function(position){\r\n          copyEventsTo(position, this.events, this);\r\n      };\r\n\r\n\r\n      // repeat events\r\n\r\n      Track.prototype.repeatEvent = Track.prototype.repeatEvents = function(){//events, config\r\n          var args = getEventsAndConfig(arguments);\r\n          repeatEvents(args.config[0], args.events, this);\r\n      };\r\n\r\n\r\n      // transpose events\r\n\r\n      Track.prototype.transposeEvent = Track.prototype.transposeEvents = function(){//events, semi\r\n          var args = getEventsAndConfig(arguments);\r\n          transposeEvents(args.config[0], args.events);\r\n      };\r\n\r\n\r\n      Track.prototype.transpose = Track.prototype.transposeAllEvents = function(semi){\r\n          transposeEvents(semi, this.events);\r\n      };\r\n  */\r\n\r\n  Track.prototype.reset = function () {\r\n    var id, part;\r\n    this.song = null;\r\n    // fixing issue #5\r\n    if (this.audio) {\r\n      this.audio.setSong(null);\r\n    }\r\n    for (id in this.partsById) {\r\n      if (this.partsById.hasOwnProperty(id)) {\r\n        part = this.partsById[id];\r\n        // don't reset from track, reset from song only\r\n        part.reset(false, true);\r\n        //part.state = 'removed';\r\n      }\r\n    }\r\n    this.needsUpdate = true;\r\n  };\r\n\r\n\r\n  // find event utils\r\n\r\n  Track.prototype.findEvent = function (pattern) {\r\n    return findEvent(this, pattern);\r\n  };\r\n\r\n\r\n  Track.prototype.findNote = function (pattern) {\r\n    return findNote(this, pattern);\r\n  };\r\n\r\n\r\n  Track.prototype.getStats = function (pattern) {\r\n    return getStats(this, pattern);\r\n  };\r\n\r\n\r\n  Track.prototype.update = function () {\r\n    //console.log('track update');\r\n    //@TODO: do we need events and notes in a track?\r\n\r\n    this.parts = [];\r\n    this.notes = [];\r\n    this.events = [];\r\n\r\n    var i, id, part, event, events, note;\r\n    for (id in this.partsById) {\r\n      if (this.partsById.hasOwnProperty(id)) {\r\n        part = this.partsById[id];\r\n\r\n        if (part.needsUpdate === true) {\r\n          //console.log(part);\r\n          part.update();\r\n        }\r\n\r\n        //console.log(part.events.length, part.keepWhenEmpty);\r\n\r\n        if (part.events.length === 0 && part.keepWhenEmpty === false) {\r\n          this.removePart(part);\r\n        }\r\n\r\n        if (part.state === 'new' && this.song !== undefined) {\r\n          events = part.events;\r\n          for (i = events.length - 1; i >= 0; i--) {\r\n            event = events[i];\r\n            event.song = this.song;\r\n          }\r\n        }\r\n\r\n        if (part.state !== 'removed') {\r\n          this.parts.push(part);\r\n          this.notes = this.notes.concat(part.notes);\r\n          this.events = this.events.concat(part.events);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.parts.sort(function (a, b) {\r\n      return a.ticks - b.ticks;\r\n    });\r\n\r\n    this.notes.sort(function (a, b) {\r\n      return a.ticks - b.ticks;\r\n    });\r\n\r\n    this.events.sort(function (a, b) {\r\n      return a.sortIndex - b.sortIndex;\r\n    });\r\n\r\n\r\n    this.numEvents = this.events.length;\r\n    this.numNotes = this.notes.length;\r\n    this.numParts = this.parts.length;\r\n\r\n    for (i = this.numEvents - 1; i >= 0; i--) {\r\n      event = this.events[i];\r\n      this.eventsById[event.id] = event;\r\n    }\r\n\r\n    for (i = this.numNotes - 1; i >= 0; i--) {\r\n      note = this.notes[i];\r\n      this.notesById[note.id] = note;\r\n    }\r\n\r\n    this.needsUpdate = false;\r\n  };\r\n\r\n\r\n  Track.prototype.getIndex = function () {\r\n    var index = -1,\r\n      tracks = this.song.tracks,\r\n      numTracks = tracks.length,\r\n      track, i;\r\n\r\n    if (numTracks > 0) {\r\n\r\n      for (i = 0; i < numTracks; i++) {\r\n        track = tracks[i];\r\n        if (track.id === this.id) {\r\n          index = i;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return index;\r\n  };\r\n\r\n\r\n  /*\r\n\r\n      Track:\r\n       input\r\n       panner\r\n       output\r\n\r\n\r\n       input\r\n       fx\r\n       panner\r\n       output\r\n\r\n\r\n       input\r\n       fx\r\n       fx2\r\n       panner\r\n       output\r\n\r\n  */\r\n\r\n  Track.prototype.addEffect = function (effect, position) {\r\n    if (!effect) {\r\n      return;\r\n    }\r\n    // //effect.setInput(this.input);\r\n    /*\r\n            //this.input.connect(effect.node);\r\n            this.input.disconnect(0);\r\n            try{\r\n                this.input.disconnect(1);\r\n            }catch(e){\r\n                console.log(e);\r\n            }\r\n            effect.setInput(this.input);\r\n            effect.node.connect(this.panner.node);\r\n\r\n    //CONNNECT\r\n    return;\r\n    */\r\n\r\n    //console.log(effect);\r\n\r\n    this.effects[effect.id] = effect;\r\n    this.numEffects++;\r\n\r\n    if (this.lastEffect !== undefined) {\r\n      // disconnect output from panner\r\n      this.lastEffect.disconnect(0);\r\n      // try{\r\n      //     this.input.disconnect(1);\r\n      // }catch(e){\r\n      //     console.log(e);\r\n      // }\r\n      // connect output to input of new effect\r\n      effect.setInput(this.lastEffect);\r\n    }\r\n    // connect new effect to panner\r\n    effect.output.connect(this.panner.node);\r\n\r\n    // remember the last effect in case we want to add another effect\r\n    this.lastEffect = effect.output;\r\n\r\n\r\n    /*\r\n            if(position !== undefined && isNaN(position) === false){\r\n                this.setEffectPosition(position);\r\n            }else{\r\n                effect.position = this.numEffects;\r\n            }\r\n            this.numEffects++;\r\n    */\r\n  };\r\n\r\n\r\n  Track.prototype.removeEffect = function (effect) {\r\n    if (effect === false) {\r\n      return;\r\n    }\r\n    delete this.effects[effect.id];\r\n    this.numEffects--;\r\n  };\r\n\r\n\r\n  Track.prototype.setEffectPosition = function (effect, position) {\r\n    var i, fx, maxi = this.numEffects - 1;\r\n\r\n    if (position < 0 || position > maxi) {\r\n      return;\r\n    }\r\n\r\n    effect.position = position;\r\n    for (i = 0; i < maxi - 1; i++) {\r\n      fx = this.effects[i];\r\n      if (fx.position >= position && fx !== effect) {\r\n        fx.position += 1;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.setSolo = function (flag) {\r\n    if (flag === undefined) {\r\n      flag = !this.solo;\r\n    }\r\n    this.mute = false;\r\n    this.solo = flag;\r\n    if (this.song) {\r\n      this.song.setTrackSolo(this, flag);\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.setPartSolo = function (soloPart, flag) {\r\n    var i, part;\r\n    for (i = this.numParts - 1; i >= 0; i--) {\r\n      part = this.parts[i];\r\n      if (flag === true) {\r\n        part.mute = part === soloPart ? !flag : flag;\r\n      } else if (flag === false) {\r\n        part.mute = false;\r\n      }\r\n      part.solo = part === soloPart ? flag : false;\r\n      //console.log(soloPart.id, soloPart.mute, part.id, part.mute);\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.setVolume = function (value) {\r\n    if (isNaN(value)) {\r\n      if (sequencer.debug >= 1) {\r\n        console.error('please pass a number');\r\n      }\r\n    } else if (value < 0 || value > 1) {\r\n      if (sequencer.debug >= 1) {\r\n        console.error('please pass a float between 0 and 1');\r\n      }\r\n    } else {\r\n      this.volume = value;\r\n      // this.output.gain.value = this.volume; //-> this doesn't work which is weird\r\n      this.input.gain.value = this.volume; // this does work\r\n      // console.log(this.volume);\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.getVolume = function () {\r\n    return this.volume;\r\n  };\r\n\r\n  Track.prototype.setPanning = function (value) {\r\n    this.panner.setPosition(value);\r\n  };\r\n\r\n\r\n  Track.prototype.connect = function (node) {\r\n    //this.panner.node.connect(node);\r\n    this.output.connect(node);\r\n  };\r\n\r\n\r\n  Track.prototype.disconnect = function (node) {\r\n    //this.panner.node.disconnect(node);\r\n    this.output.disconnect(0);\r\n  };\r\n\r\n\r\n  function getDefaultInstrumentConfig(track) {\r\n    var config;\r\n    if (track.song !== undefined && track.song.defaultInstrument !== undefined) {\r\n      config = findItem(track.song.defaultInstrument, sequencer.storage.instruments);\r\n      //console.log('default instrument song', track.song.defaultInstrument);\r\n    }\r\n    if (config === false || config === undefined) {\r\n      config = findItem(sequencer.defaultInstrument, sequencer.storage.instruments);\r\n      //console.log('default instrument sequencer', sequencer.defaultInstrument, config);\r\n      //console.log(sequencer.storage.instruments.heartbeat.sinewave);\r\n    }\r\n    return config;\r\n  }\r\n\r\n\r\n  Track.prototype.setInstrument = function (arg) {\r\n    //console.log('Track.setInstrument()', arg.name, this.name);\r\n    if (arg === '' || arg === undefined || arg === false) {\r\n      arg = getDefaultInstrumentConfig(this);\r\n      //console.log('default', arg);\r\n    }\r\n    var instrument = createInstrument(arg);\r\n\r\n    //console.log(instrument);\r\n\r\n    if (instrument === false) {\r\n      instrument = createInstrument(getDefaultInstrumentConfig(this));\r\n    }\r\n\r\n    /*\r\n            var instrument;\r\n\r\n            if(arg === '' || arg === undefined || arg === false){\r\n                getDefaultInstrumentConfig(this);\r\n            }else{\r\n                instrument = createInstrument(arg);\r\n            }\r\n\r\n    */\r\n    instrument.track = this;\r\n    // stop possible scheduled notes by the previous instrument\r\n    if (this.instrument) {\r\n      this.instrument.allNotesOff();\r\n    }\r\n    this.instrument = instrument;\r\n    this.instrumentId = instrument.name;\r\n    if (this.song) {\r\n      this.instrument.song = this.song;\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.setMidiInput = function (id, flag) {\r\n    var input, i,\r\n      midiInputs = this.midiInputs,\r\n      availableInputs;\r\n\r\n    //console.log(id, flag, this.song.midiInputs[id]);\r\n\r\n    flag = flag === undefined ? true : flag;\r\n\r\n    if (id === 'all') {\r\n      availableInputs = this.song !== undefined ? this.song.midiInputs : sequencer.midiInputs;\r\n      objectForEach(availableInputs, function (value, key) {\r\n        if (flag === true) {\r\n          midiInputs[key] = value;\r\n        } else {\r\n          delete midiInputs[key];\r\n        }\r\n      });\r\n      //console.log(sequencer.midiInputs, this.midiInputs, midiInputs);\r\n      return;\r\n    }\r\n\r\n    input = this.song.midiInputs[id];\r\n    //console.log(input, id);\r\n    if (input === undefined) {\r\n      return;\r\n    }\r\n    //this.midiInputs[id] = flag === true ? input : false;\r\n    if (flag) {\r\n      this.midiInputs[id] = input;\r\n    } else {\r\n      delete this.midiInputs[id];\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.setMidiOutput = function (id, flag) {\r\n    // a track can, unlike Cubase, send its events to more than one midi output\r\n    flag = flag === undefined ? true : flag;\r\n\r\n    //console.log(id, flag, this.song.midiOutputs);\r\n\r\n    var output = this.song.midiOutputs[id],\r\n      me = this;\r\n\r\n    if (output === undefined) {\r\n      return;\r\n    }\r\n\r\n\r\n    // stop the internal instrument if a midi output has been chosen -> particulary necessary while the song is playing\r\n    if (flag === true) {\r\n      this.instrument.allNotesOff();\r\n    }\r\n\r\n    //this.midiOutputs[id] = flag === true ? output : false;\r\n    if (flag) {\r\n      this.midiOutputs[id] = output;\r\n    } else {\r\n      delete this.midiOutputs[id];\r\n    }\r\n\r\n    this.routeToMidiOut = false;\r\n\r\n    //console.log(this.midiOutputs[id]);\r\n    objectForEach(this.midiOutputs, function (value, key) {\r\n      //console.log(value, key);\r\n      if (value !== false) {\r\n        me.routeToMidiOut = true;\r\n      }\r\n    });\r\n    //console.log(output, id, this.routeToMidiOut);\r\n  };\r\n\r\n\r\n  Track.prototype.prepareForRecording = function (recordId, callback) {\r\n    //console.log('prepare', this.recordEnabled, recordId);\r\n    if (this.recordEnabled !== 'midi' && this.recordEnabled !== 'audio') {\r\n      return;\r\n    }\r\n    this.recordPart = sequencer.createPart();\r\n    this.addPart(this.recordPart);\r\n    //console.log(this.recordPart.needsUpdate);\r\n    this.recordingNotes = {};\r\n    this.recordId = recordId;\r\n\r\n    if (this.recordEnabled === 'audio') {\r\n      if (this.audio === undefined) {\r\n        this.audio = createAudioTrack(this);\r\n      }\r\n      this.audio.prepareForRecording(recordId, callback);\r\n    }\r\n    //console.log(this.recordEnabled);\r\n  };\r\n\r\n\r\n  Track.prototype.stopRecording = function (recordId, callback) {\r\n    //console.log(recordId, this.recordId);\r\n    if (this.recordId !== recordId) {\r\n      return;\r\n    }\r\n\r\n    this.recordingNotes = {};\r\n    if (this.autoQuantize || this.song.autoQuantize) {\r\n      if (debug >= 1) {\r\n        console.log('performing auto quantize');\r\n      }\r\n      this.quantizeRecording();\r\n    }\r\n\r\n    if (this.recordEnabled === 'midi') {\r\n      this.recordPart.update();\r\n      callback(this.recordPart.events);\r\n    } else if (this.recordEnabled === 'audio') {\r\n      var scope = this;\r\n      this.audio.stopRecording(function (recording) {\r\n\r\n        var event = sequencer.createAudioEvent({\r\n          ticks: scope.song.recordTimestampTicks,\r\n          buffer: recording.audioBuffer,\r\n          sampleId: recording.id,\r\n        });\r\n\r\n        scope.recordPart.addEvent(event);\r\n        scope.recordPart.update();\r\n        callback([event]);\r\n      });\r\n    }\r\n  };\r\n\r\n  /*\r\n      Track.prototype.undoRecording = function(recordId){\r\n          if(this.recordId !== recordId){\r\n              return;\r\n          }\r\n          this.removePart(this.recordPart);\r\n      };\r\n  */\r\n\r\n  Track.prototype.undoRecording = function (data) {\r\n    var type = typeString(data);\r\n    if (type === 'string') {\r\n      if (this.recordId === data) {\r\n        this.removePart(this.recordPart);\r\n      }\r\n    } else if (type === 'array') {\r\n      //console.log(data);\r\n      this.removeEvents(data);\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.setWaveformConfig = function (config) {\r\n    this.waveformConfig = config;\r\n    if (this.audio !== undefined) {\r\n      this.audio.recorder.waveformConfig = config;\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.getAudioRecordingData = function (recordId) {\r\n    if (this.audio === undefined) {\r\n      return;\r\n    }\r\n    if (recordId === undefined) {\r\n      if (sequencer.debug >= sequencer.WARN) {\r\n        console.warn('please provide a recording id');\r\n      }\r\n      return false;\r\n    }\r\n    return sequencer.storage.audio.recordings[recordId];\r\n  };\r\n\r\n\r\n  Track.prototype.encodeAudioRecording = function (recordId, type, bitrate, callback) {\r\n    if (this.audio === undefined) {\r\n      return;\r\n    }\r\n    if (recordId === undefined) {\r\n      if (sequencer.debug >= sequencer.WARN) {\r\n        console.warn('please provide a recording id');\r\n      }\r\n      if (callback) {\r\n        callback(false);\r\n      }\r\n      return;\r\n    }\r\n\r\n    var recording = sequencer.storage.audio.recordings[recordId];\r\n    encodeAudio(recording.audioBuffer, type, bitrate, function (mp3Data) {\r\n      recording.mp3 = mp3Data;\r\n      callback(recording);\r\n    });\r\n  };\r\n\r\n\r\n  Track.prototype.setAudioRecordingLatency = function (recordId, value, callback) {\r\n    if (this.audio !== undefined) {\r\n      //console.log(recordId, sequencer.storage.audio.recordings);\r\n      this.audio.setAudioRecordingLatency(recordId, value, function (recording) {\r\n        // update all audio events in this song that use this recording\r\n\r\n        var i, event, sampleId,\r\n          audioEvents = this.song.audioEvents;\r\n\r\n        for (i = audioEvents.length - 1; i >= 0; i--) {\r\n          event = audioEvents[i];\r\n          sampleId = event.sampleId;\r\n          if (sampleId === undefined) {\r\n            continue;\r\n          }\r\n          if (recordId === sampleId) {\r\n            event.buffer = recording.audioBuffer;\r\n          }\r\n        }\r\n\r\n        if (callback !== undefined) {\r\n          callback();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.quantizeRecording = function (value) {\r\n    value = value || this.quantizeValue;\r\n    return sequencer.quantize(this.recordPart.events, value, this.song.ppq);\r\n  };\r\n\r\n\r\n  // non-mandatory arguments: quantize value, history object\r\n  Track.prototype.quantize = function () {\r\n    var i, arg, type,\r\n      args = slice.call(arguments),\r\n      numArgs = args.length,\r\n      value,\r\n      historyObject = {};\r\n\r\n    //console.log(arguments);\r\n\r\n    for (i = 0; i < numArgs; i++) {\r\n      arg = args[i];\r\n      type = typeString(arg);\r\n      //console.log(arg, type);\r\n      if (type === 'string' || type === 'number') {\r\n        // overrule the quantize value of this track with this value\r\n        value = arg;\r\n      } else if (type === 'object') {\r\n        historyObject = arg;\r\n      }\r\n    }\r\n\r\n    // no value passed as arguments, use the quantize value of this track\r\n    if (value === undefined) {\r\n      value = this.quantizeValue;\r\n    }\r\n\r\n    //console.log(value, history);\r\n    return sequencer.quantize(this.events, value, this.song.ppq, history); // sequencer.quantize is defined in quantize_fixed-length.js\r\n  };\r\n\r\n\r\n  Track.prototype.undoQuantize = function (history) {\r\n    if (history === undefined) {\r\n      if (sequencer.debug >= 2) {\r\n        console.warn('please pass a quantize history object');\r\n      }\r\n      return;\r\n    }\r\n\r\n    var events = history.tracks[this.id].quantizedEvents,\r\n      numEvents = events.length,\r\n      i, event;\r\n\r\n    for (i = 0; i < numEvents; i++) {\r\n      event = events[i];\r\n      event.ticks = history.events[event.id].ticks;\r\n      //console.log(event.ticks, event.type);\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.addMidiEventListener = function () {\r\n    return addMidiEventListener(arguments, this);\r\n  };\r\n\r\n\r\n  Track.prototype.removeMidiEventListener = function (id) {\r\n    removeMidiEventListener(id, this);\r\n  };\r\n\r\n\r\n  Track.prototype.allNotesOff = function (id) {\r\n    if (this.audio) {\r\n      this.audio.allNotesOff();\r\n    }\r\n    if (this.instrument) {\r\n      this.instrument.allNotesOff();\r\n    }\r\n  };\r\n\r\n\r\n  Track.prototype.processMidiEvent = function (event) {\r\n    handleMidiMessageTrack(event, this)\r\n  }\r\n\r\n  /*\r\n      Track.prototype.addReverb = function(id, amount){\r\n          var reverb = sequencer.getReverb(id);\r\n          if(reverb !== false){\r\n              reverb = sequencer.createEffect('reverb', reverb);\r\n              reverb.amount = amount < 0 ? 0 : amount > 1 ? 1 : 0.5;\r\n              this.effects.push(reverb);\r\n          }\r\n      };\r\n\r\n\r\n      Track.prototype.setReverb = function(id, amount){\r\n      };\r\n\r\n\r\n      Track.prototype.removeReverb = function(id, amount){\r\n      };\r\n  */\r\n\r\n  sequencer.protectedScope.Track = Track;\r\n\r\n  sequencer.createTrack = function (name, type, song) {\r\n    return new Track(name, type, song);\r\n  };\r\n\r\n  sequencer.protectedScope.addInitMethod(function () {\r\n    // get the protected scope with all added methods\r\n    var protectedScope = sequencer.protectedScope;\r\n\r\n    getStats = sequencer.getStats;\r\n    findEvent = sequencer.findEvent;\r\n    findNote = sequencer.findNote;\r\n    createPart = sequencer.createPart;\r\n    createMidiEvent = sequencer.createMidiEvent;\r\n    createMidiNote = sequencer.createMidiNote;\r\n    createInstrument = sequencer.createInstrument;\r\n    createPanner = sequencer.createPanner;\r\n    encodeAudio = sequencer.encodeAudio;\r\n\r\n    context = protectedScope.context;\r\n    findItem = protectedScope.findItem;\r\n    addMidiEventListener = protectedScope.addMidiEventListener;\r\n    removeMidiEventListener = protectedScope.removeMidiEventListener;\r\n    createAudioTrack = sequencer.protectedScope.createAudioTrack;\r\n    checkPosition = protectedScope.checkPosition;\r\n    objectForEach = protectedScope.objectForEach;\r\n    typeString = protectedScope.typeString;\r\n    copyName = protectedScope.copyName;\r\n    handleMidiMessageTrack = protectedScope.handleMidiMessageTrack;\r\n  });\r\n\r\n}\r\nfunction transpose() {\n\n  'use strict';\n\n  var\n    // satisfy jslint\n    Pitchshift = window.Pitchshift,\n\n    context,\n    fftFrameSize = 2048,\n    shifter;\n\n  function init() {\n    if (window.Pitchshift) {\n      shifter = new Pitchshift(fftFrameSize, context.sampleRate, 'FFT');\n    }\n  }\n\n\n  function transpose(inputBuffer, semitones, cb) {\n    if (shifter === undefined) {\n      console.log('include Kiev II');\n      return;\n    }\n    if (semitones === 0) {\n      if (cb) {\n        //console.log(inputBuffer, semitones)\n        cb(inputBuffer);\n        return;\n      }\n    }\n\n    var numChannels = inputBuffer.numberOfChannels,\n      c, input, length, output, outputs = [], shiftValue, i,\n      outputBuffer;\n\n    //console.log(inputBuffer);\n\n    for (c = 0; c < numChannels; c++) {\n      input = inputBuffer.getChannelData(c);\n      length = input.length;\n      output = new Float32Array(length);\n      shiftValue = Math.pow(1.0595, semitones);\n      //shiftValue = 1.01;\n      shifter.process(shiftValue, input.length, 4, input);\n      //shifter.process(shiftValue, input.length, 8, input);\n      for (i = 0; i < length; i++) {\n        output[i] = shifter.outdata[i];\n      }\n      outputs[c] = output;\n    }\n\n    outputBuffer = context.createBuffer(\n      numChannels,\n      length,\n      inputBuffer.sampleRate\n    );\n\n    for (c = 0; c < numChannels; c++) {\n      outputBuffer.getChannelData(c).set(outputs[c]);\n    }\n\n    cb(outputBuffer);\n  }\n\n  sequencer.protectedScope.transpose = transpose;\n\n  sequencer.protectedScope.addInitMethod(function () {\n    context = sequencer.protectedScope.context;\n    init();\n  });\n\n}function util() {\r\n\r\n    'use strict';\r\n\r\n    var\r\n        // import\r\n        context, // defined in open_module.js\r\n\r\n        slice = Array.prototype.slice,\r\n\r\n        mPow = Math.pow,\r\n        mRound = Math.round,\r\n        mFloor = Math.floor,\r\n        mRandom = Math.random,\r\n        // floor = function(value){\r\n        //  return value | 0;\r\n        // },\r\n\r\n        noteLengthNames = {\r\n            1: 'quarter',\r\n            2: 'eighth',\r\n            4: 'sixteenth',\r\n            8: '32th',\r\n            16: '64th'\r\n        },\r\n\r\n        foundItem,\r\n        foundFolder;\r\n\r\n\r\n    function typeString(o) {\r\n        if (typeof o != 'object') {\r\n            return typeof o;\r\n        }\r\n\r\n        if (o === null) {\r\n            return 'null';\r\n        }\r\n\r\n        //object, array, function, date, regexp, string, number, boolean, error\r\n        var internalClass = Object.prototype.toString.call(o).match(/\\[object\\s(\\w+)\\]/)[1];\r\n        return internalClass.toLowerCase();\r\n\r\n    }\r\n\r\n\r\n    function getNiceTime(millis) {\r\n        var h, m, s, ms,\r\n            seconds,\r\n            timeAsString = '';\r\n\r\n        seconds = millis / 1000; // → millis to seconds\r\n        h = floor(seconds / (60 * 60));\r\n        m = floor((seconds % (60 * 60)) / 60);\r\n        s = floor(seconds % (60));\r\n        ms = round((seconds - (h * 3600) - (m * 60) - s) * 1000);\r\n\r\n        timeAsString += h + ':';\r\n        timeAsString += m < 10 ? '0' + m : m;\r\n        timeAsString += ':';\r\n        timeAsString += s < 10 ? '0' + s : s;\r\n        timeAsString += ':';\r\n        timeAsString += ms === 0 ? '000' : ms < 10 ? '00' + ms : ms < 100 ? '0' + ms : ms;\r\n\r\n        //console.log(h, m, s, ms);\r\n\r\n        return {\r\n            hour: h,\r\n            minute: m,\r\n            second: s,\r\n            millisecond: ms,\r\n            timeAsString: timeAsString,\r\n            timeAsArray: [h, m, s, ms]\r\n        };\r\n    }\r\n\r\n\r\n    function clone(obj) {\r\n        var attr, copy;\r\n        if (obj === null || typeof obj !== 'object') {\r\n            return obj;\r\n        }\r\n        copy = obj.constructor();\r\n        for (attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) {\r\n                copy[attr] = clone(obj[attr]);\r\n            }\r\n        }\r\n        return copy;\r\n    }\r\n\r\n\r\n    function copyObject(obj) {\r\n        var prop, copy = {};\r\n        if (typeString(obj) !== 'object') {\r\n            return {};\r\n        }\r\n        for (prop in obj) {\r\n            if (obj.hasOwnProperty(prop)) {\r\n                copy[prop] = obj[prop];\r\n            }\r\n        }\r\n        return copy;\r\n    }\r\n\r\n\r\n    function copyName(name) {\r\n        var i = name.indexOf('_copy'),\r\n            copy, numCopies;\r\n\r\n        if (i === -1) {\r\n            copy = name + '_copy';\r\n        } else {\r\n            numCopies = name.substring(i + 5);\r\n            if (numCopies === '') {\r\n                copy = name + '2';\r\n            } else {\r\n                copy = name.slice(0, -1) + (parseInt(numCopies, 10) + 1);\r\n            }\r\n        }\r\n        return copy;\r\n    }\r\n\r\n\r\n    function removeFromArray(tobeRemoved, array) {\r\n        var i, j,\r\n            maxi,\r\n            maxj,\r\n            newArray = [],\r\n            remove,\r\n            elementA, elementB;\r\n\r\n        if (typeString(tobeRemoved) !== 'array') {\r\n            tobeRemoved = [tobeRemoved];\r\n        }\r\n        maxi = array.length;\r\n        maxj = tobeRemoved.length;\r\n\r\n        for (i = 0; i < maxi; i++) {\r\n            elementA = array[i];\r\n            remove = false;\r\n            for (j = 0; j < maxj; j++) {\r\n                elementB = tobeRemoved[j];\r\n                if (elementA === elementB) {\r\n                    remove = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (remove === false) {\r\n                newArray.push(elementA);\r\n            }\r\n        }\r\n\r\n        return newArray;\r\n    }\r\n\r\n\r\n    function removeFromArray2(array, callback) {\r\n        var i, maxi = array.length,\r\n            element,\r\n            newArray = [];\r\n\r\n        for (i = 0; i < maxi; i++) {\r\n            element = array[i];\r\n            if (callback(element) === false) {\r\n                newArray.push(element);\r\n            }\r\n        }\r\n        return newArray;\r\n    }\r\n\r\n\r\n    function round(value, decimals) {\r\n        if (decimals === undefined || decimals <= 0) {\r\n            return mRound(value);\r\n        }\r\n        var p = mPow(10, decimals);\r\n        //console.log(p, decimals)\r\n        return mRound(value * p) / p;\r\n    }\r\n\r\n\r\n    function floor(value, decimals) {\r\n        if (decimals === undefined || decimals <= 0) {\r\n            return mFloor(value);\r\n        }\r\n        var p = mPow(10, decimals);\r\n        //console.log(p,decimals)\r\n        return mFloor(value * p) / p;\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj, ignore_keys) {\r\n        //console.log('empty',obj)\r\n        if (obj === undefined) {\r\n            return false;\r\n        }\r\n        var i, isEmpty = true;\r\n        ignore_keys = ignore_keys || '';\r\n        for (i in obj) {\r\n            //console.log(i, ignore_keys.indexOf(i));\r\n            if (obj.hasOwnProperty(i) && ignore_keys.indexOf(i) === -1) {\r\n                isEmpty = false;\r\n                break;\r\n            }\r\n        }\r\n        return isEmpty;\r\n        //return Object.getOwnPropertyNames(obj).length === 0;\r\n    }\r\n\r\n\r\n    function objectForEach(o, cb) {\r\n        var name,\r\n            obj = o;\r\n        for (name in obj) {\r\n            if (obj.hasOwnProperty(name)) {\r\n                //cb.call(this, obj[name], name);\r\n                cb(obj[name], name);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function objectToArray(obj) {\r\n        var i, a = [];\r\n        for (i in obj) {\r\n            if (obj.hasOwnProperty(i)) {\r\n                a.push(obj[i]);\r\n            }\r\n        }\r\n        return a;\r\n    }\r\n\r\n    function arrayToObject(arr, property) {\r\n        var i, o = {};\r\n        for (i = arr.length - 1; i >= 0; i--) {\r\n            o[arr[i][property]] = arr[i];\r\n        }\r\n        return o;\r\n    }\r\n\r\n\r\n    function createClass(parent, constructor) {\r\n        var thisClass;\r\n        // class constructor\r\n        thisClass = function () {\r\n            this.parent = parent;\r\n            if (arguments.length > 0) {\r\n                parent.apply(this, arguments);\r\n                if (constructor !== undefined) {\r\n                    constructor.apply(this, arguments);\r\n                }\r\n            }\r\n        };\r\n        // inheritance\r\n        thisClass.prototype = Object.create(parent.prototype);\r\n        return thisClass;\r\n    }\r\n\r\n    function ajax(config) {\r\n        var\r\n            request = new XMLHttpRequest(),\r\n            method = config.method === undefined ? 'GET' : config.method,\r\n            fileSize, promise;\r\n\r\n        function executor(resolve, reject) {\r\n\r\n            reject = reject || function () { };\r\n            resolve = resolve || function () { };\r\n\r\n            request.onload = function () {\r\n                if (request.status !== 200) {\r\n                    reject(request.status);\r\n                    return;\r\n                }\r\n\r\n                if (config.responseType === 'json') {\r\n                    fileSize = request.response.length;\r\n                    resolve(JSON.parse(request.response), fileSize);\r\n                } else {\r\n                    resolve(request.response);\r\n                }\r\n            };\r\n\r\n            request.onerror = function (e) {\r\n                config.onError(e);\r\n            };\r\n\r\n            request.open(method, config.url, true);\r\n\r\n            if (config.overrideMimeType) {\r\n                request.overrideMimeType(config.overrideMimeType);\r\n            }\r\n\r\n            if (config.responseType) {\r\n                if (config.responseType === 'json') {\r\n                    request.responseType = 'text';\r\n                } else {\r\n                    request.responseType = config.responseType;\r\n                }\r\n            }\r\n\r\n            if (method === 'POST') {\r\n                request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\r\n            }\r\n\r\n            if (config.data) {\r\n                request.send(config.data);\r\n            } else {\r\n                request.send();\r\n            }\r\n        }\r\n\r\n        promise = new Promise(executor);\r\n        //console.log(promise);\r\n\r\n        if (config.onSuccess !== undefined) {\r\n            promise.then(config.onSuccess, config.onError);\r\n        } else {\r\n            return promise;\r\n        }\r\n    }\r\n\r\n\r\n    function ajax2(config) {\r\n\r\n        var request = new XMLHttpRequest(),\r\n            method = config.method === undefined ? 'GET' : config.method,\r\n            fileSize;\r\n\r\n        request.onreadystatechange = function () {\r\n            if (request.request === 404) {\r\n                //console.error(config.url, '404');\r\n                config.onError(404);\r\n            }\r\n        };\r\n\r\n        request.onload = function () {\r\n            if (request.status !== 200) {\r\n                //console.error(config.url, request.status);\r\n                config.onError(request.status);\r\n                return;\r\n            }\r\n            // this doesn't work with gzip server compression!\r\n            //fileSize = round(request.getResponseHeader('Content-Length')/1024/1024, 2);\r\n            //console.log(fileSize);\r\n            //console.log(config.url, request.getResponseHeader('Content-Length'));\r\n            //console.log(sequencer.os, request.response);\r\n\r\n            //if(sequencer.os === 'ios' && config.responseType === 'json'){\r\n            if (config.responseType === 'json') {\r\n                //fileSize = round(request.response.length/1024/1024, 2);\r\n                fileSize = request.response.length;\r\n                //console.log(config.url, fileSize)\r\n                config.onSuccess(JSON.parse(request.response), fileSize);\r\n                //config.onSuccess(JSON.parse(request.response));\r\n            } else {\r\n                //config.onSuccess(request.response, fileSize);\r\n                config.onSuccess(request.response);\r\n            }\r\n        };\r\n\r\n        request.onerror = function (e) {\r\n            //console.error(e);\r\n            config.onError(e);\r\n        };\r\n\r\n        /*\r\n                request.onreadystatechange = function() {\r\n                    if (success !== undefined && xmlhttp.readyState === 4 && xmlhttp.status === 200) {\r\n                        success(request.responseText);\r\n                    } else if (error !== undefined ) {\r\n                        error(request);\r\n                    }\r\n                };\r\n        */\r\n        request.open(method, config.url, true);\r\n\r\n\r\n        if (config.overrideMimeType) {\r\n            request.overrideMimeType(config.overrideMimeType);\r\n        }\r\n\r\n        if (config.responseType) {\r\n            //console.log(config.responseType, config.url);\r\n            //request.setRequestHeader('Content-type', 'application/' + config.responseType);\r\n\r\n            //if(sequencer.os === 'ios' && config.responseType === 'json'){\r\n            if (config.responseType === 'json') {\r\n                request.responseType = 'text';\r\n            } else {\r\n                request.responseType = config.responseType;\r\n            }\r\n\r\n            //request.setRequestHeader('Content-type', config.responseType);\r\n        }\r\n\r\n        if (method === 'POST') {\r\n            request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\r\n        }\r\n\r\n        if (config.data) {\r\n            request.send(config.data);\r\n        } else {\r\n            request.send();\r\n        }\r\n    }\r\n\r\n    function loop2(root, id, indent) {\r\n        var i, tmp;\r\n        for (i in root) {\r\n            if (foundFolder !== false) {\r\n                return;\r\n            }\r\n            if (root.hasOwnProperty(i)) {\r\n                tmp = root[i];\r\n                if (tmp !== undefined && tmp.className === 'Folder') {\r\n                    //console.log(indent, i, id);\r\n                    if (i === id) {\r\n                        foundFolder = tmp;\r\n                        return;\r\n                    } else {\r\n                        loop2(tmp, id, indent + '.');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function loop3(folder, items, search_subfolders, indent) {\r\n        var i, item;\r\n        for (i in folder) {\r\n            if (folder.hasOwnProperty(i)) {\r\n                if (i === 'id' || i === 'path' || i === 'className') {\r\n                    continue;\r\n                }\r\n                item = folder[i];\r\n\r\n                if (item === undefined) {\r\n                    continue;\r\n                }\r\n\r\n                //console.log(indent, i, item, item.className);\r\n                if (item.className === 'Folder') {\r\n                    if (search_subfolders === true) {\r\n                        loop3(item, items, search_subfolders, indent + '.');\r\n                    }\r\n                } else {\r\n                    // loaded samples are audio object so they don't have a name, we use the key of the storage for name\r\n                    if (item.name === undefined) {\r\n                        items.push({ name: i, data: item });\r\n                    } else {\r\n                        items.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function findItemsInFolder(path, root, search_subfolders) {\r\n        search_subfolders = search_subfolders === undefined ? true : search_subfolders;\r\n        var folders = pathToArray(path),\r\n            numFolders = folders.length,\r\n            currentFolder, i, folder,\r\n            searchFolder = folders[numFolders - 1],\r\n            items = [];\r\n\r\n        if (numFolders === 0) {\r\n            // return all items in root folder (for instance sequencer.storage.midi)\r\n            loop3(root, items, search_subfolders, '.');\r\n        } else {\r\n            currentFolder = root;\r\n\r\n            for (i = 0; i < numFolders; i++) {\r\n                folder = folders[i];\r\n                currentFolder = currentFolder[folder];\r\n                if (currentFolder === undefined) {\r\n                    break;\r\n                }\r\n            }\r\n            //console.log(root, currentFolder);\r\n            if (currentFolder) {\r\n                loop3(currentFolder, items, search_subfolders, '.');\r\n            } else {\r\n                // declared on top of this file\r\n                foundFolder = false;\r\n                loop2(root, searchFolder, '.');\r\n                loop3(foundFolder, items, search_subfolders, '.');\r\n            }\r\n        }\r\n\r\n        items.sort(function (a, b) {\r\n            var nameA = a.name.toLowerCase(),\r\n                nameB = b.name.toLowerCase();\r\n            if (nameA < nameB) { //sort string ascending\r\n                return -1;\r\n            } else if (nameA > nameB) {\r\n                return 1;\r\n            }\r\n            return 0; //default return value (no sorting)\r\n        });\r\n\r\n        return items;\r\n    }\r\n\r\n\r\n    function loop(obj, id, indent) {\r\n        var i, tmp, type;\r\n        for (i in obj) {\r\n            if (foundItem !== false) {\r\n                return;\r\n            }\r\n            if (obj.hasOwnProperty(i)) {\r\n                tmp = obj[i];\r\n                type = typeString(tmp);\r\n                //console.log(indent, i, id, tmp, type, tmp.className)\r\n                if (i === id) {\r\n                    foundItem = tmp;\r\n                    break;\r\n                }\r\n                //console.log(tmp);\r\n                // tmp can be null if the sample has not been loaded!\r\n                if (tmp !== undefined && tmp.className === 'Folder') {\r\n                    indent = indent + '.';\r\n                    loop(tmp, id, indent);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function findItem(path, root, exact_match) {\r\n        exact_match = exact_match === undefined ? false : exact_match;\r\n        if (path === undefined || path === '') {\r\n            return root;\r\n        }\r\n\r\n        //console.log('findItem', path);\r\n        var i, folder, folders, numFolders, currentFolder, item, itemId;\r\n        folders = pathToArray(path);\r\n        itemId = folders.pop();\r\n        numFolders = folders.length;\r\n        //console.log(folders, itemId);\r\n\r\n        if (itemId === '') {\r\n            return root;\r\n        }\r\n\r\n        // declared on top of util.js\r\n        foundItem = false;\r\n\r\n        if (folders.length > 0) {\r\n            currentFolder = root;\r\n\r\n            for (i = 0; i < numFolders; i++) {\r\n                folder = folders[i];\r\n                currentFolder = currentFolder[folder];\r\n                if (currentFolder === undefined) {\r\n                    break;\r\n                }\r\n            }\r\n            //console.log(root, currentFolder);\r\n            if (currentFolder) {\r\n                item = currentFolder[itemId];\r\n            }\r\n        }\r\n\r\n        if (item === undefined) {\r\n            if (exact_match === true) {\r\n                item = root[itemId];\r\n            } else {\r\n                loop(root, itemId, '.');\r\n                item = foundItem;\r\n            }\r\n        }\r\n        //console.log(item, itemId, exact_match);\r\n        //console.log('found', root.id, folders, itemId, item);\r\n        if (item === undefined) {\r\n            item = false;\r\n        }\r\n        return item;\r\n    }\r\n\r\n\r\n    function storeItem(item, path, root) {\r\n        var folder, folders, numFolders, currentFolder, i, pathString = '';\r\n        folders = pathToArray(path);\r\n        numFolders = folders.length;\r\n        currentFolder = root;\r\n\r\n        for (i = 0; i < numFolders; i++) {\r\n            folder = folders[i];\r\n            pathString += '/' + folder;\r\n            //console.log(folder);\r\n            if (currentFolder[folder] === undefined) {\r\n                currentFolder[folder] = {\r\n                    path: pathString,\r\n                    className: 'Folder'\r\n                };\r\n            }\r\n            if (i === numFolders - 1) {\r\n                currentFolder[folder] = item;\r\n                break;\r\n            }\r\n            currentFolder = currentFolder[folder];\r\n        }\r\n    }\r\n\r\n\r\n    // -> classical/mozart/sonatas/early\r\n    function deleteItem(path, root) {\r\n        var item, itemId, i, obj = root;\r\n\r\n        // for deleting items you need to specify the complete path, hence the 3rd argument is set to true\r\n        //console.log('deleteItem', path);\r\n        item = findItem(path, root, true);\r\n\r\n        /*\r\n            // what was this for, because it doesn't work when deleting samples (as AudioBuffer) from storage.audio:\r\n            item = findItem(path, root);\r\n            console.log(item);\r\n            path = item.folder + '/' + item.name;\r\n            console.log(path);\r\n        */\r\n\r\n\r\n        if (!item) {\r\n            return false;\r\n        } else if (item.className === 'Folder') {\r\n            // remove files in folder\r\n            for (i in item) {\r\n                if (item.hasOwnProperty(i)) {\r\n                    if (i !== 'className') {\r\n                        delete item[i];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        path = pathToArray(path);\r\n\r\n        while (path.length > 1) {\r\n            i = 0;\r\n            obj = root;\r\n\r\n            while (i < path.length - 1) {\r\n                //console.log(path[i],obj);\r\n                obj = obj[path[i++]];\r\n            }\r\n            //console.log(obj);\r\n            itemId = path[i];\r\n            item = obj[itemId];\r\n\r\n            if (item.className === 'Folder') {\r\n                if (isEmptyObject(item, 'path className')) {\r\n                    delete obj[itemId];\r\n                    //console.log('deleting empty folder', itemId);\r\n                }\r\n            } else {\r\n                delete obj[itemId];\r\n                //console.log('deleting item', itemId);\r\n            }\r\n\r\n            path.pop();\r\n        }\r\n\r\n        //console.log(path, path[0] === '', root[path[0]]);\r\n\r\n        if (path.length === 1 && path[0] !== '') {\r\n            itemId = path[0];\r\n            item = root[itemId];\r\n            //console.log(path, path.length, itemId);\r\n            if (item.className === 'Folder') {\r\n                if (isEmptyObject(root[itemId], 'path className')) {\r\n                    delete root[itemId];\r\n                    //console.log('deleting empty folder', itemId, '(2)');\r\n                }\r\n            } else {\r\n                delete root[itemId];\r\n                //console.log('deleting item', itemId, '(2)');\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    function parseSample(id, sample) {\r\n        return new Promise(function (resolve, reject) {\r\n            try {\r\n                context.decodeAudioData(sample,\r\n                    function onSuccess(buffer) {\r\n                        //console.log(id, buffer);\r\n                        resolve({ 'id': id, 'buffer': buffer });\r\n                    },\r\n                    function onError(e) {\r\n                        console.log('error decoding audiodata', id, e);\r\n                        //reject(e); // don't use reject because we don't want the parent promise to reject\r\n                        resolve({ 'id': id, 'buffer': undefined });\r\n                    }\r\n                );\r\n            } catch (e) {\r\n                console.log('error decoding audiodata', id, e);\r\n                //reject(e);\r\n                resolve({ 'id': id, 'buffer': undefined });\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    function loadAndParseSample(id, url) {\r\n        return new Promise(function (resolve, reject) {\r\n            ajax({ url: url, responseType: 'arraybuffer' }).then(\r\n                function onFulfilled(data) {\r\n                    parseSample(id, data).then(resolve, reject);\r\n                },\r\n                function onRejected() {\r\n                    resolve({ 'id': id, 'buffer': undefined });\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n    function parseSamples(mapping) {\r\n        var key, sample,\r\n            promises = [];\r\n\r\n        for (key in mapping) {\r\n            if (mapping.hasOwnProperty(key)) {\r\n                sample = mapping[key];\r\n                if (sample.indexOf('http://') === -1) {\r\n                    promises.push(parseSample(key, base64ToBinary(sample)));\r\n                } else {\r\n                    promises.push(loadAndParseSample(key, sample));\r\n                }\r\n            }\r\n        }\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            Promise.all(promises).then(\r\n                function onFulfilled(values) {\r\n                    var mapping = {};\r\n\r\n                    values.forEach(function (value) {\r\n                        mapping[value.id] = value.buffer;\r\n                    });\r\n                    resolve(mapping);\r\n                },\r\n                function onRejected(e) {\r\n                    reject(e);\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n    // use xhr.overrideMimeType('text/plain; charset=x-user-defined');\r\n    // all credits: https://github.com/gasman/jasmid\r\n    function toBinaryString(input) {\r\n        /* munge input into a binary string */\r\n        var t, ff, mx, scc, z;\r\n        t = input || '';\r\n        ff = [];\r\n        mx = t.length;\r\n        scc = String.fromCharCode;\r\n        for (z = 0; z < mx; z++) {\r\n            ff[z] = scc(t.charCodeAt(z) & 255);\r\n        }\r\n        return ff.join('');\r\n    }\r\n\r\n\r\n    function toUint8Array(input) {\r\n        /* munge input into a binary string */\r\n        var t, uint, mx, scc, z;\r\n        t = input || '';\r\n        mx = t.length;\r\n        uint = new Uint8Array(mx);\r\n        scc = String.fromCharCode;\r\n        for (z = 0; z < mx; z++) {\r\n            uint[z] = scc(t.charCodeAt(z) & 255);\r\n        }\r\n        return uint;\r\n    }\r\n\r\n\r\n    // adapted version of https://github.com/danguer/blog-examples/blob/master/js/base64-binary.js\r\n    function base64ToBinary(input) {\r\n        var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\r\n            bytes, uarray, buffer,\r\n            lkey1, lkey2,\r\n            chr1, chr2, chr3,\r\n            enc1, enc2, enc3, enc4,\r\n            i, j = 0;\r\n\r\n        bytes = Math.ceil((3 * input.length) / 4.0);\r\n        buffer = new ArrayBuffer(bytes);\r\n        uarray = new Uint8Array(buffer);\r\n\r\n        lkey1 = keyStr.indexOf(input.charAt(input.length - 1));\r\n        lkey2 = keyStr.indexOf(input.charAt(input.length - 1));\r\n        if (lkey1 == 64) bytes--; //padding chars, so skip\r\n        if (lkey2 == 64) bytes--; //padding chars, so skip\r\n\r\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\r\n\r\n        for (i = 0; i < bytes; i += 3) {\r\n            //get the 3 octects in 4 ascii chars\r\n            enc1 = keyStr.indexOf(input.charAt(j++));\r\n            enc2 = keyStr.indexOf(input.charAt(j++));\r\n            enc3 = keyStr.indexOf(input.charAt(j++));\r\n            enc4 = keyStr.indexOf(input.charAt(j++));\r\n\r\n            chr1 = (enc1 << 2) | (enc2 >> 4);\r\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n            chr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n            uarray[i] = chr1;\r\n            if (enc3 != 64) uarray[i + 1] = chr2;\r\n            if (enc4 != 64) uarray[i + 2] = chr3;\r\n        }\r\n        //console.log(buffer);\r\n        return buffer;\r\n    }\r\n\r\n\r\n    function pathToArray(path) {\r\n        if (path === undefined) {\r\n            return [];\r\n        }\r\n        //console.log('path', path);\r\n        path = path.replace(/undefined/g, '');\r\n        path = path.replace(/\\/{2,}/g, '/');\r\n        path = path.replace(/^\\//, '');\r\n        path = path.replace(/\\/$/, '');\r\n        path = path.split('/');\r\n        return path;\r\n    }\r\n\r\n\r\n    function parseUrl(url) {\r\n        var filePath = '',\r\n            fileName = url,\r\n            fileExtension = '',\r\n            slash, dot, ext;\r\n\r\n        url = url.replace(/\\/{2,}/g, '/');\r\n        url = url.replace(/^\\//, '');\r\n        url = url.replace(/\\/$/, '');\r\n\r\n        // check if the url has a path and/or an extension\r\n        slash = url.lastIndexOf('/');\r\n        if (slash !== -1) {\r\n            fileName = url.substring(slash + 1);\r\n            filePath = url.substring(0, slash);\r\n        }\r\n\r\n        dot = url.lastIndexOf('.');\r\n        if (dot !== -1) {\r\n            ext = url.substring(dot + 1);\r\n            if (ext.length >= 3 && ext.length <= 4) {\r\n                fileExtension = ext;\r\n                fileName = url.substring(slash + 1, dot);\r\n            }\r\n        }\r\n\r\n        return {\r\n            path: filePath,\r\n            name: fileName,\r\n            ext: fileExtension\r\n        };\r\n    }\r\n\r\n\r\n    // generic load method that calls the load() method of the item to be loaded\r\n    // callback2 is called every time an item is loaded, callback1 is called after all items have been loaded\r\n    function loadLoop(i, numItems, items, callback1, callback2) {\r\n        if (numItems === 0) {\r\n            if (callback1) {\r\n                callback1();\r\n            }\r\n            return;\r\n        }\r\n        var item = items[i];\r\n        item.load(function () {\r\n            //console.log(item.name, 'loaded', i, numItems);\r\n            if (callback2) {\r\n                callback2(arguments);\r\n            }\r\n            i++;\r\n            if (i < numItems) {\r\n                loadLoop(i, numItems, items, callback1, callback2);\r\n            } else {\r\n                if (callback1) {\r\n                    callback1();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    function getArguments(args) {\r\n        var result = [],\r\n            loop, arg;\r\n\r\n        args = slice.call(args);\r\n\r\n        loop = function (data, i, maxi) {\r\n            for (i = 0; i < maxi; i++) {\r\n                arg = data[i];\r\n                if (typeString(arg) === 'array') {\r\n                    loop(arg, 0, arg.length);\r\n                } else {\r\n                    result.push(arg);\r\n                }\r\n            }\r\n        };\r\n\r\n        loop(args, 0, args.length);\r\n        return result;\r\n    }\r\n\r\n\r\n    function getEqualPowerCurve(numSteps, type, maxValue) {\r\n        var i, value, percent,\r\n            values = new Float32Array(numSteps);\r\n        for (i = 0; i < numSteps; i++) {\r\n            percent = i / numSteps;\r\n            if (type === 'fadeIn') {\r\n                value = Math.cos((1.0 - percent) * 0.5 * Math.PI) * maxValue;\r\n            } else if (type === 'fadeOut') {\r\n                value = Math.cos(percent * 0.5 * Math.PI) * maxValue;\r\n            }\r\n            values[i] = value;\r\n            if (i === numSteps - 1) {\r\n                values[i] = type === 'fadeIn' ? 1 : 0;\r\n            }\r\n        }\r\n        return values;\r\n    }\r\n\r\n\r\n    function remap(value, oldMin, oldMax, newMin, newMax) {\r\n        var oldRange = oldMax - oldMin,\r\n            newRange = newMax - newMin,\r\n            result;\r\n        result = (((value - oldMin) * newRange) / oldRange) + newMin;\r\n        return result;\r\n    }\r\n\r\n\r\n    // filters assets with classname \"name\" from object \"obj\" and stores them in array \"result\"\r\n    function filterItemsByClassName(obj, name, result) {\r\n        var i, item, type;\r\n\r\n        for (i in obj) {\r\n            if (obj.hasOwnProperty(i)) {\r\n                item = obj[i];\r\n                if (item.className === name) {\r\n                    result.push(item);\r\n                } else {\r\n                    type = typeString(item);\r\n                    if (type === 'object') {\r\n                        loop(item, name, result);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function createSlider(config) {\r\n        var slider = config.slider,\r\n            message = config.message,\r\n            label = config.label,\r\n            sliderWrapper;\r\n        //mouseDownCalls = [],\r\n        //mouseMoveCalls = [],\r\n        //mouseUpCalls = [];\r\n\r\n        if (config.label === undefined) {\r\n            label = slider.parentNode.firstChild;\r\n        }\r\n\r\n        if (config.initialSliderValue !== undefined) {\r\n            slider.value = config.initialSliderValue;\r\n        }\r\n\r\n        if (config.initialLabelValue !== undefined) {\r\n            label.innerHTML = message.replace('{value}', config.initialLabelValue);\r\n        }\r\n\r\n        if (config.min !== undefined) {\r\n            slider.min = config.min;\r\n        }\r\n\r\n        if (config.max !== undefined) {\r\n            slider.max = config.max;\r\n        }\r\n\r\n        if (config.step !== undefined) {\r\n            slider.step = config.step;\r\n        }\r\n\r\n\r\n        function onMouseDown(e) {\r\n            var value = slider.valueAsNumber;\r\n            if (config.onMouseDown) {\r\n                config.onMouseDown(value, e);\r\n            }\r\n            if (sliderWrapper.onMouseDown) {\r\n                sliderWrapper.onMouseDown(value, e);\r\n            }\r\n        }\r\n\r\n        function onMouseUp(e) {\r\n            var value = slider.valueAsNumber;\r\n            if (config.onMouseUp) {\r\n                config.onMouseUp(value, e);\r\n            }\r\n            if (sliderWrapper.onMouseUp) {\r\n                sliderWrapper.onMouseUp(value, e);\r\n            }\r\n        }\r\n\r\n        function onMouseMove(e) {\r\n            var value = slider.valueAsNumber;\r\n            if (config.onMouseMove) {\r\n                config.onMouseMove(value, e);\r\n            }\r\n            if (sliderWrapper.onMouseMove) {\r\n                sliderWrapper.onMouseMove(value, e);\r\n            }\r\n        }\r\n\r\n        function onChange(e) {\r\n            var value = slider.valueAsNumber;\r\n            if (config.onChange) {\r\n                config.onChange(value, e);\r\n            }\r\n            if (sliderWrapper.onChange) {\r\n                sliderWrapper.onChange(value, e);\r\n            }\r\n        }\r\n\r\n        slider.addEventListener('mousedown', function (e) {\r\n            setTimeout(onMouseDown, 0, e);\r\n            slider.addEventListener('mousemove', onMouseMove, false);\r\n        }, false);\r\n\r\n\r\n        slider.addEventListener('mouseup', function (e) {\r\n            setTimeout(onMouseUp, 0, e);\r\n            slider.removeEventListener('mousemove', onMouseMove, false);\r\n        }, false);\r\n\r\n        slider.addEventListener('change', function (e) {\r\n            //console.log('change');\r\n            onChange(e);\r\n        }, false);\r\n\r\n        sliderWrapper = {\r\n            getValue: function () {\r\n                if (config.getValue) {\r\n                    return config.getValue(slider.valueAsNumber);\r\n                } else {\r\n                    return slider.valueAsNumber;\r\n                }\r\n            },\r\n            setValue: function (value) {\r\n                if (config.setValue) {\r\n                    slider.value = config.setValue(value);\r\n                } else {\r\n                    slider.value = value;\r\n                }\r\n            },\r\n            setLabel: function (value) {\r\n                label.innerHTML = message.replace('{value}', value);\r\n            },\r\n            elem: slider,\r\n            element: slider,\r\n        };\r\n\r\n        sliderWrapper.set = function (value) {\r\n            setLabel(value);\r\n            setValue(value);\r\n        };\r\n\r\n        return sliderWrapper;\r\n    }\r\n\r\n    function createSlider2(config) {\r\n        var slider = config.slider,\r\n            message = config.message,\r\n            label = slider.parentNode.firstChild;\r\n\r\n\r\n        if (config.initialValueSlider) {\r\n            slider.value = config.initialValueSlider;\r\n            label.innerHTML = message.replace('{value}', calculate());\r\n        }\r\n\r\n\r\n        if (config.initialValueLabel) {\r\n            label.innerHTML = message.replace('{value}', config.initialValueLabel);\r\n            slider.value = calculateFromLabel(config.initialValueLabel);\r\n        }\r\n\r\n\r\n        function onMouseMove() {\r\n            var value = calculate();\r\n            if (config.onMouseMove !== undefined) {\r\n                config.onMouseMove(slider.valueAsNumber, value);\r\n            }\r\n            label.innerHTML = message.replace('{value}', value);\r\n        }\r\n\r\n\r\n        function onMouseUp() {\r\n            var value = calculate();\r\n            if (config.onMouseUp !== undefined) {\r\n                config.onMouseUp(slider.valueAsNumber, value);\r\n            }\r\n            label.innerHTML = message.replace('{value}', value);\r\n        }\r\n\r\n\r\n        function onMouseDown() {\r\n            var value = calculate();\r\n            if (config.onMouseDown !== undefined) {\r\n                config.onMouseDown(slider.valueAsNumber, value);\r\n            }\r\n            label.innerHTML = message.replace('{value}', value);\r\n        }\r\n\r\n\r\n        function calculate() {\r\n            var value = slider.valueAsNumber;\r\n            if (config.calculate !== undefined) {\r\n                value = config.calculate(value);\r\n            }\r\n            return value;\r\n        }\r\n\r\n\r\n        function calculateFromLabel(value) {\r\n            if (config.calculateFromLabel !== undefined) {\r\n                value = config.calculateFromLabel(value);\r\n            }\r\n            return value;\r\n        }\r\n\r\n\r\n        slider.addEventListener('mousedown', function () {\r\n            setTimeout(onMouseDown, 0);\r\n            slider.addEventListener('mousemove', onMouseMove, false);\r\n        }, false);\r\n\r\n\r\n        slider.addEventListener('mouseup', function () {\r\n            setTimeout(onMouseUp, 0);\r\n            slider.removeEventListener('mousemove', onMouseMove, false);\r\n        }, false);\r\n\r\n\r\n        return {\r\n            updateSlider: function (value) {\r\n                slider.value = value;\r\n                label.innerHTML = message.replace('{value}', calculate(value));\r\n            },\r\n            updateLabel: function (value) {\r\n                label.innerHTML = message.replace('{value}', value);\r\n                slider.value = calculateFromLabel(value);\r\n            },\r\n            getValue1: function () {\r\n                return slider.valueAsNumber;\r\n            },\r\n            getValue2: function () {\r\n                return calculate(slider.valueAsNumber);\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    function getRandom(min, max, round) {\r\n        var r = mRandom() * (max - min) + min;\r\n        if (round === true) {\r\n            return mRound(r);\r\n        } else {\r\n            return r;\r\n        }\r\n    }\r\n\r\n\r\n    function getRandomNotes(config) {\r\n        var i,\r\n            ticks = 0,\r\n            events = [],\r\n            midiEvent,\r\n            velocity,\r\n            numNotes,\r\n            noteNumber,\r\n            noteLength,\r\n            minVelocity,\r\n            maxVelocity,\r\n            minNoteNumber,\r\n            maxNoteNumber,\r\n            ppq;\r\n\r\n        //console.log(config);\r\n\r\n        config = config || {};\r\n        ppq = config.ppq || sequencer.defaultPPQ;\r\n        numNotes = config.numNotes || 20;\r\n        noteLength = config.noteLength || ppq / 2; // ticks\r\n        minVelocity = config.minVelocity || 30;\r\n        maxVelocity = config.maxVelocity || 127;\r\n        minNoteNumber = config.minNoteNumber || 60;\r\n        maxNoteNumber = config.maxNoteNumber || 127;\r\n\r\n        if (noteLength > ppq) {\r\n            noteLength = ppq;\r\n        }\r\n\r\n        //console.log(ppq, numNotes, noteLength, minVelocity, maxVelocity, minNoteNumber, maxNoteNumber);\r\n\r\n\r\n        for (i = 0; i < numNotes; i++) {\r\n            noteNumber = getRandom(minNoteNumber, maxNoteNumber, true);\r\n            velocity = getRandom(minVelocity, maxVelocity, true);\r\n\r\n            //console.log(ticks, noteNumber, velocity);\r\n\r\n            midiEvent = sequencer.createMidiEvent(ticks, sequencer.NOTE_ON, noteNumber, velocity);\r\n            events.push(midiEvent);\r\n            ticks += noteLength;\r\n\r\n            midiEvent = sequencer.createMidiEvent(ticks, sequencer.NOTE_OFF, noteNumber, 0);\r\n            events.push(midiEvent);\r\n            ticks += ppq - noteLength;\r\n        }\r\n\r\n        return events;\r\n    }\r\n\r\n\r\n    function convertPPQ() {//oldPPQ, newPPQ, data, ..., ...\r\n        var args = slice.call(arguments),\r\n            oldPPQ = args[0],\r\n            newPPQ = args[1],\r\n            ratio = newPPQ / oldPPQ,\r\n            i, event;\r\n\r\n        if (isNaN(oldPPQ) || isNaN(newPPQ)) {\r\n            if (sequencer.debug === 4) {\r\n                console.error('PPQ values must be numbers');\r\n            }\r\n            return;\r\n        }\r\n\r\n        function loop(data, i, maxi) {\r\n            var arg, type, track, j, t;\r\n            for (j = i; j < maxi; j++) {\r\n                arg = data[j];\r\n                type = typeString(arg);\r\n                //console.log(type, arg.className);\r\n                if (type === 'array') {\r\n                    convert(arg);\r\n                } else if (type === 'object') {\r\n                    if (arg.className === 'Part' || arg.className === 'Track' || arg.className === 'Song') {\r\n                        convert(arg.events);\r\n                    } else if (arg.className === 'MidiFile') {\r\n                        //console.log(arg.numTracks, arg.tracks[0].events);\r\n                        for (t = arg.numTracks - 1; t >= 0; t--) {\r\n                            track = arg.tracks[t];\r\n                            //console.log(track.needsUpdate);\r\n                            if (track.needsUpdate === true) {\r\n                                track.update();\r\n                                if (track.events) {\r\n                                    convert(track.events);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        loop(args, 2, args.length);\r\n\r\n        function convert(events) {\r\n            for (i = events.length - 1; i >= 0; i--) {\r\n                event = events[i];\r\n                event.ticks = ratio * event.ticks;\r\n                if (event.state !== 'new') {\r\n                    event.state = 'changed';\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function getNoteLengthName(song, value) {\r\n        for (var divider in noteLengthNames) {\r\n            if (noteLengthNames.hasOwnProperty(divider)) {\r\n                //console.log(value, song.ppq/divider);\r\n                if (value === song.ppq / divider) {\r\n                    return noteLengthNames[divider];\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    function getMicrosecondsFromBPM(bpm) {\r\n        return round(60000000 / bpm);\r\n    }\r\n\r\n\r\n    function insertLink(s) {\r\n        // @TODO: fix this -> should be md syntax\r\n        var href,\r\n            i = s.indexOf('http://');\r\n        if (i !== -1) {\r\n            href = s.substring(i);\r\n            i = href.indexOf(' ');\r\n            if (i !== -1) {\r\n                href = href.substring(0, i);\r\n            }\r\n        }\r\n        return '<a href=\"' + href + '\"></a>';\r\n    }\r\n\r\n\r\n    function getWaveformData(buffer, config, callback) {\r\n        var i, maxi,\r\n            canvas = document.createElement('canvas'),\r\n            ctx = canvas.getContext('2d'),\r\n            pcmRight = buffer.getChannelData(0),\r\n            pcmLeft = buffer.getChannelData(0),\r\n            numSamples = pcmRight.length,\r\n            width, // max width of a canvas on chrome/chromium is 32000\r\n            height = config.height || 100,\r\n            color = config.color || '#71DE71',\r\n            bgcolor = config.bgcolor || '#000',\r\n            density,\r\n            scale = height / 2,\r\n            sampleStep = config.sampleStep || 50,\r\n            height,\r\n            lastWidth,\r\n            numImages,\r\n            currentImage,\r\n            xPos = 0,\r\n            offset = 0,\r\n            urls = [],\r\n            imgElement,\r\n            imgElements = [];\r\n\r\n        //console.log(pcmRight.length, pcmLeft.length, config.samples.length);\r\n\r\n        if (config.width !== undefined) {\r\n            width = config.width;\r\n            density = width / numSamples;\r\n        } else {\r\n            density = config.density || 1;\r\n            width = 1000;\r\n            lastWidth = (numSamples * config.density) % width;\r\n            numImages = Math.ceil((numSamples * config.density) / width);\r\n            currentImage = 0;\r\n        }\r\n\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n\r\n        ctx.fillStyle = bgcolor;\r\n        ctx.fillRect(0, 0, width, height);\r\n\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = color;\r\n        ctx.lineWidth = 1;\r\n        ctx.moveTo(0, scale);\r\n\r\n\r\n        for (i = 0; i < numSamples; i += sampleStep) {\r\n            xPos = (i - offset) * density;\r\n            if (xPos >= width) {\r\n                //console.log(width, height)\r\n                //ctx.closePath();\r\n                ctx.stroke();\r\n                urls.push(canvas.toDataURL('image/png'));\r\n                currentImage++;\r\n                if (currentImage === numImages - 1) {\r\n                    canvas.width = lastWidth;\r\n                } else {\r\n                    canvas.width = width;\r\n                }\r\n                ctx.beginPath();\r\n                ctx.strokeStyle = color;\r\n                offset = i;\r\n                xPos = 0;\r\n                ctx.moveTo(xPos, scale - (pcmRight[i] * scale));\r\n            } else {\r\n                ctx.lineTo(xPos, scale - (pcmRight[i] * scale));\r\n                //console.log(scale - (pcmRight[i] * scale));\r\n            }\r\n        }\r\n\r\n        if (xPos < width) {\r\n            //ctx.closePath();\r\n            ctx.stroke();\r\n            urls.push(canvas.toDataURL('image/png'));\r\n        }\r\n\r\n        callback(urls);\r\n\r\n        /*\r\n        // create html image elements from the data-urls\r\n        for(i = 0, maxi = urls.length; i < maxi; i++){\r\n            imgElement = document.createElement('img');\r\n            imgElement.src = urls[i];\r\n            imgElement.origWidth = imgElement.width;\r\n            imgElement.height = 100;\r\n            imgElements.push(imgElement);\r\n        }\r\n\r\n        callback({\r\n            dataURIs: urls,\r\n            imgElements: imgElements\r\n        });\r\n        */\r\n    }\r\n\r\n\r\n    function encode64(buffer) {\r\n        var binary = '',\r\n            bytes = new Uint8Array(buffer),\r\n            len = bytes.byteLength;\r\n\r\n        for (var i = 0; i < len; i++) {\r\n            binary += String.fromCharCode(bytes[i]);\r\n        }\r\n        return window.btoa(binary);\r\n    }\r\n\r\n    /*\\\r\n    |*|\r\n    |*|  Base64 / binary data / UTF-8 strings utilities\r\n    |*|\r\n    |*|  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Base64_encoding_and_decoding\r\n    |*|\r\n    \\*/\r\n\r\n    /* Array of bytes to base64 string decoding */\r\n\r\n    function b64ToUint6(nChr) {\r\n\r\n        return nChr > 64 && nChr < 91 ?\r\n            nChr - 65\r\n            : nChr > 96 && nChr < 123 ?\r\n                nChr - 71\r\n                : nChr > 47 && nChr < 58 ?\r\n                    nChr + 4\r\n                    : nChr === 43 ?\r\n                        62\r\n                        : nChr === 47 ?\r\n                            63\r\n                            :\r\n                            0;\r\n\r\n    }\r\n\r\n\r\n    function base64DecToArr(sBase64, nBlocksSize) {\r\n\r\n        var\r\n            sB64Enc = sBase64.replace(/[^A-Za-z0-9\\+\\/]/g, \"\"),\r\n            nInLen = sB64Enc.length,\r\n            nOutLen = nBlocksSize ? Math.ceil((nInLen * 3 + 1 >> 2) / nBlocksSize) * nBlocksSize : nInLen * 3 + 1 >> 2,\r\n            taBytes = new Uint8Array(nOutLen);\r\n\r\n        for (var nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\r\n            nMod4 = nInIdx & 3;\r\n            nUint24 |= b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;\r\n            if (nMod4 === 3 || nInLen - nInIdx === 1) {\r\n                for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++ , nOutIdx++) {\r\n                    taBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;\r\n                }\r\n                nUint24 = 0;\r\n\r\n            }\r\n        }\r\n\r\n        return taBytes;\r\n    }\r\n\r\n    /* Base64 string to array encoding */\r\n\r\n    function uint6ToB64(nUint6) {\r\n\r\n        return nUint6 < 26 ?\r\n            nUint6 + 65\r\n            : nUint6 < 52 ?\r\n                nUint6 + 71\r\n                : nUint6 < 62 ?\r\n                    nUint6 - 4\r\n                    : nUint6 === 62 ?\r\n                        43\r\n                        : nUint6 === 63 ?\r\n                            47\r\n                            :\r\n                            65;\r\n\r\n    }\r\n\r\n    function base64EncArr(aBytes) {\r\n\r\n        var nMod3 = 2, sB64Enc = \"\";\r\n\r\n        for (var nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\r\n            nMod3 = nIdx % 3;\r\n            if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0) { sB64Enc += \"\\r\\n\"; }\r\n            nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24);\r\n            if (nMod3 === 2 || aBytes.length - nIdx === 1) {\r\n                sB64Enc += String.fromCharCode(uint6ToB64(nUint24 >>> 18 & 63), uint6ToB64(nUint24 >>> 12 & 63), uint6ToB64(nUint24 >>> 6 & 63), uint6ToB64(nUint24 & 63));\r\n                nUint24 = 0;\r\n            }\r\n        }\r\n\r\n        return sB64Enc.substr(0, sB64Enc.length - 2 + nMod3) + (nMod3 === 2 ? '' : nMod3 === 1 ? '=' : '==');\r\n\r\n    }\r\n\r\n    /* UTF-8 array to DOMString and vice versa */\r\n\r\n    function UTF8ArrToStr(aBytes) {\r\n\r\n        var sView = \"\";\r\n\r\n        for (var nPart, nLen = aBytes.length, nIdx = 0; nIdx < nLen; nIdx++) {\r\n            nPart = aBytes[nIdx];\r\n            sView += String.fromCharCode(\r\n                nPart > 251 && nPart < 254 && nIdx + 5 < nLen ? /* six bytes */\r\n                    /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */\r\n                    (nPart - 252) * 1073741824 + (aBytes[++nIdx] - 128 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                    : nPart > 247 && nPart < 252 && nIdx + 4 < nLen ? /* five bytes */\r\n                        (nPart - 248 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                        : nPart > 239 && nPart < 248 && nIdx + 3 < nLen ? /* four bytes */\r\n                            (nPart - 240 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                            : nPart > 223 && nPart < 240 && nIdx + 2 < nLen ? /* three bytes */\r\n                                (nPart - 224 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                                : nPart > 191 && nPart < 224 && nIdx + 1 < nLen ? /* two bytes */\r\n                                    (nPart - 192 << 6) + aBytes[++nIdx] - 128\r\n                                    : /* nPart < 127 ? */ /* one byte */\r\n                                    nPart\r\n            );\r\n        }\r\n\r\n        return sView;\r\n\r\n    }\r\n\r\n    function strToUTF8Arr(sDOMStr) {\r\n\r\n        var aBytes, nChr, nStrLen = sDOMStr.length, nArrLen = 0;\r\n\r\n        /* mapping... */\r\n\r\n        for (var nMapIdx = 0; nMapIdx < nStrLen; nMapIdx++) {\r\n            nChr = sDOMStr.charCodeAt(nMapIdx);\r\n            nArrLen += nChr < 0x80 ? 1 : nChr < 0x800 ? 2 : nChr < 0x10000 ? 3 : nChr < 0x200000 ? 4 : nChr < 0x4000000 ? 5 : 6;\r\n        }\r\n\r\n        aBytes = new Uint8Array(nArrLen);\r\n\r\n        /* transcription... */\r\n\r\n        for (var nIdx = 0, nChrIdx = 0; nIdx < nArrLen; nChrIdx++) {\r\n            nChr = sDOMStr.charCodeAt(nChrIdx);\r\n            if (nChr < 128) {\r\n                /* one byte */\r\n                aBytes[nIdx++] = nChr;\r\n            } else if (nChr < 0x800) {\r\n                /* two bytes */\r\n                aBytes[nIdx++] = 192 + (nChr >>> 6);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else if (nChr < 0x10000) {\r\n                /* three bytes */\r\n                aBytes[nIdx++] = 224 + (nChr >>> 12);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else if (nChr < 0x200000) {\r\n                /* four bytes */\r\n                aBytes[nIdx++] = 240 + (nChr >>> 18);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else if (nChr < 0x4000000) {\r\n                /* five bytes */\r\n                aBytes[nIdx++] = 248 + (nChr >>> 24);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else /* if (nChr <= 0x7fffffff) */ {\r\n                /* six bytes */\r\n                aBytes[nIdx++] = 252 + (nChr >>> 30);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 24 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n        }\r\n\r\n        return aBytes;\r\n\r\n    }\r\n\r\n    sequencer.protectedScope.addInitMethod(function () {\r\n        context = sequencer.protectedScope.context;\r\n    });\r\n\r\n    // mozilla tools\r\n    sequencer.util.b64ToUint6 = b64ToUint6;\r\n    sequencer.util.base64DecToArr = base64DecToArr;\r\n    sequencer.util.uint6ToB64 = uint6ToB64;\r\n    sequencer.util.base64EncArr = base64EncArr;\r\n    sequencer.util.UTF8ArrToStr = UTF8ArrToStr;\r\n    sequencer.util.strToUTF8Arr = strToUTF8Arr;\r\n    sequencer.util.ajax = ajax;\r\n    sequencer.util.ajax2 = ajax2;\r\n    sequencer.util.parseSamples = parseSamples;\r\n\r\n\r\n    //sequencer.findItem = findItem;\r\n    //sequencer.storeItem = storeItem;\r\n\r\n    sequencer.util.round = round;\r\n    sequencer.util.floor = floor;\r\n    sequencer.util.remap = remap;\r\n    sequencer.util.getRandom = getRandom;\r\n    sequencer.util.createSlider = createSlider;\r\n    sequencer.util.createSlider2 = createSlider2;\r\n    sequencer.util.getRandomNotes = getRandomNotes;\r\n    sequencer.util.getEqualPowerCurve = getEqualPowerCurve;\r\n    sequencer.util.objectForEach = objectForEach;\r\n    sequencer.util.insertLink = insertLink;\r\n    sequencer.util.encode64 = encode64;\r\n\r\n    sequencer.protectedScope.getNoteLengthName = getNoteLengthName;\r\n    sequencer.protectedScope.toBinaryString = toBinaryString;\r\n    sequencer.protectedScope.base64ToBinary = base64ToBinary;\r\n    //sequencer.protectedScope.base64ToBinary = base64DecToArr;\r\n    sequencer.protectedScope.toUint8Array = toUint8Array;\r\n    sequencer.protectedScope.getArguments = getArguments;\r\n    sequencer.protectedScope.pathToArray = pathToArray;\r\n    sequencer.protectedScope.parseUrl = parseUrl;\r\n    sequencer.protectedScope.loadLoop = loadLoop;\r\n\r\n\r\n    sequencer.protectedScope.findItem = findItem;\r\n    sequencer.protectedScope.storeItem = storeItem;\r\n    sequencer.protectedScope.deleteItem = deleteItem;\r\n    sequencer.protectedScope.toBinaryString = toBinaryString;\r\n    sequencer.protectedScope.ajax = ajax;\r\n    sequencer.protectedScope.copyObject = copyObject;\r\n    sequencer.protectedScope.findItemsInFolder = findItemsInFolder;\r\n\r\n\r\n    sequencer.convertPPQ = convertPPQ;\r\n    sequencer.getNiceTime = getNiceTime;\r\n    sequencer.protectedScope.isEmptyObject = isEmptyObject;\r\n    sequencer.protectedScope.objectForEach = objectForEach;\r\n    sequencer.protectedScope.objectToArray = objectToArray;\r\n    sequencer.protectedScope.arrayToObject = arrayToObject;\r\n    sequencer.protectedScope.createClass = createClass;\r\n\r\n    sequencer.protectedScope.clone = clone;\r\n    sequencer.protectedScope.round = round;\r\n    sequencer.protectedScope.floor = floor;\r\n    sequencer.protectedScope.typeString = typeString;\r\n    sequencer.protectedScope.copyName = copyName;\r\n    sequencer.protectedScope.removeFromArray = removeFromArray;\r\n    sequencer.protectedScope.removeFromArray2 = removeFromArray2;\r\n    sequencer.protectedScope.filterItemsByClassName = filterItemsByClassName;\r\n\r\n    sequencer.getMicrosecondsFromBPM = getMicrosecondsFromBPM;\r\n    sequencer.getWaveformData = getWaveformData;\r\n}function closeModule(cb) {\n\n  'use strict';\n\n  var\n    ready = false,\n    readyCallbacks = [],\n    context,\n    initMidi,\n    base64ToBinary;\n\n  sequencer.protectedScope.callInitMethods(); // defined in open_module.js\n  context = sequencer.protectedScope.context; // defined in open_module.js\n  initMidi = sequencer.protectedScope.initMidi; // defined in midi_system.js\n  base64ToBinary = sequencer.protectedScope.base64ToBinary; // defined in util.js\n  delete sequencer.protectedScope; //seal\n\n  function addCleanup() {\n    window.addEventListener('beforeunload', function (event) {\n      // close all MIDI ports\n    });\n  }\n\n  sequencer.ready = function () {\n    return new Promise(resolve => {\n      if (ready === true) {\n        addCleanup();\n        resolve();\n      } else {\n        readyCallbacks.push(() => {\n          addCleanup();\n          resolve();\n        });\n      }\n    })\n  };\n\n  sequencer.addInstrument({\n    name: 'sinewave',\n    folder: 'heartbeat',\n    autopan: false,\n    attack: 200,\n    keyrange: [21, 108],\n    release_duration: 50\n  });\n\n\n  sequencer.addInstrument({\n    name: 'metronome',\n    folder: 'heartbeat',\n    //release_duration: 250,\n    sample_path: 'heartbeat/metronome',\n    keyrange: [60, 61],\n    mapping: {\n      '60': { n: 'lowtick' },\n      '61': { n: 'hightick' }\n    }\n  });\n\n  //console.log(sequencer.os, sequencer.browser);\n\n  // safari supports only mp3 and all other browsers support mp3 among others, so although ogg is a better format, mp3 is the best choice here to cover all browsers\n  // -> but we use wav for the metronome tick to get rid of the padding at the start of a mp3 file\n  sequencer.addSamplePack({\n    name: 'metronome',\n    folder: 'heartbeat',\n    mapping: {\n      'hightick': 'UklGRkQFAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YSAFAACx/xf/dADOACwBsP3p+6H+zAGoBOkCCwBX/EH5OvxlA4kJ2wcSArT9E/ut+HT2evUx98n6OAF5CCUMwQvfCOsJxAx0DSIMEAq9BiAB3vhz7mLkT9sR133YxN2s5QLv0vrUBnwRnxuQJeEsSDCiMd8yFS8aKFIhohUsCKj64u625OraA9HuyPnElcP+wxvJWtW25637VQ0jHPgnBTDDM1o0CzKLK+8hzhgFDOz8Se4J47DYVtG0z5fQq9LB12rfA+j99roHAhelIyMwIjdTOuU8mjwIOGoxhCb5E53/j+3k3/fTY8pTw4y/Tr+ew8DMvdsk8RcHRRkSKO4yGTkHPkU/rzzyNcgsrR94Dp/5r+Zs17zOncoDxhfE38WLyn/TeOMi9r0IRxlRKIQzyTlOPKo9yjmWMcokDRLc/Y7rudtdzu/D2L1Iu+27JcG3yYrVLujl+3UOZx1UK5Q0qzmNPDk8ZjeeMPojzhH+/jLtPd5m0hHLHsYIw5TEMMnA0jvj8fSOBiwXASZgMzM8dUBGQbI+rzjpKkIZygZT9QflcdaRyqXCz7+VwUPH784r3K7s+v0KDu8bvyeLMb43NjrhOIo0dSvQHi0PnP6i7ovg3NTxy4/Gf8X8yH/QBtvX55P2Ygb0FcUjsy4LNmI5ejiXM38r7iC8FJwHPvok7dDgQdaJzlTKIsoFzsrVkuA87d/6qAi7FQ0h9ClKMLEz3TOrMBcqYSD8E9AFd/dS6kTf6dbU0XnQv9IH2MXfZ+ln9DEAFwwdFy8giib6KawqeChgI/UbHBOTCZj/vvXe7InlFuDN3P3b0d1F4gzpifG2+u4D7Qw1FfwbnCD+IlgjWyHLHPMVog2mBL37qvP+7NvnYuTv4rvjfubN6k3wpPZ0/WkEOwtiEUsWcxm+Gl4aOhhiFDAPIwmbAtn7TPVy77zqcefr5YHmHull7enyfPmcAHgHew1REr8Vhhd/F+AV1RJ0DikJWQNc/ZP3efKd7hvs2ur46rHs5u8e9N/48/0hA/8HFgwuD04RSBIREqsQOg7mCssGMAJW/Xn4G/TK8Lbuzu0I7qTvnPJy9sX6bP84BLYIbAwdD84QYxG7EOcODAxwCFMEAQC9+7P3SvTX8XHw+u9R8KTxIvSo9+X7VQCUBJ0IMwziDj4QLhAGD9UMrgnTBZcBRv1v+Xv2UfS+8tfx+vES87z0+vb3+Zf9ZgEQBSEIUArWC8kM2QyzC5EJEAdvBHgBXP5n++r4Avd89Wj07fMw9D31Jvfp+Uj9xQD9A8QG5QhXClELrAsvC9wJ7gd6BWIC3v6O+7T4PPZN9EHzWvNf9Pz1Fvit+qL9rQCHAwEG/weCCZUKFwvDCnIJcAcQBWcCaf8Z/CD55vaB9dD0wPSP9UL3m/k7/Mz+JwEyAw8FzAY7CBsJaQk5CWkI2gatBCICYf+j/Fr6vfiV9872sfZP91z4p/lR+3H9zf89AroEFAfjCP0Jcwo8CjAJdQdgBSEDkgDQ/Vj7ZfnR95T28fUd9v32Vvg2+nb8+/6xAWoE4AbDCP4JpAqbCqQJ0weEBfgCTACT/R37M/m+9672IPY69gb3afhW+tT8qf+MAj0FggcuCScKXAriCcMIEAfyBJYCFwCP/Rz7A/l793z2F/Zn9mH37fjd+i39yf9pAt0EFAfRCNkJGAqrCZYIvgZPBJ8B6P4//M350vdz9q/1lfUq9mz3RPmi+3H+bgFVBOQG3wgHCkwK0Am7CCAHCgWmAjAA',\n      'lowtick': 'UklGRlQFAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YTAFAAB0/5v+U/4T/3gA0wFTAuUB+f8d/nT90f1q/ub+tf46/mb/8wFQA9gC7wCd/mr+FAGRA3cE6wJf/h36evmv+8v/NwRHBZUC2/60+//5EvuZ/aX/bgFOAp8Azvzh9wfzLPF68zT4y/2BAygIfQwaEjYY0x31Irwl8SOWHVESOgPh9NfpReFt22nYHddD2BXcZeDa5InqgPDx9nP+6gS4CBYLnw0zES0WXxv4HkcgLh/1G+EX1RNpD4wKigXH/6r5/fNu7lTpj+Zu5hHoXOtL71byr/Qp91L64v6OBO4JoQ5zEskU+hU1FiQVeRP7EWgP4Qr0BIT+tPid9C3y1vCh8FDxJvK28vvyy/LA8pLzU/XP95v6xvw4/uD/RAK2BSkKcg6BEScTZBMeEqkPTQxjCKEEVwFi/nv7h/hp9aDyAvHP8MfxLvM+9PX0uPW19g/4Lfr7/C4AKgNaBXQGywb0BhIHWQfWB1oIzAjtCF8IHwdtBakDVwKLAeYA8v9w/kj81/nQ94v29/XX9bz1bPUY9Uz1Z/aH+Hr7yP4MAi4F+wcfCnYLNgyfDPsMSw0sDUAMfgrcB5IEMwFb/iX8T/pT+O/1X/Mf8cbvrO+18MLyvfVP+Rf9wgAoBCEHpwnIC5EN4Q5AD3wO1Ay0CpsIvwbvBNcCbQAr/nX8Ofsf+vb4mvda9rj1z/WX9pL3a/hH+ZX6R/wn/vP/eQESA/AE+wYDCcwKFAyPDCkMFQuSCe4HVQbSBHQDCwI8ANL9JPuY+HX28vTq82PzdPMV9Az1MfZ49zD5gftx/sQBBQXLB8cJ/gqpCw8MigwWDXENXQ2rDDUL7QgDBswCdv8S/K74WPVk8hXwou4P7mvu1+9T8pz1Uvli/ZoBwgWRCcsMPg/CEEQR4RDADwoO9wusCVMH4ARSApn/ufzd+Wj3bvX78xzzx/L68qzz1vSD9qX4Gfvd/c0AhwO/BWwHmghvCQEKVQonClsJCwiIBh0F0gOgAm0BOwAx/03+XP0g/Lb6cPmX+F/4vfh++TH6s/os+7/7cvwL/Zz9XP5O/3IA3AF9AzsF9gaUCAAKHgueCzcL9wntB3sF4wIzAI396fp1+Gv2IvWn9N30p/Xi9m74G/ru+9P9k/8aAYEC1AMTBSIG0wYuB1gHkgcACGEISAhTBzEFWAKt/5L92fuU+vX50fmf+SP5i/gb+Bf4mviv+Sr7kvyb/Uj+r/4X/8r/+gCiAo0EUAaRBzwISwjqB3IHGQfCBv8FpgTMApQAKf67+5n5/vfn9jz2yPVn9SL1RPXq9SP3Dvmr+6f+sQGKBAcH+whOCh0Laws3C28KLAmDB5AFfQNoAVP/Zv3e+7P6sfnL+Cv4vPeM95b37feV+Jn51Poq/LL9mv+YAVYD3gQuBmcHSAikCIEI7Af+BuEFngQXA1sBv/9v/pf9MP3W/Fj8q/sR+6H6U/o3+mP6y/pN+/f7xvye/WH+Jf9mAD4CQAQJBisHtgf6Bw0I8QdsB1sGywT4AggBCP/o/KX6mPg19572jfaz9uf2S/cM+E35E/tW/af/5wH1A8AFKgfkB/AHgwfxBlAGgQVIBMMCJwGs/43+vP0i/Zr8Lfzl+9H76fvi+9f75fsf/In8BP10/ej9cf4O/7f/dAAcAaUBEgKMAhgDpAMEBCEEDwTfA3IDxQL8ASoBUwCG/87+J/6h/Rr9pPxk/Gb8oPwJ/XH9w/39/UD+qP41/9D/WwDeAGsBAgKdAhEDQQNAA0sDbwOVA5YDVwPOAhgCVAGRAA=='\n    }\n  });\n\n  // console.log(initMidi);\n\n  sequencer.addTask({\n    type: 'init midi',\n    method: initMidi,\n    params: []\n  }, function () {\n    // setTimeout(function() {\n    readyCallbacks.forEach(function (cb) {\n      cb();\n    });\n    ready = true;\n    console.timeEnd(label);\n    // }, 4000)\n  }, false); // @TODO: check this true | false\n\n  // sequencer.startTaskQueue();\n}\n\nvar label = 'heartbeat ' + version + ', initializing took';\n\nfunction initSequencer() {\n  console.time(label);\n  openModule();\n  assetManager();\n  assetPack();\n  // audioEncoder();\n  audioEvent();\n  audioRecorder();\n  // audioRecordingWorker();\n  audioTrack();\n  channelEffects();\n  eventStatistics();\n  findEvent();\n  instrument();\n  instrumentConfig();\n  keyEditor();\n  keyEditorIteratorFactory();\n  metronome();\n  midiEvent();\n  midiEventNames();\n  midiFile();\n  midiNote();\n  midiParse();\n  midiStream();\n  midiSystem();\n  midiWrite();\n  musicXMLParser();\n  note();\n  parseEvents();\n  parseTimeEvents();\n  part();\n  playhead();\n  position();\n  quantizeFixedLength();\n  sample();\n  samplePack();\n  scheduler();\n  createSequencer();\n  song();\n  songEventListener();\n  songFollowEvent();\n  songGrid();\n  songUpdate();\n  track();\n  transpose();\n  util();\n  closeModule();\n}\n\ninitSequencer();\n\nimport { loadMusicXMLFile } from './load_musicxml_file';\nexport { loadMusicXMLFile };\n\n// hail hail esnext!\nexport default sequencer;"]}